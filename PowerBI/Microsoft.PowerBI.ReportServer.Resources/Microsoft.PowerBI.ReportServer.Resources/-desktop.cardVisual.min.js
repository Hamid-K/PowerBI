"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "cardVisual" ], {
    77434: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            CardVisual: function() {
                return CardVisual;
            },
            CardVisualTiles: function() {
                return CardVisualTiles;
            },
            createCardVisual: function() {
                return createCardVisual;
            }
        });
        var tslib_es6 = __webpack_require__(81337), debug = __webpack_require__(62458), common_fontProperties = __webpack_require__(18664), strokeStyle = __webpack_require__(2241), htmlSubSelectionHelper = __webpack_require__(52287), verticalPosition = __webpack_require__(18765), horizontalPosition = __webpack_require__(92374), imageScalingType = __webpack_require__(48966), legendPosition = __webpack_require__(70700), titleHeading = __webpack_require__(58505), color = __webpack_require__(64067), CssConstants = __webpack_require__(79154), textMeasurementService = __webpack_require__(32041), urlUtils = __webpack_require__(48066), Utility = __webpack_require__(38078), wordBreaker = __webpack_require__(66001), imageType = __webpack_require__(49408), ContentDividerContainerSelector = (0, 
        CssConstants.CH)("contentDividerContainer"), ContentOuterContainerSelector = (0, 
        CssConstants.CH)("contentOuterContainer"), ContentTableSelector = (0, CssConstants.CH)("contentTable"), ContentTableCellSelector = (0, 
        CssConstants.CH)("contentTableCell"), ContentReferenceLabelContainer = (0, CssConstants.CH)("contentReferenceLabels"), ContentReferenceLabelSubContainer = (0, 
        CssConstants.CH)("contentReferenceLabelsSub"), ContentReferenceTextArea = (0, CssConstants.CH)("referenceTextArea"), ContentReferenceAreaTitleContainer = (0, 
        CssConstants.CH)("referenceTextAreaTitleContainer"), ContentReferenceTitle = (0, 
        CssConstants.CH)("title"), ContentReferenceAreaValueContainer = (0, CssConstants.CH)("referenceTextAreaValueContainer"), ContentReferenceValue = (0, 
        CssConstants.CH)("value"), ContentReferenceAreaDetailContainer = (0, CssConstants.CH)("referenceTextAreaDetailContainer"), ContentReferenceDetail = (0, 
        CssConstants.CH)("detail"), ContentContainerSelector = (0, CssConstants.CH)("contentContainer"), ContentCalloutContainerSelector = (0, 
        CssConstants.CH)("contentCalloutContainer"), ContentCalloutOuterContainerSelector = (0, 
        CssConstants.CH)("contentCalloutOuterContainer"), ContentTextContainerSelector = (0, 
        CssConstants.CH)("contentTextContainer"), ContentImageContainerSelector = (0, CssConstants.CH)("contentImageContainer"), ContentSelector = (0, 
        CssConstants.CH)("content"), TextSelector = (0, CssConstants.CH)("text"), ButtonTextSelector = (0, 
        CssConstants.CH)("ui-role-button-text"), SelectedSelector = (0, CssConstants.CH)("selected"), AvailableSpaceFactor = 3 / 4, CardVisualContentRenderer = function() {
            function CardVisualContentRenderer() {}
            return CardVisualContentRenderer.renderCardVisualContent = function(element, cardContents, isSelected) {
                void 0 === isSelected && (isSelected = !1), function(element, contents, isSelected) {
                    contents[0].shapePathString && element.select(".background-image").style("clip-path", 'path("'.concat(contents[0].shapePathString, '")')), 
                    element.selectAll(ContentOuterContainerSelector.selector).data(contents).join(function(enter) {
                        return function(element, isSelected) {
                            var contentOuterContainer = element.append("xhtml:div").classed(ContentOuterContainerSelector.class, !0);
                            return contentOuterContainer.append("xhtml:div").classed(ContentTableSelector.class, !0).append("xhtml:div").classed(ContentTableCellSelector.class, !0).append("xhtml:div").classed(ContentContainerSelector.class, !0).append("xhtml:div").classed(ContentCalloutOuterContainerSelector.class, !0).append("xhtml:div").classed(ContentCalloutContainerSelector.class, !0).append("xhtml:div").classed(ContentTextContainerSelector.class, !0), 
                            updateCardVisualContents(contentOuterContainer, isSelected), contentOuterContainer;
                        }(enter, isSelected);
                    }, function(update) {
                        return updateCardVisualContents(update, isSelected);
                    });
                }(element, [ cardContents = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardContents), {
                    main: cardContents.main.filter(function(textProp) {
                        return textProp.props.show;
                    })
                }) ], isSelected);
            }, CardVisualContentRenderer.alignBaselines = function(element) {
                return function(element) {
                    var cardContent = element.selectAll(ContentOuterContainerSelector.selector);
                    if (0 === cardContent.nodes().length) return !1;
                    var cardDatum = cardContent.datum();
                    if (null == cardDatum) return !1;
                    var cardLabelData = _.find(cardDatum.main, function(textContent) {
                        return "label" === textContent.type;
                    }), textContainers = element.selectAll(ContentTextContainerSelector.selector);
                    if (null == cardLabelData ? void 0 : cardLabelData.props.alignBaselines) {
                        var topTextElements = textContainers.selectAll("".concat(TextSelector.selector, ".top")), maxHeight_1 = 0;
                        if (topTextElements.each(function(d) {
                            debug.fF.assertValue(d.estimatedHeight, "expected estimatedHeight to be set during rendering"), 
                            maxHeight_1 = Math.max(maxHeight_1, d.estimatedHeight);
                        }), maxHeight_1 > 0) return textContainers.style("grid-template-rows", "".concat(maxHeight_1, "px auto")), 
                        !0;
                        debug.fF.assertFail("got a maximum estimated height that was not positive: " + maxHeight_1);
                    }
                    return textContainers.style("grid-template-rows", null), !1;
                }(element);
            }, CardVisualContentRenderer;
        }();
        function updateCardVisualContents(contentOuterContainers, isSelected) {
            return contentOuterContainers.each(function(contents) {
                var _a, contentOuterContainer = d3.select(this), image = contents.imageProps, renderData = function(contents) {
                    var _a, dimensions = contents.dimensionsProps, padding = contents.paddingProps, effectiveViewport = {
                        width: dimensions.width - (padding.leftMargin + padding.rightMargin),
                        height: dimensions.height - (padding.topMargin + padding.bottomMargin)
                    }, verticalAlignment = contents.layoutProp.verticalAlignment, valueProp = contents.main.find(function(type) {
                        return "value" === type.type;
                    }), labelProp = contents.main.find(function(type) {
                        return "label" === type.type;
                    }), contentJustifyContent = "start", contentHorizontalAlignment = (null == valueProp ? void 0 : valueProp.props.horizontalAlignment) || horizontalPosition.D.left, labelAlignment = contentHorizontalAlignment;
                    if (!1 === (null == labelProp ? void 0 : labelProp.props.matchValueAlignment) && (labelAlignment = (null == labelProp ? void 0 : labelProp.props.horizontalAlignment) || labelAlignment), 
                    contentHorizontalAlignment !== labelAlignment) contentJustifyContent = null; else if (valueProp) switch (valueProp.props.horizontalAlignment) {
                      case horizontalPosition.D.left:
                        contentJustifyContent = "start";
                        break;

                      case horizontalPosition.D.right:
                        contentJustifyContent = "end";
                        break;

                      default:
                        contentJustifyContent = "center";
                    }
                    var labelCount = ((null === (_a = _.keys(contents.referenceLabels)) || void 0 === _a ? void 0 : _a.length) || 1) - 1, hasReferenceLabels = contents.forceReferenceLabelDisplay || labelCount > 0, showAsGrid = hasReferenceLabels && contents.dividerProps.strokeShow, contentAlignSelf = "center";
                    switch (contentHorizontalAlignment) {
                      case "right":
                        contentAlignSelf = "end";
                        break;

                      case "center":
                        contentAlignSelf = "center";
                        break;

                      default:
                        contentAlignSelf = "start";
                    }
                    var renderViewModel = {
                        dimensions,
                        effectiveViewport,
                        padding: contents.paddingProps,
                        verticalAlignment,
                        content: {
                            valueProp,
                            labelProp,
                            horizontalAlignment: contentHorizontalAlignment,
                            labelAlignment,
                            justifyContent: contentJustifyContent,
                            alignSelf: contentAlignSelf,
                            spacing: contents.spacingProp.verticalSpacing,
                            labelPosition: null == labelProp ? void 0 : labelProp.props.position
                        }
                    };
                    if (hasReferenceLabels && (showAsGrid || labelCount > 0)) {
                        var layout = contents.referenceLabels.default;
                        debug.fF.assertValue(layout, "no reference label defaults found when reference labels need to be rendered");
                        var showDivider = contents.dividerProps.strokeShow, showBackground = contents.referenceBackground.referenceLabelBackgroundShow && showDivider && contents.dividerProps.ignorePadding, showTabular = "rows" === layout.labelArrangement && "tabular" === layout.labelStyle, dividerPaddingAbove = layout.labelCustomizePadding ? layout.labelPaddingBeforeDivider : layout.labelOuterPadding, dividerPaddingBelow = showDivider ? layout.labelCustomizePadding ? layout.labelPaddingAfterDivider : layout.labelOuterPadding : 0, backgroundColor = (0, 
                        color.WV)(contents.referenceBackground.referenceLabelBackgroundColor.solid.color);
                        backgroundColor.A = (0, color.TD)(contents.referenceBackground.referenceLabelBackgroundTransparancy);
                        var justifySelf = void 0;
                        switch (layout.labelHorizontalAlignment) {
                          case "right":
                            justifySelf = "end";
                            break;

                          case "center":
                            justifySelf = "center";
                            break;

                          default:
                            justifySelf = "start";
                        }
                        renderViewModel.referenceLabel = {
                            showAsGrid,
                            showRight: "right" === layout.labelPosition,
                            showDivider,
                            showBackground,
                            showTabular,
                            containerAlignSelf: vertAlignToAlignment(verticalAlignment),
                            dividerWidth: contents.dividerProps.strokeWidth,
                            dividerIgnoreMargin: contents.dividerProps.ignorePadding,
                            dividerPaddingBefore: dividerPaddingAbove,
                            dividerPaddingAfter: dividerPaddingBelow,
                            backgroundColor,
                            alignSelf: vertAlignToAlignment(layout.labelVerticalAlignment),
                            justifySelf,
                            labelArrangement: layout.labelArrangement,
                            labelCount,
                            labelHorizontalAlignment: layout.labelHorizontalAlignment,
                            labelSpace: layout.labelSpace,
                            labelStyle: layout.labelStyle,
                            calloutSize: contents.layoutProp.calloutSize
                        }, renderViewModel.effectiveViewport = {
                            width: (dimensions.width - padding.leftMargin - padding.rightMargin) / 2,
                            height: (dimensions.height - padding.topMargin - padding.bottomMargin) / 2
                        };
                    }
                    return renderViewModel;
                }(contents), dimensions = renderData.dimensions, padding = renderData.padding, verticalAlignment = renderData.verticalAlignment, content = renderData.content, referenceLabel = renderData.referenceLabel;
                contentOuterContainer.styles({
                    left: "".concat(dimensions.left, "px"),
                    top: "".concat(dimensions.top, "px"),
                    width: "".concat(dimensions.width, "px"),
                    height: "".concat(dimensions.height, "px")
                }), contents.shapePathString && contentOuterContainer.style("clip-path", 'path("'.concat(contents.shapePathString, '")'));
                var contentContainer = contentOuterContainer.select(ContentTableCellSelector.selector).styles({
                    "vertical-align": verticalAlignment,
                    "border-left": "",
                    "border-right": "",
                    "border-top": "",
                    "border-bottom": ""
                }).select(ContentContainerSelector.selector).styles(function(renderData) {
                    var _a, _b, showRefLabelsRight = null === (_a = renderData.referenceLabel) || void 0 === _a ? void 0 : _a.showRight;
                    if (null === (_b = renderData.referenceLabel) || void 0 === _b ? void 0 : _b.showAsGrid) {
                        var calloutString = void 0 !== renderData.referenceLabel.calloutSize ? "".concat(renderData.referenceLabel.calloutSize, "%") : "1fr", layoutPattern = "".concat(calloutString, " ").concat(renderData.referenceLabel.dividerWidth, "px 1fr");
                        return {
                            display: "grid",
                            "grid-template-columns": showRefLabelsRight ? layoutPattern : "1fr",
                            "grid-template-rows": showRefLabelsRight ? "1fr" : layoutPattern,
                            height: "100%"
                        };
                    }
                    return {
                        display: "flex",
                        "flex-direction": showRefLabelsRight ? "row" : "column",
                        "grid-template-columns": null,
                        "grid-template-rows": null,
                        height: null
                    };
                }(renderData)), contentCalloutContainer = contentContainer.select(ContentCalloutOuterContainerSelector.selector).styles({
                    display: "flex",
                    "flex-direction": "column",
                    "align-self": vertAlignToAlignment(renderData.verticalAlignment),
                    width: "100%"
                }).select(ContentCalloutContainerSelector.selector).styles(function(imageProps, renderData) {
                    var imageCalloutContentArrangement = getImageCalloutContentArrangement(imageProps, renderData), flexDirection = imageCalloutContentArrangement.flexDirection, justifyContent = imageCalloutContentArrangement.justifyContent, tilePadding = renderData.padding, padding = "".concat(tilePadding.topMargin, "px ").concat(tilePadding.rightMargin, "px ").concat(tilePadding.bottomMargin, "px ").concat(tilePadding.leftMargin, "px"), horizontalPadding = tilePadding.leftMargin + tilePadding.rightMargin, verticalPadding = tilePadding.topMargin + tilePadding.bottomMargin, width = "space-between" === justifyContent ? "calc(100% - ".concat(horizontalPadding, "px)") : null, height = "calc(100% - ".concat(verticalPadding, "px)");
                    return renderData.referenceLabel && (renderData.referenceLabel.showRight ? (padding = "".concat(tilePadding.topMargin, "px ").concat(renderData.referenceLabel.dividerPaddingBefore, "px ").concat(tilePadding.bottomMargin, "px ").concat(tilePadding.leftMargin, "px"), 
                    horizontalPadding = tilePadding.leftMargin + renderData.referenceLabel.dividerPaddingBefore, 
                    renderData.referenceLabel.showAsGrid || (width = "clamp(20%, ".concat(width || "100%", ", 50%)"))) : padding = "".concat(tilePadding.topMargin, "px ").concat(tilePadding.rightMargin, "px ").concat(renderData.referenceLabel.dividerPaddingBefore, "px ").concat(tilePadding.leftMargin, "px")), 
                    {
                        display: "flex",
                        padding,
                        "justify-content": justifyContent,
                        "flex-direction": flexDirection,
                        "align-self": renderData.content.alignSelf,
                        gap: "".concat(imageProps.padding, "px"),
                        width,
                        height: imageProps.fixedSize && void 0 !== imageProps.fixedSize ? null : height
                    };
                }(image, renderData));
                contentCalloutContainer.selectAll(ContentImageContainerSelector.selector).data(function(imageProps) {
                    var _a;
                    switch (imageProps.imageType) {
                      case imageType._.image:
                        return imageProps.show && !_.isEmpty(null === (_a = imageProps.image) || void 0 === _a ? void 0 : _a.url);

                      case imageType._.imageUrl:
                        return imageProps.show && ((0, urlUtils.gU)(imageProps.imageUrl) || (0, urlUtils.pU)(imageProps.imageUrl));

                      default:
                        debug.fF.assertNever(imageProps.imageType);
                    }
                    return !1;
                }(image) ? [ image ] : []).join("div").attr("class", ContentImageContainerSelector.class).call(updateCardVisualImage, contents.shapePathString, image.position).styles(function(d) {
                    var imageCalloutContentArrangement = getImageCalloutContentArrangement(image, renderData, !0);
                    return d.fixedSize && void 0 !== d.fixedSize ? {
                        "align-self": imageCalloutContentArrangement.alignSelf,
                        "flex-direction": null,
                        maxWidth: null
                    } : d.position === legendPosition.zw.left || d.position === legendPosition.zw.right ? {
                        "align-self": imageCalloutContentArrangement.alignSelf,
                        "flex-direction": imageCalloutContentArrangement.flexDirection,
                        "max-width": imageCalloutContentArrangement.maxWidth
                    } : {
                        "align-self": imageCalloutContentArrangement.alignSelf,
                        "flex-direction": null,
                        "max-width": imageCalloutContentArrangement.maxWidth
                    };
                });
                var contentTextContainer = contentCalloutContainer.select(ContentTextContainerSelector.selector).styles(function(d) {
                    return {
                        "justify-content": content.justifyContent,
                        "flex-grow": content.justifyContent ? null : 1,
                        gap: "".concat(content.spacing, "px"),
                        "flex-basis": !d.imageProps.show || d.imageProps.fixedSize && void 0 !== d.imageProps.fixedSize ? null : "".concat(100 - d.imageProps.imageAreaSize, "%")
                    };
                }), textContents = _.reduce(contents.main, function(textContents, content) {
                    return "value" !== content.type && "label" !== content.type || textContents.push({
                        type: content.type,
                        props: content.props
                    }), textContents;
                }, []);
                textContents = _.sortBy(textContents, function(textContent) {
                    return textContent.type;
                }), contentTextContainer.selectAll(TextSelector.selector).data(textContents, textContentKey).join(function(enter) {
                    return function(element, isSelected, renderData) {
                        var text = element.append(function(d) {
                            return "label" === d.type ? document.createElement((0, titleHeading.cy)(d.props.heading)) : document.createElement("p");
                        }).classed(ContentSelector.class, !0).classed(TextSelector.class, !0).classed(ButtonTextSelector.class, !0);
                        return updateCardVisualText(text, isSelected, renderData), text;
                    }(enter, isSelected, renderData);
                }, function(update) {
                    return updateCardVisualText(update, isSelected, renderData);
                });
                var divider = contents.dividerProps, showRight = null == referenceLabel ? void 0 : referenceLabel.showRight;
                contentContainer.selectAll(ContentDividerContainerSelector.selector).data([ divider ]).join("div").attr("class", ContentDividerContainerSelector.class).style("padding-top", !divider.ignorePadding && showRight ? "".concat(padding.topMargin, "px") : null).style("padding-right", divider.ignorePadding || showRight ? null : "".concat(padding.rightMargin, "px")).style("padding-bottom", !divider.ignorePadding && showRight ? "".concat(padding.bottomMargin, "px") : null).style("padding-left", divider.ignorePadding || showRight ? null : "".concat(padding.leftMargin, "px")).styles(function(d) {
                    return d.strokeShow ? showRight ? {
                        height: "100%"
                    } : {
                        width: "100%"
                    } : {};
                }).selectAll("div").data((null === (_a = renderData.referenceLabel) || void 0 === _a ? void 0 : _a.showAsGrid) ? [ divider ] : []).join(function(enter) {
                    return function(element, showRight) {
                        var cardVisualDivider = element.append("div");
                        return cardVisualDivider.attr("class", "divider"), updateCardVisualDivider(cardVisualDivider, showRight), 
                        cardVisualDivider;
                    }(enter, showRight);
                }, function(update) {
                    return updateCardVisualDivider(update, showRight);
                });
                var options, referenceLabelSubContainer = contentContainer.selectAll(ContentReferenceLabelContainer.selector).data(referenceLabel ? [ referenceLabel ] : []).join("div").attr("class", ContentReferenceLabelContainer.class).style("align-self", function(d) {
                    return d.showAsGrid ? null : d.containerAlignSelf;
                }).style("background-color", function(d) {
                    return d.showBackground ? (0, color.U8)(d.backgroundColor) : null;
                }).selectAll(ContentReferenceLabelSubContainer.selector).data(referenceLabel ? [ referenceLabel ] : []).join("div").attr("class", ContentReferenceLabelSubContainer.class).style("width", function(d) {
                    return "calc(100% - ".concat(d.showRight ? padding.rightMargin + d.dividerPaddingAfter : padding.leftMargin + padding.rightMargin, "px)");
                }).style("padding", function(d) {
                    return d.showRight ? "".concat(padding.topMargin, "px ").concat(padding.rightMargin, "px ").concat(padding.bottomMargin, "px ").concat(d.dividerPaddingAfter, "px") : "".concat(d.dividerPaddingAfter, "px ").concat(padding.rightMargin, "px ").concat(padding.bottomMargin, "px ").concat(padding.leftMargin, "px");
                }).style("text-align", function(d) {
                    return "sentence" === d.labelStyle ? d.labelHorizontalAlignment : null;
                }).style("gap", function(d) {
                    return "".concat(d.labelSpace, "px");
                }).style("place-self", function(d) {
                    return "".concat(d.alignSelf, " ").concat(d.justifySelf);
                }).style("grid-template-columns", function(d) {
                    return "columns" === d.labelArrangement ? "repeat(".concat(d.labelCount, ", minmax(0, 1fr))") : null;
                }), refLabels = _.toArray(_.omit(contents.referenceLabels, "default")), styleTabular = null == referenceLabel ? void 0 : referenceLabel.showTabular;
                styleTabular && (options = _.reduce(contents.referenceLabels, function(acc, label) {
                    return {
                        titleShow: acc.titleShow || label.titleShow,
                        valueShow: acc.valueShow || label.valueShow,
                        detailShow: acc.detailShow || label.detailShow
                    };
                }, {
                    titleShow: !1,
                    detailShow: !1,
                    valueShow: !1
                })), referenceLabelSubContainer.selectAll(ContentReferenceTextArea.selector).data(refLabels).join(function(enter) {
                    return function(element, styleTabular, options) {
                        var referenceLabel = element.append("span").attr("class", ContentReferenceTextArea.class);
                        return referenceLabel.append("span").attr("class", ContentReferenceAreaTitleContainer.class).append("span").attr("class", ContentReferenceTitle.class).classed(TextSelector.class, !0), 
                        referenceLabel.append("span").attr("class", ContentReferenceAreaValueContainer.class).append("span").attr("class", ContentReferenceValue.class).classed(TextSelector.class, !0), 
                        referenceLabel.append("span").attr("class", ContentReferenceAreaDetailContainer.class).append("span").attr("class", ContentReferenceDetail.class).classed(TextSelector.class, !0), 
                        updateCardVisualReferenceLabel(referenceLabel, styleTabular, options), referenceLabel;
                    }(enter, styleTabular, options);
                }, function(update) {
                    return updateCardVisualReferenceLabel(update, styleTabular, options);
                });
            }), contentOuterContainers;
        }
        function textContentKey(textContent) {
            var type = textContent.type, labelProps = textContent.props;
            return labelProps.heading ? "".concat(type).concat(labelProps.heading) : type;
        }
        function updateCardVisualDivider(element, showRight) {
            return element.styles(function(d) {
                return showRight ? {
                    "border-left": (0, strokeStyle.YE)(d),
                    height: "100%"
                } : {
                    "border-top": (0, strokeStyle.YE)(d),
                    width: "100%"
                };
            }), element;
        }
        function updateCardVisualReferenceLabel(element, styleTabular, options) {
            element.styles(function(d) {
                return styleTabular ? {
                    display: "grid",
                    gap: "4px",
                    "grid-template-columns": "".concat(options.titleShow ? "minmax(0, 1fr)" : 0, " ").concat(options.valueShow ? d.labelValueArea + "%" : 0, " ").concat(options.detailShow ? "minmax(0, 1fr)" : 0),
                    "white-space": "nowrap",
                    "overflow-wrap": null
                } : "columns" === d.labelArrangement ? {
                    display: "grid",
                    gap: "4px",
                    "grid-template-columns": null,
                    "white-space": "nowrap",
                    "overflow-wrap": null
                } : {
                    display: null,
                    gap: null,
                    "grid-template-columns": null,
                    "white-space": null,
                    "overflow-wrap": "normal"
                };
            });
            var applySentence = function(d, show) {
                return "rows" === d.labelArrangement && "sentence" === d.labelStyle && show;
            }, titleHeight = null, valueHeight = null, detailHeight = null, rowHeightsInOrder = [];
            return element.select("".concat(ContentReferenceTextArea.selector, "  > span").concat(ContentReferenceAreaTitleContainer.selector)).each(function(d) {
                var settings, titleTextProperties, titleTextHeight, valueTextProperties, valueTextHeight, detailTextProperties, detailTextHeight;
                d.titleShow && "columns" === d.labelArrangement ? titleHeight = collectLabelHeights(d.titleFontProperties, titleHeight) : "tabular" === d.labelStyle && rowHeightsInOrder.push((titleTextProperties = (0, 
                common_fontProperties.qk)((settings = d).titleFontProperties), titleTextHeight = textMeasurementService.b.estimateSvgTextHeight(titleTextProperties), 
                valueTextProperties = (0, common_fontProperties.qk)(settings.valueFontProperties), 
                valueTextHeight = textMeasurementService.b.estimateSvgTextHeight(valueTextProperties), 
                detailTextProperties = (0, common_fontProperties.qk)(settings.detailFontProperties), 
                detailTextHeight = textMeasurementService.b.estimateSvgTextHeight(detailTextProperties), 
                Math.max(settings.titleShow ? titleTextHeight : 0, settings.valueShow ? valueTextHeight : 0, settings.detailShow ? detailTextHeight : 0)));
            }).styles(function(d, i) {
                var height = formatReferenceLabelContainerHeight(titleHeight, rowHeightsInOrder[i], d.labelArrangement, d.labelStyle), justifyContent = getJustifyContent(d.labelHorizontalAlignment, d.labelStyle, d.labelArrangement, !1);
                return {
                    height,
                    display: "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "flex" : null,
                    "align-items": "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "end" : null,
                    overflow: "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "hidden" : null,
                    "justify-content": justifyContent
                };
            }), element.select("".concat(ContentReferenceTextArea.selector, "  > ").concat(ContentReferenceAreaTitleContainer.selector, " > span").concat(ContentReferenceTitle.selector)).classed("spaced", function(d) {
                return applySentence(d, d.titleShow);
            }).classed("sentence", function(d) {
                return applySentence(d, !0);
            }).styles(function(d, i) {
                var referenceLabelFontProperties = d.titleFontProperties, transparency = d.titleTransparency, lineHeight = getReferenceLabelLineHeight(referenceLabelFontProperties, titleHeight, rowHeightsInOrder[i], d.labelArrangement, d.labelStyle);
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, (0, common_fontProperties.wB)(referenceLabelFontProperties)), {
                    opacity: (0, color.TD)(transparency),
                    "text-align": "tabular" === d.labelStyle ? "start" : null,
                    overflow: "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "hidden" : null,
                    "text-overflow": "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "ellipsis" : null,
                    "line-height": lineHeight
                });
            }).text(function(d) {
                return getReferenceLabelText(d.labelArrangement, d.labelStyle, d.titleShow, d.title);
            }), element.select("".concat(ContentReferenceTextArea.selector, "  > span").concat(ContentReferenceAreaValueContainer.selector)).each(function(d) {
                d.valueShow && "columns" === d.labelArrangement && (valueHeight = collectLabelHeights(d.valueFontProperties, valueHeight));
            }).styles(function(d, i) {
                var height = formatReferenceLabelContainerHeight(valueHeight, rowHeightsInOrder[i], d.labelArrangement, d.labelStyle), justifyContent = getJustifyContent(d.labelHorizontalAlignment, d.labelStyle, d.labelArrangement, !0);
                return {
                    height,
                    display: "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "flex" : null,
                    "align-items": "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "end" : null,
                    overflow: "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "hidden" : null,
                    "justify-content": justifyContent
                };
            }), element.select("".concat(ContentReferenceTextArea.selector, " > span").concat(ContentReferenceAreaValueContainer.selector, " > span").concat(ContentReferenceValue.selector)).classed("spaced", function(d) {
                return applySentence(d, d.valueShow);
            }).classed("sentence", function(d) {
                return applySentence(d, !0);
            }).classed("textType", function(d) {
                return !!d.valueType.text;
            }).styles(function(d, i) {
                var referenceLabelFontProperties = d.valueFontProperties, transparency = d.valueTransparency, lineHeight = getReferenceLabelLineHeight(referenceLabelFontProperties, valueHeight, rowHeightsInOrder[i], d.labelArrangement, d.labelStyle);
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, (0, common_fontProperties.wB)(referenceLabelFontProperties)), {
                    opacity: (0, color.TD)(transparency),
                    "text-align": "tabular" === d.labelStyle ? "end" : null,
                    overflow: "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "hidden" : null,
                    "text-overflow": "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "ellipsis" : null,
                    "line-height": lineHeight
                });
            }).text(function(d) {
                return getReferenceLabelText(d.labelArrangement, d.labelStyle, d.valueShow, d.value);
            }), element.select("".concat(ContentReferenceTextArea.selector, " > span").concat(ContentReferenceAreaDetailContainer.selector)).each(function(d) {
                d.detailShow && "columns" === d.labelArrangement && (detailHeight = collectLabelHeights(d.detailFontProperties, detailHeight));
            }).styles(function(d, i) {
                var height = formatReferenceLabelContainerHeight(detailHeight, rowHeightsInOrder[i], d.labelArrangement, d.labelStyle), justifyContent = getJustifyContent(d.labelHorizontalAlignment, d.labelStyle, d.labelArrangement, !1);
                return {
                    display: "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "flex" : null,
                    "align-self": "tabular" === d.labelStyle ? "end" : null,
                    overflow: "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "hidden" : null,
                    "text-overflow": "tabular" === d.labelStyle ? "ellipsis" : null,
                    "align-items": "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "end" : null,
                    height,
                    "justify-content": justifyContent
                };
            }), element.select("".concat(ContentReferenceTextArea.selector, " > span").concat(ContentReferenceAreaDetailContainer.selector, " > span").concat(ContentReferenceDetail.selector)).styles(function(d, i) {
                var referenceLabelFontProperties = d.detailFontProperties, lineHeight = getReferenceLabelLineHeight(referenceLabelFontProperties, detailHeight, rowHeightsInOrder[i], d.labelArrangement, d.labelStyle), rgbStringDetailBgColor = function(detailTransparency, detailBackgroundColor, detailShow) {
                    var transparency = detailTransparency;
                    if (detailBackgroundColor) {
                        var detailBgColor = (0, color.WV)(detailBackgroundColor);
                        if (detailBgColor.A = (0, color.TD)(transparency), detailShow) return (0, color.U8)(detailBgColor);
                    }
                    return null;
                }(d.detailTransparency, d.detailBackgroundColor, d.detailShow);
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, (0, common_fontProperties.wB)(referenceLabelFontProperties)), {
                    overflow: "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "hidden" : null,
                    "text-overflow": "tabular" === d.labelStyle || "columns" === d.labelArrangement ? "ellipsis" : null,
                    "line-height": lineHeight,
                    "background-color": rgbStringDetailBgColor
                });
            }).text(function(d) {
                return d.detailShow ? d.detailValue : "";
            }), element;
        }
        function collectLabelHeights(labelFontProperties, labelHeight) {
            var textProperties = (0, common_fontProperties.qk)(labelFontProperties), textHeight = textMeasurementService.b.estimateSvgTextHeight(textProperties);
            return textHeight > labelHeight ? textHeight : labelHeight;
        }
        function formatReferenceLabelContainerHeight(labelHeight, rowHeight, labelArrangement, labelStyle) {
            return "columns" === labelArrangement ? "".concat(labelHeight, "px") : "tabular" === labelStyle ? "".concat(rowHeight, "px") : null;
        }
        function getReferenceLabelLineHeight(labelFontProperties, labelHeight, rowHeight, labelArrangement, labelStyle) {
            if ("tabular" === labelStyle || "columns" === labelArrangement) {
                var heightRatio, textProperties = (0, common_fontProperties.qk)(labelFontProperties), textHeight = textMeasurementService.b.estimateSvgTextHeight(textProperties);
                return (heightRatio = "columns" === labelArrangement ? labelHeight / textHeight : rowHeight / textHeight) > 1.2 ? "".concat(heightRatio) : "normal";
            }
            return null;
        }
        function getReferenceLabelText(labelArrangement, labelStyle, labelShow, labelText) {
            return "sentence" === labelStyle && "rows" === labelArrangement && labelShow && labelText && "" !== labelText ? "".concat(labelText, " ") : labelShow && labelText ? labelText : "";
        }
        function getJustifyContent(horizontalAlignment, style, arrangement, value) {
            if ("tabular" === style) return value ? "flex-end" : "flex-start";
            if ("columns" === arrangement) switch (horizontalAlignment) {
              case horizontalPosition.D.right:
                return "flex-end";

              case "center":
                return horizontalPosition.D.center;

              default:
                return "flex-start";
            }
            return null;
        }
        function calloutAlignment(horizontalAlignment, flip, imagePosition, imageAlignment) {
            switch (horizontalAlignment) {
              case horizontalPosition.D.left:
                return imagePosition !== legendPosition.zw.right || imageAlignment ? imagePosition === legendPosition.zw.right && imageAlignment || flip ? "flex-end" : "flex-start" : "space-between";

              case horizontalPosition.D.center:
                return "center";

              case horizontalPosition.D.right:
                return imagePosition !== legendPosition.zw.left || imageAlignment ? imagePosition === legendPosition.zw.left && imageAlignment || flip ? "flex-start" : "flex-end" : "space-between";
            }
            return "flex-start";
        }
        function vertAlignToAlignment(verticalAlignment) {
            switch (verticalAlignment) {
              case verticalPosition.Q4.bottom:
                return "end";

              case verticalPosition.Q4.middle:
                return "center";

              default:
                return "start";
            }
        }
        function getImageCalloutContentArrangement(imageProps, renderData, imageAlignment) {
            var flexDirection, alignSelf = null, justifyContent = null, maxWidth = null, imageHorizontalAlignment = imageProps.horizontalAlignment, calloutHorizontalAlignment = renderData.content.horizontalAlignment, imageVerticalAlignment = imageProps.verticalAlignment, calloutVerticalAlignment = renderData.verticalAlignment, contentImageContainerMaxWidth = function(imageProps, renderData) {
                if (imageProps.position !== legendPosition.zw.top && imageProps.position !== legendPosition.zw.bottom) return null;
                if (!imageProps.fixedSize || void 0 === imageProps.fixedSize) {
                    var imageWidth = renderData.dimensions.width * (renderData.referenceLabel && renderData.referenceLabel.showRight ? renderData.referenceLabel.calloutSize / 100 : 1);
                    return (imageWidth -= renderData.padding.leftMargin + (renderData.referenceLabel && renderData.referenceLabel.showDivider ? renderData.referenceLabel.dividerPaddingBefore : renderData.padding.rightMargin)) * (imageProps.fixedSize && void 0 !== imageProps.fixedSize ? 1 : imageProps.imageAreaSize / 100);
                }
            }(imageProps, renderData);
            switch (imageProps.position) {
              case legendPosition.zw.left:
                justifyContent = calloutAlignment(calloutHorizontalAlignment, !0, imageProps.position, imageAlignment), 
                alignSelf = vertAlignToAlignment(imageVerticalAlignment), flexDirection = "row-reverse";
                break;

              case legendPosition.zw.right:
                justifyContent = calloutAlignment(calloutHorizontalAlignment, !1, imageProps.position, imageAlignment), 
                alignSelf = vertAlignToAlignment(imageVerticalAlignment), flexDirection = "row";
                break;

              case legendPosition.zw.top:
                justifyContent = imageProps.fixedSize && void 0 !== imageProps.fixedSize ? null : vertAlignToAlignment(calloutVerticalAlignment), 
                alignSelf = calloutAlignment(imageHorizontalAlignment), flexDirection = "column-reverse", 
                maxWidth = null !== contentImageContainerMaxWidth ? "".concat(contentImageContainerMaxWidth, "px") : null;
                break;

              case legendPosition.zw.bottom:
                justifyContent = imageProps.fixedSize && void 0 !== imageProps.fixedSize ? null : vertAlignToAlignment(calloutVerticalAlignment), 
                alignSelf = calloutAlignment(imageHorizontalAlignment), flexDirection = "column", 
                maxWidth = null !== contentImageContainerMaxWidth ? "".concat(contentImageContainerMaxWidth, "px") : null;
                break;

              default:
                debug.fF.assertNever(imageProps.position), justifyContent = "flex-start", flexDirection = "row";
            }
            return {
                alignSelf,
                justifyContent,
                flexDirection,
                maxWidth
            };
        }
        function updateCardVisualImage(element, shapePathString) {
            var getImageSource = function(image) {
                switch (image.imageType) {
                  case imageType._.image:
                    return Utility.b$.encodeUriForImageDataSvg(image.image.url);

                  case imageType._.imageUrl:
                    return Utility.b$.encodeUriForImageDataSvg(image.imageUrl);

                  default:
                    debug.fF.assertNever(image.imageType);
                }
            }, imageIsStretched = function(image) {
                var _a;
                return "image" === image.imageType && (null === (_a = image.image) || void 0 === _a ? void 0 : _a.scaling) !== imageScalingType.C.normal;
            };
            element.styles(function(d) {
                return d.fixedSize && void 0 !== d.fixedSize || "Right" !== d.position && "Left" !== d.position ? {
                    "flex-basis": null,
                    display: null
                } : {
                    "flex-basis": "".concat(d.imageAreaSize, "%"),
                    display: "flex"
                };
            }), element.selectAll("img").data(function(d) {
                return imageIsStretched(d) ? [] : [ d ];
            }).join("img").attr("src", getImageSource).attr("referrerpolicy", "no-referrer").attr("alt-text", function(d) {
                return d.altText;
            }).style("opacity", function(d) {
                return (0, color.TD)(d.transparency);
            }).styles(function(d) {
                return d.fixedSize || void 0 === d.fixedSize ? {
                    overflow: null,
                    "max-width": null == d.size ? "calc(100% - ".concat(2 * d.padding, "px)") : null,
                    width: null == d.size ? null : "".concat(d.size, "px"),
                    "max-height": null == d.size ? null : "".concat(d.size, "px"),
                    height: null == d.size ? "auto" : null,
                    "object-fit": null
                } : "Top" === d.position || "Bottom" === d.position ? {
                    overflow: "hidden",
                    "max-width": "100%",
                    width: null,
                    "max-height": null,
                    height: null,
                    "object-fit": "scale-down"
                } : {
                    overflow: null,
                    "max-width": "100%",
                    width: null,
                    "max-height": null,
                    height: null,
                    "object-fit": "scale-down"
                };
            }), element.selectAll("div").data(function(d) {
                return imageIsStretched(d) ? [ d ] : [];
            }).join("div").style("height", function(d) {
                return null == d.size ? "50px" : "".concat(d.size, "px");
            }).style("width", function(d) {
                return null == d.size ? "50px" : "".concat(d.size, "px");
            }).style("background-image", function(d) {
                return "url(".concat(getImageSource(d), ")");
            }).style("background-size", function(d) {
                switch (d.image.scaling) {
                  case imageScalingType.C.fit:
                    return "100% 100%";

                  case imageScalingType.C.fill:
                    return "cover";

                  default:
                    return "contain";
                }
            }).style("opacity", function(d) {
                return (0, color.TD)(d.transparency);
            });
        }
        function updateCardVisualText(textElement, isSelected, renderData) {
            return textElement.attr("style", null), textElement.styles(function(d) {
                var _a, _b = d.props, text = _b.text, fontProperties = _b.fontProperties, transparency = _b.transparency, textWrap = _b.textWrap, textProperties = (0, 
                common_fontProperties.qk)(fontProperties), textHeight = textMeasurementService.b.estimateSvgTextHeight(textProperties);
                textProperties.text = text;
                var isNumericType = !!(null === (_a = d.props.type) || void 0 === _a ? void 0 : _a.numeric), linesBroken = 1;
                if (textWrap && !isNumericType) {
                    var maxNumLines = Math.max(Math.floor(renderData.effectiveViewport.height * AvailableSpaceFactor / textHeight), 1);
                    linesBroken = wordBreaker.ql(text, textProperties, textMeasurementService.b.measureSvgTextWidth, renderData.effectiveViewport.width, maxNumLines, void 0, !isNumericType, !0).length || 1;
                }
                d.estimatedHeight = linesBroken * textHeight;
                var horizontalAlignment = "value" === d.type ? renderData.content.horizontalAlignment : renderData.content.labelAlignment;
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, (0, common_fontProperties.wB)(fontProperties)), {
                    opacity: (0, color.TD)(transparency),
                    "text-align": horizontalAlignment,
                    display: "-webkit-box",
                    "-webkit-line-clamp": linesBroken,
                    "-webkit-box-orient": "vertical",
                    overflow: "hidden",
                    "white-space": "value" !== d.type || textWrap ? null : "normal"
                });
            }).classed(htmlSubSelectionHelper.cy, !0).attr(htmlSubSelectionHelper.Ez, function(d) {
                return "label" === d.type ? "".concat("callout-label", "_").concat(d.props.instanceId) : "".concat("callout-value", "_").concat(d.props.instanceId);
            }).attr(htmlSubSelectionHelper.CK, function(d) {
                return "label" === d.type ? "Visual_Gauge_CalloutLabel" : "Visual_Gauge_CalloutValue";
            }).attr(htmlSubSelectionHelper.QZ, function(d) {
                return "label" === d.type ? 1 : 2;
            }).classed(SelectedSelector.class, isSelected).classed("top", function(d) {
                return isTopClass(renderData.content.labelPosition, d.type);
            }).classed("bottom", function(d) {
                return !isTopClass(renderData.content.labelPosition, d.type);
            }).text(function(d) {
                return d.props.text;
            }), textElement;
        }
        function isTopClass(labelPosition, type) {
            return "belowValue" === labelPosition && "value" === type || "aboveValue" === labelPosition && "label" === type;
        }
        var tileLibraryConverter = __webpack_require__(78558), cardVisual_capabilities = __webpack_require__(44364), common_colorHelper = __webpack_require__(90120), units = __webpack_require__(32105), contentTypes = __webpack_require__(63369), strokePattern = __webpack_require__(47316), navigatorOrientation = __webpack_require__(51322), overFlowStyle = __webpack_require__(57695), overFlowDirection = __webpack_require__(5874), paddingOptions = __webpack_require__(26570), shapeType = __webpack_require__(67741), layoutStyleType = __webpack_require__(8054), labelArrangement = __webpack_require__(1327), calloutRelativePosition = __webpack_require__(11197), cardVisualPositioning = __webpack_require__(72704), labelLayoutStyle = __webpack_require__(92833), speechBubbleTailPosition = __webpack_require__(18989), colorHelper = __webpack_require__(44783), fontUtils = __webpack_require__(38265), visualData = __webpack_require__(58098), dataViewObject2 = __webpack_require__(82755), valueFormatter = __webpack_require__(72489);
        function getValueDefaults(style, colorHelper) {
            var textDefaults = getTextDefaults(style, colorHelper);
            return {
                default: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, textDefaults.default), {
                    labelDisplayUnits: 0,
                    labelPrecision: void 0,
                    customFormatString: void 0,
                    showBlankAs: "--",
                    fontProperties: (0, common_fontProperties.Zi)(void 0, {
                        color: cardVisual_capabilities.pz.fontColor,
                        size: cardVisual_capabilities.pz.fontSize,
                        family: cardVisual_capabilities.pz.fontFamily
                    }, colorHelper, style, "foreground", "callout", {
                        color: common_colorHelper.v.getThemeColor(style, "foreground"),
                        size: units.B.createFromPt(18),
                        family: fontUtils.Wn.bold.css
                    }, !0),
                    valueType: void 0
                })
            };
        }
        function getTextDefaults(style, colorHelper, _hostServices) {
            return {
                default: {
                    show: !0,
                    text: void 0,
                    heading: titleHeading.cm.Heading4,
                    verticalAlignment: verticalPosition.Q4.middle,
                    horizontalAlignment: horizontalPosition.D.left,
                    rotation: 0,
                    position: cardVisualPositioning.A.AboveValue,
                    transparency: 0,
                    textWrap: !1,
                    alignBaselines: !0,
                    fontProperties: (0, common_fontProperties.Zi)(void 0, {
                        color: cardVisual_capabilities.pz.fontColor,
                        size: cardVisual_capabilities.pz.fontSize,
                        family: cardVisual_capabilities.pz.fontFamily
                    }, colorHelper, style, "foregroundNeutralSecondary", "largeLightLabel", {
                        color: common_colorHelper.v.getThemeColor(style, "foregroundNeutralSecondary"),
                        size: units.B.createFromPt(18),
                        family: fontUtils.Wn.regular.css
                    }, !0),
                    matchValueAlignment: !0
                }
            };
        }
        function getFillDefaults(style) {
            return {
                default: {
                    show: !0,
                    fillColor: style.colorPalette.background.value,
                    fillTransparency: 0,
                    fillImage: void 0,
                    fillImageTransparency: 0,
                    fillImageSplitTransparency: !0
                },
                hover: {
                    fillColor: style.colorPalette.backgroundLight.value
                },
                press: {
                    fillColor: style.colorPalette.backgroundNeutral.value
                },
                selected: {
                    fillColor: style.colorPalette.foreground.value
                }
            };
        }
        function getOutlineDefaults(style, layoutStyle) {
            return {
                default: {
                    strokeShow: layoutStyle !== layoutStyleType.i.Table,
                    strokeColor: style.colorPalette.foregroundNeutralTertiary.value,
                    strokeWidth: 1,
                    strokeTransparency: 0,
                    strokePattern: strokePattern.kY.solid
                }
            };
        }
        function getShapeDefaults() {
            return {
                default: {
                    tileShape: shapeType.m.Rectangle,
                    rotation: 0,
                    shapeRounding: 0,
                    linecapType: void 0,
                    arrowheadSize: 50,
                    arrowStemWidth: 25,
                    chevronAngle: 90,
                    isocelesTriangleTipPosition: 50,
                    parallelogramSlant: 100 / 3,
                    trapezoidSlant: 40,
                    hexagonSlant: 200 / 3,
                    octagonSnipSize: 100 / 3,
                    speechBubbleHeight: 10,
                    speechBubbleTailPosition: speechBubbleTailPosition.R5,
                    speechBubbleTailAngle: 90,
                    rectangleRoundedCurve: 25,
                    rectangleRoundedCurveCustomStyle: !1,
                    rectangleRoundedCurveLeftTop: 0,
                    rectangleRoundedCurveRightTop: 0,
                    rectangleRoundedCurveLeftBottom: 0,
                    rectangleRoundedCurveRightBottom: 0,
                    tabCutCornerSnipSizeTopRight: 25,
                    tabCutCornerSnipSizeTop: 25,
                    tabCutCornerSnipSizeBottom: 0,
                    tabRoundCornerTopRight: 25,
                    tabRoundCornerTop: 25,
                    tabRoundCornerBottom: 0,
                    tabCutCornerSnipSizeCustomStyle: !1,
                    tabCutCornerSnipSizeLeftTop: 0,
                    tabCutCornerSnipSizeRightTop: 0,
                    tabCutCornerSnipSizeLeftBottom: 0,
                    tabCutCornerSnipSizeRightBottom: 0
                }
            };
        }
        function getShadowDefaults(style) {
            return {
                default: {
                    show: !1,
                    shadowColor: style.colorPalette.foreground.value,
                    shadowTransparency: 70,
                    shadowBlur: 20,
                    shadowPositionPreset: "bottomRight",
                    shadowAngle: 135,
                    shadowDistance: 10,
                    position: "Outer",
                    shadowSpread: 3
                }
            };
        }
        function getGlowDefaults(style) {
            return {
                default: {
                    show: !1,
                    glowColor: common_colorHelper.v.getDataColorByIndex(style, 0, colorHelper.fA),
                    glowTransparency: 70,
                    glowBlur: 40,
                    glowPositionPreset: "center",
                    glowAngle: 135,
                    glowDistance: 10,
                    position: "Outer",
                    glowSpread: 3
                }
            };
        }
        function getReferenceLabelDefaults(style, colorHelper) {
            return {
                default: {
                    titleShow: !0,
                    title: void 0,
                    titleContent: contentTypes.Vm,
                    titleFontProperties: (0, common_fontProperties.Zi)(void 0, {
                        color: cardVisual_capabilities.pz.titleFontColor,
                        size: cardVisual_capabilities.pz.fontSize,
                        family: cardVisual_capabilities.pz.fontFamily
                    }, colorHelper, style, "foreground", "largeLabel", {
                        color: common_colorHelper.v.getThemeColor(style, "foreground"),
                        size: units.B.createFromPt(12),
                        family: fontUtils.Wn.regular.css
                    }, !0),
                    titleTransparency: 0,
                    valueShow: !0,
                    value: void 0,
                    valueFontProperties: (0, common_fontProperties.Zi)(void 0, {
                        color: cardVisual_capabilities.pz.titleFontColor,
                        size: cardVisual_capabilities.pz.fontSize,
                        family: cardVisual_capabilities.pz.fontFamily
                    }, colorHelper, style, "foreground", "largeLabel", {
                        color: common_colorHelper.v.getThemeColor(style, "foreground"),
                        size: units.B.createFromPt(12),
                        family: fontUtils.Wn.regular.css
                    }, !0),
                    valueTransparency: 0,
                    showBlankAs: "--",
                    valueDisplayUnits: 0,
                    valuePrecision: void 0,
                    detailShow: !1,
                    detailValue: void 0,
                    detailFontProperties: (0, common_fontProperties.Zi)(void 0, {
                        color: cardVisual_capabilities.pz.titleFontColor,
                        size: cardVisual_capabilities.pz.fontSize,
                        family: cardVisual_capabilities.pz.fontFamily
                    }, colorHelper, style, "foreground", "largeLabel", {
                        color: common_colorHelper.v.getThemeColor(style, "foreground"),
                        size: units.B.createFromPt(12),
                        family: fontUtils.Wn.regular.css
                    }, !0),
                    detailTransparency: 0,
                    detailshowBlankAs: "--",
                    detailDisplayUnits: 0,
                    detailPrecision: void 0,
                    detailBackgroundColor: void 0,
                    detailCustomFormatString: void 0,
                    valueCustomFormatString: void 0,
                    detailType: void 0,
                    valueType: void 0,
                    labelPosition: calloutRelativePosition.F.below,
                    labelArrangement: labelArrangement.g.rows,
                    labelStyle: labelLayoutStyle.L.sentence,
                    labelHorizontalAlignment: horizontalPosition.D.left,
                    labelVerticalAlignment: verticalPosition.Q4.top,
                    labelValueArea: 50,
                    labelTextWrap: !1,
                    labelSpace: 2,
                    labelOuterPadding: 12,
                    labelCustomizePadding: !1,
                    labelPaddingBeforeDivider: 12,
                    labelPaddingAfterDivider: 12
                }
            };
        }
        function getDividerDefaults(style) {
            return {
                default: {
                    strokeShow: !0,
                    strokeColor: style.colorPalette.foregroundNeutralDark.value,
                    strokeTransparency: 0,
                    strokePattern: strokePattern.kY.solid,
                    strokeWidth: 1,
                    ignorePadding: !0
                }
            };
        }
        function getReferenceLabelBackgroundDefaults(style) {
            return {
                default: {
                    referenceLabelBackgroundColor: {
                        solid: {
                            color: style.colorPalette.backgroundLight.value
                        }
                    },
                    referenceLabelBackgroundShow: !0,
                    referenceLabelBackgroundTransparancy: 0
                }
            };
        }
        var referenceBackgroundProps = {
            props: {
                referenceLabelBackgroundColor: cardVisual_capabilities.L$.referenceLabel.backgroundColor,
                referenceLabelBackgroundTransparancy: cardVisual_capabilities.L$.referenceLabel.backgroundTransparency,
                referenceLabelBackgroundShow: cardVisual_capabilities.L$.referenceLabel.backgroundShow
            },
            repetitionProps: {
                colorProps: {
                    referenceLabelBackgroundColor: cardVisual_capabilities.L$.referenceLabel.backgroundColor
                }
            }
        }, dividerProps = {
            props: {
                ignorePadding: cardVisual_capabilities.L$.divider.dividerIgnorePadding,
                strokePattern: cardVisual_capabilities.L$.divider.dividerLineStyle,
                strokeShow: cardVisual_capabilities.L$.divider.show,
                strokeWidth: cardVisual_capabilities.L$.divider.dividerWidth,
                strokeTransparency: cardVisual_capabilities.L$.divider.dividerTransparency
            },
            colorProps: {
                strokeColor: cardVisual_capabilities.L$.divider.dividerColor
            },
            repetitionProps: {
                colorProps: {
                    strokeColor: cardVisual_capabilities.L$.divider.dividerColor
                }
            }
        }, referenceLabelProps = {
            props: {
                title: cardVisual_capabilities.L$.referenceLabelTitle.titleText,
                titleShow: cardVisual_capabilities.L$.referenceLabelTitle.show,
                titleTransparency: cardVisual_capabilities.L$.referenceLabelTitle.titleTransparency,
                titleContent: cardVisual_capabilities.L$.referenceLabelTitle.titleContentType,
                valueShow: cardVisual_capabilities.L$.referenceLabelValue.show,
                valueDisplayUnits: cardVisual_capabilities.L$.referenceLabelValue.valueDisplayUnits,
                valuePrecision: cardVisual_capabilities.L$.referenceLabelValue.valuePrecision,
                showBlankAs: cardVisual_capabilities.L$.referenceLabelValue.showBlankAs,
                valueTransparency: cardVisual_capabilities.L$.referenceLabelValue.valueTransparency,
                detailShow: cardVisual_capabilities.L$.referenceLabelDetail.show,
                detailTransparency: cardVisual_capabilities.L$.referenceLabelDetail.detailTransparency,
                detailPrecision: cardVisual_capabilities.L$.referenceLabelDetail.detailPrecision,
                detailshowBlankAs: cardVisual_capabilities.L$.referenceLabelDetail.showBlankAs,
                detailDisplayUnits: cardVisual_capabilities.L$.referenceLabelDetail.detailDisplayUnits,
                labelPosition: cardVisual_capabilities.L$.referenceLabelLayout.position,
                labelArrangement: cardVisual_capabilities.L$.referenceLabelLayout.arrangement,
                labelStyle: cardVisual_capabilities.L$.referenceLabelLayout.style,
                labelHorizontalAlignment: cardVisual_capabilities.L$.referenceLabelLayout.horizontalAlignment,
                labelVerticalAlignment: cardVisual_capabilities.L$.referenceLabelLayout.verticalAlignment,
                labelValueArea: cardVisual_capabilities.L$.referenceLabelLayout.valueArea,
                labelTextWrap: cardVisual_capabilities.L$.referenceLabelLayout.textWrap,
                labelSpace: cardVisual_capabilities.L$.referenceLabelLayout.labelSpace,
                labelOuterPadding: cardVisual_capabilities.L$.referenceLabelLayout.outerPadding,
                labelCustomizePadding: cardVisual_capabilities.L$.referenceLabelLayout.customizePadding,
                labelPaddingBeforeDivider: cardVisual_capabilities.L$.referenceLabelLayout.paddingBeforeDivider,
                labelPaddingAfterDivider: cardVisual_capabilities.L$.referenceLabelLayout.paddingAfterDivider,
                detailCustomFormatString: cardVisual_capabilities.L$.referenceLabelDetail.customFormatString,
                valueCustomFormatString: cardVisual_capabilities.L$.referenceLabelValue.customFormatString
            },
            colorProps: {
                detailBackgroundColor: cardVisual_capabilities.L$.referenceLabelDetail.detailBackgroundColor
            },
            fontProps: {
                titleFontProperties: {
                    objectName: cardVisual_capabilities.L$.referenceLabelTitle.titleFontColor.objectName,
                    propertyNames: {
                        color: cardVisual_capabilities.pz.titleFontColor,
                        bold: cardVisual_capabilities.pz.titleBold,
                        family: cardVisual_capabilities.pz.titleFontFamily,
                        italic: cardVisual_capabilities.pz.titleItalic,
                        size: cardVisual_capabilities.pz.titleFontSize,
                        underline: cardVisual_capabilities.pz.titleUnderline
                    }
                },
                valueFontProperties: {
                    objectName: cardVisual_capabilities.L$.referenceLabelValue.valueFontColor.objectName,
                    propertyNames: {
                        color: cardVisual_capabilities.pz.valueFontColor,
                        bold: cardVisual_capabilities.pz.valueBold,
                        family: cardVisual_capabilities.pz.valueFontFamily,
                        italic: cardVisual_capabilities.pz.valueItalic,
                        size: cardVisual_capabilities.pz.valueFontSize,
                        underline: cardVisual_capabilities.pz.valueUnderline
                    }
                },
                detailFontProperties: {
                    objectName: cardVisual_capabilities.L$.referenceLabelDetail.detailValue.objectName,
                    propertyNames: {
                        color: cardVisual_capabilities.pz.detailFontColor,
                        bold: cardVisual_capabilities.pz.detailBold,
                        family: cardVisual_capabilities.pz.detailFontFamily,
                        italic: cardVisual_capabilities.pz.detailItalic,
                        size: cardVisual_capabilities.pz.detailFontSize,
                        underline: cardVisual_capabilities.pz.detailUnderline
                    }
                }
            },
            repetitionProps: {
                props: {
                    title: cardVisual_capabilities.L$.referenceLabelTitle.titleText,
                    valuePrecision: cardVisual_capabilities.L$.referenceLabelValue.valuePrecision,
                    valueCustomFormatString: cardVisual_capabilities.L$.referenceLabelValue.customFormatString,
                    showBlankAs: cardVisual_capabilities.L$.referenceLabelValue.showBlankAs,
                    detailCustomFormatString: cardVisual_capabilities.L$.referenceLabelDetail.customFormatString,
                    detailshowBlankAs: cardVisual_capabilities.L$.referenceLabelDetail.showBlankAs
                },
                colorProps: {
                    detailBackgroundColor: cardVisual_capabilities.L$.referenceLabelDetail.detailBackgroundColor
                },
                fontProps: {
                    titleFontProperties: {
                        objectName: cardVisual_capabilities.L$.referenceLabelTitle.titleFontColor.objectName,
                        propertyNames: {
                            color: cardVisual_capabilities.pz.titleFontColor
                        }
                    },
                    valueFontProperties: {
                        objectName: cardVisual_capabilities.L$.referenceLabelValue.valueFontColor.objectName,
                        propertyNames: {
                            color: cardVisual_capabilities.pz.valueFontColor
                        }
                    },
                    detailFontProperties: {
                        objectName: cardVisual_capabilities.L$.referenceLabelDetail.detailValue.objectName,
                        propertyNames: {
                            color: cardVisual_capabilities.pz.detailFontColor
                        }
                    }
                }
            }
        }, imageProps = {
            props: {
                image: cardVisual_capabilities.L$.image.image,
                imageType: cardVisual_capabilities.L$.image.imageType,
                imageUrl: cardVisual_capabilities.L$.image.imageUrl,
                altText: cardVisual_capabilities.L$.image.altText,
                padding: cardVisual_capabilities.L$.image.padding,
                position: cardVisual_capabilities.L$.image.position,
                show: cardVisual_capabilities.L$.image.show,
                size: cardVisual_capabilities.L$.image.size,
                transparency: cardVisual_capabilities.L$.image.transparency,
                fixedSize: cardVisual_capabilities.L$.image.fixedSize,
                imageAreaSize: cardVisual_capabilities.L$.image.imageAreaSize,
                verticalAlignment: cardVisual_capabilities.L$.image.verticalAlignment,
                horizontalAlignment: cardVisual_capabilities.L$.image.horizontalAlignment
            }
        };
        function convertImage(dataView, instanceIds, defaults, props) {
            void 0 === props && (props = imageProps);
            var fallbackDefault = {
                default: {
                    show: (0, dataViewObject2.NA)(dataView.metadata.objects, cardVisual_capabilities.L$.image.show)
                }
            };
            return (0, tileLibraryConverter.BE)(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = (0, tileLibraryConverter.Vv)(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                instanceDefaults = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, instanceDefaults), null == fallbackDefault ? void 0 : fallbackDefault[objectInstance]);
                var imageProperties = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaults.default), (0, 
                tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance));
                return "image" !== imageProperties.imageType || _.isEmpty(null === (_a = imageProperties.image) || void 0 === _a ? void 0 : _a.url) || imageProperties.image.scaling === imageScalingType.C.normal || null != imageProperties.size || (imageProperties.size = 50), 
                imageProperties;
            });
        }
        function convertValue(dataView, colorHelper, instances, cardsMetadata, defaults, props, overrides) {
            return void 0 === props && (props = tileLibraryConverter.xN), (0, tileLibraryConverter.BE)(instances, function(instance, defaultInstanceSettings) {
                var _a, _b = (0, tileLibraryConverter.Vv)(dataView, instance, defaults, overrides), column = _b.column, objects = _b.objects, instanceDefaults = _b.instanceDefaults, instanceOverrides = _b.instanceOverrides, objectInstance = _b.objectInstance, valueSettings = (0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaults.default), (0, tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), (0, 
                tileLibraryConverter.zP)(objects, colorHelper, props.fontProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, dataViewObject2.NA)(dataView.metadata.objects, cardVisual_capabilities.L$.value.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                }), null == overrides ? void 0 : overrides.default), instanceOverrides);
                if ((0, tileLibraryConverter.s9)(instance)) {
                    var cardMetadata = _.find(cardsMetadata, function(card) {
                        return card.name === column.queryName;
                    });
                    cardMetadata && (valueSettings.valueType = cardMetadata.valueType), function(valueSettings, cardsMetadata, column) {
                        var _a, cardMetadata = _.find(cardsMetadata, function(card) {
                            return card.name === column.queryName;
                        }), value = null == cardMetadata ? void 0 : cardMetadata.value;
                        if (null != value || _.isEmpty(valueSettings.showBlankAs)) {
                            if (cardMetadata) {
                                var labelDisplayUnits = valueSettings.labelDisplayUnits, isCustom = -1 === labelDisplayUnits, displayUnit = isCustom ? 1 : labelDisplayUnits, specificFormatString = void 0;
                                !isCustom && !(null === (_a = valueSettings.valueType) || void 0 === _a ? void 0 : _a.dateTime) || _.isEmpty(valueSettings.customFormatString) ? null != cardMetadata.dynamicFormatString && (specificFormatString = cardMetadata.dynamicFormatString) : specificFormatString = valueSettings.customFormatString;
                                var formatter = new valueFormatter.g({
                                    column,
                                    formatStringPropId: cardVisual_capabilities.L$.general.formatString,
                                    nullsAreBlank: !0,
                                    precision: isCustom ? void 0 : valueSettings.labelPrecision,
                                    trailingZeroes: !0,
                                    formatSingleValues: 0 === labelDisplayUnits,
                                    defaultPrecisionForScaledValues: !0
                                }), objects = {};
                                null != specificFormatString && (objects = {
                                    general: {
                                        formatString: specificFormatString
                                    }
                                }), cardMetadata.formattedValue = formatter.format(value, objects), formatter.setDisplayUnitSystem(displayUnit, visualData.V.DataLabels), 
                                valueSettings.text = formatter.format(value, objects);
                            }
                        } else cardMetadata.formattedValue = valueSettings.text = valueSettings.showBlankAs;
                    }(valueSettings, cardsMetadata, column);
                }
                return valueSettings;
            });
        }
        function convertLabel(dataView, colorHelper, instanceIds, cardsMetadata, defaults, props, overrides) {
            return (0, tileLibraryConverter.BE)(instanceIds, function(instance, defaultInstanceSettings) {
                var _a = (0, tileLibraryConverter.Vv)(dataView, instance, defaults, overrides), column = _a.column, objects = _a.objects, instanceDefaults = _a.instanceDefaults, instanceOverrides = _a.instanceOverrides, objectInstance = _a.objectInstance, labelSettings = (0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)({}, defaults.default), (0, tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), (0, 
                tileLibraryConverter.zP)(objects, colorHelper, props.fontProps, instanceDefaults, defaultInstanceSettings, objectInstance)), null == overrides ? void 0 : overrides.default), instanceOverrides);
                if ((0, tileLibraryConverter.s9)(instance) && !_.isEmpty(labelSettings.text)) {
                    var cardMetadata = _.find(cardsMetadata, function(card) {
                        return card.name === column.queryName;
                    });
                    debug.fF.assertValue(cardMetadata, "cardVisual - found customized text, but not a corresponding cardMetadata entry"), 
                    cardMetadata && (cardMetadata.displayName = labelSettings.text);
                }
                return labelSettings;
            });
        }
        function convertReferenceLabelsMetadata(dataView, colorHelper, instances, cardsMetadata, defaults, props, overrides) {
            return (0, tileLibraryConverter.BE)(instances, function(instance, defaultInstanceSettings) {
                var _a = (0, tileLibraryConverter.Vv)(dataView, instance, defaults, overrides), column = _a.column, objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance, instanceOverrides = _a.instanceOverrides, referenceLabels = {
                    default: null
                };
                if ((0, tileLibraryConverter.s9)(instance)) {
                    referenceLabels.default = (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                    tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaults.default), (0, tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaultInstanceSettings.default)), (0, 
                    tileLibraryConverter.zP)(objects, colorHelper, props.fontProps, instanceDefaults, defaultInstanceSettings.default)), (0, 
                    tileLibraryConverter.Cu)(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings.default)), null == overrides ? void 0 : overrides.default), 
                    (0, tileLibraryConverter.VG)(referenceLabels.default, instanceOverrides);
                    var cardMetadata = _.find(cardsMetadata, function(card) {
                        return card.name === column.queryName;
                    });
                    if (cardMetadata && cardMetadata.referenceLabels) for (var index in cardMetadata.referenceLabels) {
                        var label = cardMetadata.referenceLabels[index], referenceLabel = (0, tslib_es6.__assign)((0, 
                        tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaults.default), (0, 
                        tileLibraryConverter.Yb)(objects, props.props, referenceLabels.default, defaultInstanceSettings.default, label.id)), (0, 
                        tileLibraryConverter.zP)(objects, colorHelper, props.fontProps, referenceLabels.default, defaultInstanceSettings.default, label.id)), (0, 
                        tileLibraryConverter.Cu)(objects, colorHelper, props.colorProps, referenceLabels.default, defaultInstanceSettings.default, label.id)), {
                            valueType: label.type,
                            detailType: label.detailType
                        });
                        (0, tileLibraryConverter.VG)(referenceLabel, label.repetitionMetadata), (_.isEmpty(referenceLabel.title) || referenceLabel.titleContent !== contentTypes.PG) && (referenceLabel.title = label.displayName), 
                        referenceLabel.value = formatReferenceString(label.value, referenceLabel.showBlankAs, referenceLabel.valuePrecision, referenceLabel.valueDisplayUnits, column, referenceLabel.valueCustomFormatString, -1 === referenceLabel.valueDisplayUnits, label.formatString, referenceLabel.valueType), 
                        referenceLabel.detailValue = formatReferenceString(label.detailValue, referenceLabel.detailshowBlankAs, referenceLabel.detailPrecision, referenceLabel.detailDisplayUnits, column, referenceLabel.detailCustomFormatString, -1 === referenceLabel.detailDisplayUnits, label.detailFormatString, referenceLabel.valueType), 
                        referenceLabels[index] = referenceLabel;
                    }
                } else referenceLabels.default = (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)({}, defaults.default), (0, tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaults.default, objectInstance)), (0, 
                tileLibraryConverter.zP)(objects, colorHelper, props.fontProps, instanceDefaults, defaults.default, objectInstance)), (0, 
                tileLibraryConverter.Cu)(objects, colorHelper, props.colorProps, instanceDefaults, defaults.default, objectInstance)), null == overrides ? void 0 : overrides.default), instanceOverrides), {
                    title: void 0,
                    value: void 0
                }), "columns" === referenceLabels.default.labelArrangement && (referenceLabels.default.labelStyle = labelLayoutStyle.L.sentence), 
                referenceLabels.default.labelValueArea = (0, dataViewObject2.NA)(objects, cardVisual_capabilities.L$.referenceLabelLayout.valueArea, 2 == (referenceLabels.default.detailShow ? 1 : 0) + (referenceLabels.default.titleShow ? 1 : 0) ? 33 : 50, objectInstance);
                return debug.fF.assert(function() {
                    return null != referenceLabels.default;
                }, "cardVisual convertReferenceLabelsMetadata(): default values must be set for every instance"), 
                referenceLabels;
            });
        }
        function convertDivider(dataView, colorHelper, instanceIds, defaults, props, overrides) {
            return (0, tileLibraryConverter.BE)(instanceIds, function(instance, defaultInstanceSettings) {
                var _a = (0, tileLibraryConverter.Vv)(dataView, instance, defaults, overrides), objects = _a.objects, instanceDefaults = _a.instanceDefaults, instanceOverrides = _a.instanceOverrides, objectInstance = _a.objectInstance;
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaults.default), (0, tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), (0, 
                tileLibraryConverter.Cu)(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), null == overrides ? void 0 : overrides.default), instanceOverrides);
            });
        }
        function convertReferenceLabelsBackground(dataView, instanceIds, defaults, props, overrides) {
            return (0, tileLibraryConverter.BE)(instanceIds, function(instance, defaultInstanceSettings) {
                var _a = (0, tileLibraryConverter.Vv)(dataView, instance, defaults, overrides), objects = _a.objects, instanceDefaults = _a.instanceDefaults, instanceOverrides = _a.instanceOverrides, objectInstance = _a.objectInstance;
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)({}, defaults.default), (0, tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), null == overrides ? void 0 : overrides.default), instanceOverrides);
            });
        }
        function formatReferenceString(value, showBlankAs, precision, displayUnit, column, customFormatString, isCustom, dynamicFormatString, valyeType) {
            if (null == value && !_.isEmpty(showBlankAs)) return showBlankAs;
            var specificFormatString;
            !isCustom && !valyeType.dateTime || _.isEmpty(customFormatString) ? null != dynamicFormatString && (specificFormatString = dynamicFormatString) : specificFormatString = customFormatString;
            var formatter = new valueFormatter.g({
                column,
                formatStringPropId: cardVisual_capabilities.L$.general.formatString,
                nullsAreBlank: !0,
                precision,
                trailingZeroes: !0,
                formatSingleValues: 0 === displayUnit,
                defaultPrecisionForScaledValues: !0
            }), objects = {};
            return null != specificFormatString && (objects = {
                general: {
                    formatString: specificFormatString
                }
            }), formatter.setDisplayUnitSystem(displayUnit, visualData.V.DataLabels), valyeType.dateTime || (value = "" === value || isNaN(Number(value)) ? value : Number(value)), 
            formatter.format(value, objects);
        }
        var smallMultiples_capabilities = __webpack_require__(61771), smallMultiplesLayoutProps = {
            props: {
                orientation: smallMultiples_capabilities.WK.smallMultiplesLayout.orientation,
                maxSmallMultiples: smallMultiples_capabilities.WK.smallMultiplesLayout.maxSmallMultiples
            }
        };
        function convertSmallMultiplesLayoutSettings(dataViewObject, layoutDefaults) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, layoutDefaults), (0, 
            tileLibraryConverter.Yb)(dataViewObject, smallMultiplesLayoutProps.props));
        }
        var tileLibraryEnumerationHelper = __webpack_require__(89088), build_control_util = __webpack_require__(56578), visualLocKeys = __webpack_require__(33024), dataViewWildcard = __webpack_require__(96915), dataLabelViewModel1Consts = __webpack_require__(56707), StandaloneUtility3 = __webpack_require__(43286);
        function getShapeExclusionList(currentShape, featureSwitches) {
            var _a, includePixelShape = featureSwitches.cardVisualRefUpdate, unsupportedShapes = ((_a = {})[shapeType.m.Arrow] = !0, 
            _a[shapeType.m.ArrowChevron] = !0, _a[shapeType.m.ArrowPentagon] = !0, _a[shapeType.m.Heart] = !0, 
            _a[shapeType.m.Hexagon] = !0, _a[shapeType.m.Line] = !0, _a[shapeType.m.Octagon] = !0, 
            _a[shapeType.m.Oval] = !0, _a[shapeType.m.Parallelogram] = !0, _a[shapeType.m.Pentagon] = !0, 
            _a[shapeType.m.Pill] = !0, _a[shapeType.m.RectangleRounded] = !(void 0 === includePixelShape || !includePixelShape), 
            _a[shapeType.m.Speechbubble] = !0, _a[shapeType.m.TabCutCorner] = !0, _a[shapeType.m.TabRoundTopCorners] = !0, 
            _a[shapeType.m.Trapezoid] = !0, _a[shapeType.m.TriangleIsoc] = !0, _a[shapeType.m.TriangleRight] = !0, 
            _a[shapeType.m.TabRoundCorner] = !0, _a[shapeType.m.TabCutTopCorners] = !(void 0 === includePixelShape || !includePixelShape), 
            _a[shapeType.m.RectangleRoundedByPixel] = void 0 === includePixelShape || !includePixelShape, 
            _a[shapeType.m.TabCutTopCornersByPixel] = void 0 === includePixelShape || !includePixelShape, 
            _a);
            return unsupportedShapes[currentShape] = !1, unsupportedShapes;
        }
        function getCallOutGroupsByInstance(instanceId, cardUidBuilder, cardVisualData, hostService, cardVisualMetadata, featureSwitches) {
            var disabledReason = referenceLabelDisabledReasons(!cardVisualMetadata.map(function(data) {
                return void 0 !== data.referenceLabels;
            }).reduce(function(currentShowRefLabel, nextShowRefLabel) {
                return currentShowRefLabel || nextShowRefLabel;
            }) && 8), disabledReasonGroup = disabledReason.group;
            disabledReason && _.isEmpty(disabledReason) && !cardVisualData.divider.default.strokeShow && (disabledReasonGroup = "Visual_CardVisual_DividerSpecific_DisabledReason");
            var calloutFormattingGroup = [ tileLibraryEnumerationHelper.sc(cardVisualData.tileProps.text, hostService, instanceId, cardUidBuilder, featureSwitches), tileLibraryEnumerationHelper.v9(cardVisualData.tileProps.label, cardVisualData.tileProps.spacing, cardVisualData.tileProps.text, hostService, instanceId, cardUidBuilder, featureSwitches) ];
            return featureSwitches.cardVisualRefUpdate && calloutFormattingGroup.push(tileLibraryEnumerationHelper.v6(cardVisualData.layout, hostService, cardUidBuilder, disabledReasonGroup, (0, 
            tileLibraryConverter.s9)(instanceId))), calloutFormattingGroup;
        }
        function getReferenceLabelFieldOptionSlicesByInstance(instance, containerItemBuilder, defaultRefLabelData, refLabelsData, cardMetadata, hostService, refLabelBackground, refLabelDivider, cardVisualHasAnyRefLabels, featureSwitches, containerDefaultSelected) {
            debug.fF.assert(function() {
                return !!cardMetadata || !(0, tileLibraryConverter.s9)(instance);
            }, "expect cardMetadata to be set if not default instance");
            var referenceLabelProps = cardVisual_capabilities.L$.referenceLabel, selector = (0, 
            tileLibraryConverter.$H)(instance), isDefault = !(0, tileLibraryConverter.s9)(instance), hasReferenceLabels = !!(null == cardMetadata ? void 0 : cardMetadata.referenceLabels), instanceId = isDefault ? instance : instance.id, refLabelSpecificity = (isDefault && 2) | (!hasReferenceLabels && 8) | (!cardVisualHasAnyRefLabels && 64);
            containerDefaultSelected && containerItemBuilder.withDefaultSelected(!0), containerItemBuilder.addSimpleSlice("".concat(instanceId, "value"), new build_control_util.k0({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelProps.value), {
                    selector: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selector), {
                        data: [ dataViewWildcard.Ue() ]
                    }),
                    instanceKind: 2,
                    propertyTypes: {
                        text: !0,
                        variantDeleteEmpty: !0
                    }
                }),
                allowMultipleValues: !0,
                allowReorderItems: !0,
                splitValuesIntoInstances: !0,
                value: void 0,
                validators: {
                    field: {
                        kind: 1
                    }
                }
            }).build(), function(builder) {
                return builder.withDisabled(isDefault, "Visual_CardVisual_AllCardsFieldWell_DisabledReason");
            }), hasReferenceLabels ? containerItemBuilder.addContainer(instanceId, function(containerBuilder) {
                containerBuilder.withDisplayName("Visual_SelectLabel").addContainerItem("".concat(instanceId, "all"), hostService.getLocalizedString("All"), function(subContainerItemBuilder) {
                    return addReferenceLabelGroups(selector, subContainerItemBuilder, refLabelsData.default, hostService, 4 | refLabelSpecificity, refLabelBackground, refLabelDivider, featureSwitches);
                });
                var _loop_2 = function(refLabelIndex) {
                    var referenceLabel = cardMetadata.referenceLabels[refLabelIndex], refLabelData = refLabelsData[refLabelIndex], refLabelSelector = (0, 
                    tslib_es6.__assign)((0, tslib_es6.__assign)({}, selector), {
                        id: referenceLabel.id
                    });
                    containerBuilder.addContainerItem("".concat(instanceId).concat(refLabelIndex), referenceLabel.displayName, function(subContainerItemBuilder) {
                        return addReferenceLabelGroups(refLabelSelector, subContainerItemBuilder, refLabelData, hostService, refLabelSpecificity, refLabelBackground, refLabelDivider, featureSwitches, selector);
                    });
                };
                for (var refLabelIndex in cardMetadata.referenceLabels) _loop_2(refLabelIndex);
            }) : addReferenceLabelGroups(selector, containerItemBuilder, defaultRefLabelData, hostService, refLabelSpecificity, refLabelBackground, refLabelDivider, featureSwitches);
        }
        function addReferenceLabelGroups(refLabelSelector, containerItemBuilder, refLabelData, hostService, specificity, refLabelBackground, refLabelDivider, featureSwitches, selector) {
            var modifiesRefArea = 48 | specificity, hasDivider = refLabelDivider.strokeShow;
            featureSwitches.cardVisualRefUpdate && function(selector, containerItemBuilder, refLaboutProperties, specificity) {
                var referenceLabelLayoutProps = cardVisual_capabilities.L$.referenceLabelLayout, disabledReasons = referenceLabelDisabledReasons(specificity);
                containerItemBuilder.addGroup("options", function(optionsGroupBuilder) {
                    optionsGroupBuilder.withDisplayName("Desktop_FileMenu_Options"), disabledReasons.group ? optionsGroupBuilder.withDisabled(!0, disabledReasons.group) : optionsGroupBuilder.addSimpleSlice("position", new build_control_util.uY({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelLayoutProps.position), {
                            selector
                        }),
                        value: refLaboutProperties.labelPosition
                    }).build());
                });
            }(null != selector ? selector : refLabelSelector, containerItemBuilder, refLabelData, 128 | specificity), 
            function(selector, containerItemBuilder, referenceLabelTitleProperties, hostService, specificity, featureSwitches) {
                var referenceLabelTitleProps = cardVisual_capabilities.L$.referenceLabelTitle, localize = function(key) {
                    return hostService.getLocalizedString(key);
                }, disabledReasons = referenceLabelDisabledReasons(specificity);
                containerItemBuilder.addGroup("title", function(referenceLabelTitleGroupBuilder) {
                    referenceLabelTitleGroupBuilder.withDisplayName("Title").addTopLevelToggle("titleShow", function() {
                        return new build_control_util.bd({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelTitleProps.show), {
                                selector
                            }),
                            value: referenceLabelTitleProperties.titleShow
                        }).build();
                    }), disabledReasons.group ? referenceLabelTitleGroupBuilder.withDisabled(!0, disabledReasons.group) : (referenceLabelTitleGroupBuilder.addSimpleSlice("titleContent", new build_control_util.uY({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelTitleProps.titleContentType), {
                            selector
                        }),
                        value: referenceLabelTitleProperties.titleContent
                    }).build(), function(builder) {
                        return builder.withDisabled(!!disabledReasons.slice, disabledReasons.slice);
                    }), referenceLabelTitleProperties.titleContent === contentTypes.PG && referenceLabelTitleGroupBuilder.addSimpleSlice("text", new build_control_util.fq({
                        descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelTitleProps.titleText), {
                            selector,
                            instanceKind: 3
                        }), featureSwitches.cardVisualCFSelector),
                        placeholder: localize("Visual_Auto"),
                        value: referenceLabelTitleProperties.title
                    }).build(), function(builder) {
                        return builder.withDisabled(!!disabledReasons.slice, disabledReasons.slice);
                    }), referenceLabelTitleGroupBuilder.addCompositeSlice("font", "Font", (new build_control_util.UN).withFontFamily({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelTitleProps.titleFontFamily), {
                            selector
                        }),
                        value: referenceLabelTitleProperties.titleFontProperties.family
                    }).withFontSizeProperties({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelTitleProps.titleFontSize), {
                            selector
                        }),
                        value: referenceLabelTitleProperties.titleFontProperties.size.pt
                    }).withBold({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelTitleProps.titleBold), {
                            selector
                        }),
                        value: referenceLabelTitleProperties.titleFontProperties.weight === CssConstants.en
                    }).withItalic({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelTitleProps.titleItalic), {
                            selector
                        }),
                        value: referenceLabelTitleProperties.titleFontProperties.style === CssConstants.BF
                    }).withUnderline({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelTitleProps.titleUnderline), {
                            selector
                        }),
                        value: referenceLabelTitleProperties.titleFontProperties.textDecoration === CssConstants.f0
                    }).build()).addSimpleSlice("color", new build_control_util.BT({
                        descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelTitleProps.titleFontColor), {
                            selector,
                            instanceKind: 3
                        }), featureSwitches.cardVisualCFSelector),
                        value: {
                            value: referenceLabelTitleProperties.titleFontProperties.color
                        }
                    }).build()).addSimpleSlice("titleTransparency", build_control_util.JN.getTransparencySliderBuilder({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelTitleProps.titleTransparency), {
                            selector
                        }),
                        value: referenceLabelTitleProperties.titleTransparency,
                        localize
                    }).build()));
                });
            }(refLabelSelector, containerItemBuilder, refLabelData, hostService, specificity, featureSwitches), 
            function(selector, containerItemBuilder, referenceValueTitleProperties, hostService, specificity, featureSwitches) {
                var referenceValueValueProps = cardVisual_capabilities.L$.referenceLabelValue, disabledReasons = referenceLabelDisabledReasons(specificity), localize = function(key) {
                    return hostService.getLocalizedString(key);
                }, hasCustomDisplayUnits = -1 === referenceValueTitleProperties.valueDisplayUnits;
                containerItemBuilder.addGroup("value", function(referenceLabelValueGroupBuilder) {
                    if (referenceLabelValueGroupBuilder.withDisplayName("Value").addTopLevelToggle("valueShow", function() {
                        return new build_control_util.bd({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.show), {
                                selector
                            }),
                            value: referenceValueTitleProperties.valueShow
                        }).build();
                    }), disabledReasons.group) referenceLabelValueGroupBuilder.withDisabled(!0, disabledReasons.group); else {
                        if (referenceLabelValueGroupBuilder.addCompositeSlice("font", "Font", (new build_control_util.UN).withFontFamily({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.valueFontFamily), {
                                selector
                            }),
                            value: referenceValueTitleProperties.valueFontProperties.family
                        }).withFontSizeProperties({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.valueFontSize), {
                                selector
                            }),
                            value: referenceValueTitleProperties.valueFontProperties.size.pt
                        }).withBold({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.valueBold), {
                                selector
                            }),
                            value: referenceValueTitleProperties.valueFontProperties.weight === CssConstants.en
                        }).withItalic({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.valueItalic), {
                                selector
                            }),
                            value: referenceValueTitleProperties.valueFontProperties.style === CssConstants.BF
                        }).withUnderline({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.valueUnderline), {
                                selector
                            }),
                            value: referenceValueTitleProperties.valueFontProperties.textDecoration === CssConstants.f0
                        }).build()).addSimpleSlice("color", new build_control_util.BT({
                            descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.valueFontColor), {
                                selector,
                                instanceKind: 3
                            }), featureSwitches.cardVisualCFSelector),
                            value: {
                                value: referenceValueTitleProperties.valueFontProperties.color
                            }
                        }).build()).addSimpleSlice("valueTransparency", build_control_util.JN.getTransparencySliderBuilder({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.valueTransparency), {
                                selector
                            }),
                            value: referenceValueTitleProperties.valueTransparency,
                            localize
                        }).build()), tileLibraryEnumerationHelper.cg(referenceValueTitleProperties.valueType) && (referenceLabelValueGroupBuilder.addSimpleSlice("displayUnits", new build_control_util.uY({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.valueDisplayUnits), {
                                selector
                            }),
                            value: referenceValueTitleProperties.valueDisplayUnits
                        }).build()), hasCustomDisplayUnits && referenceLabelValueGroupBuilder.addSimpleSlice("customFormatString", new build_control_util.fq({
                            descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.customFormatString), {
                                selector,
                                instanceKind: 3
                            }), featureSwitches.cardVisualCFSelector),
                            value: referenceValueTitleProperties.valueCustomFormatString,
                            placeholder: localize("Visual_Auto")
                        }).build()), referenceLabelValueGroupBuilder.addSimpleSlice("precision", new build_control_util.mu({
                            descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.valuePrecision), {
                                selector,
                                instanceKind: 3
                            }), featureSwitches.cardVisualCFSelector),
                            value: referenceValueTitleProperties.valuePrecision,
                            options: {
                                minValue: {
                                    type: 0,
                                    value: 0
                                },
                                maxValue: {
                                    type: 1,
                                    value: dataLabelViewModel1Consts.vo
                                }
                            }
                        }).build())), tileLibraryEnumerationHelper.l5(referenceValueTitleProperties.valueType)) {
                            var dateTimeItems = hostService.dateTimeFormatService().getCommonFormats().map(function(dateTimeFormat) {
                                return {
                                    displayName: dateTimeFormat.displayLabel,
                                    value: dateTimeFormat.formatString
                                };
                            });
                            referenceLabelValueGroupBuilder.addSimpleSlice("customFormatStringDateFormat", new build_control_util.uY({
                                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.customFormatString), {
                                    selector
                                }),
                                items: dateTimeItems,
                                value: _.find(dateTimeItems, function(dateTimeItem) {
                                    return dateTimeItem.value === referenceValueTitleProperties.valueCustomFormatString;
                                })
                            }).build());
                        }
                        referenceLabelValueGroupBuilder.addSimpleSlice("showBlankAs", new build_control_util.fq({
                            descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceValueValueProps.showBlankAs), {
                                selector,
                                instanceKind: 3
                            }), featureSwitches.cardVisualCFSelector),
                            value: referenceValueTitleProperties.showBlankAs,
                            placeholder: ""
                        }).build());
                    }
                });
            }(refLabelSelector, containerItemBuilder, refLabelData, hostService, specificity, featureSwitches), 
            function(selector, containerItemBuilder, referenceDetailTitleProperties, hostService, specificity, featureSwitches) {
                var referenceLabelDetail = cardVisual_capabilities.L$.referenceLabelDetail, disabledReasons = referenceLabelDisabledReasons(specificity), localize = function(key) {
                    return hostService.getLocalizedString(key);
                }, hasCustomDisplayUnits = -1 === referenceDetailTitleProperties.detailDisplayUnits;
                selector && containerItemBuilder.addGroup("detail", function(referenceLabelDetailGroupBuilder) {
                    referenceLabelDetailGroupBuilder.withDisplayName("Visual_Label_DetailLabelName").addTopLevelToggle("detailShow", function() {
                        return new build_control_util.bd({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.show), {
                                selector
                            }),
                            value: referenceDetailTitleProperties.detailShow
                        }).build();
                    }), disabledReasons.group ? referenceLabelDetailGroupBuilder.withDisabled(!0, disabledReasons.group) : (referenceLabelDetailGroupBuilder.addSimpleSlice("detailLabelValue", new build_control_util.k0({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailValue), {
                            selector: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selector), {
                                data: [ dataViewWildcard.Ue() ]
                            }),
                            instanceKind: 2,
                            propertyTypes: {
                                text: !0,
                                variantDeleteEmpty: !0
                            }
                        }),
                        allowMultipleValues: !1,
                        value: void 0,
                        unwrapExprOnGet: !0,
                        validators: {
                            field: {
                                kind: 1
                            }
                        }
                    }).build(), function(sliceBuilder) {
                        return sliceBuilder.withCustomDisplayName("Data").withDisabled(!!disabledReasons.slice, disabledReasons.slice);
                    }).addCompositeSlice("font", "Font", (new build_control_util.UN).withFontFamily({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailFontFamily), {
                            selector
                        }),
                        value: referenceDetailTitleProperties.detailFontProperties.family
                    }).withFontSizeProperties({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailFontSize), {
                            selector
                        }),
                        value: referenceDetailTitleProperties.detailFontProperties.size.pt
                    }).withBold({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailBold), {
                            selector
                        }),
                        value: referenceDetailTitleProperties.detailFontProperties.weight === CssConstants.en
                    }).withItalic({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailItalic), {
                            selector
                        }),
                        value: referenceDetailTitleProperties.detailFontProperties.style === CssConstants.BF
                    }).withUnderline({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailUnderline), {
                            selector
                        }),
                        value: referenceDetailTitleProperties.detailFontProperties.textDecoration === CssConstants.f0
                    }).build()).addSimpleSlice("color", new build_control_util.BT({
                        descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailFontColor), {
                            selector,
                            instanceKind: 3
                        }), featureSwitches.cardVisualCFSelector),
                        value: {
                            value: referenceDetailTitleProperties.detailFontProperties.color
                        }
                    }).build()).addSimpleSlice("detailBackgroundColor", new build_control_util.BT({
                        descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailBackgroundColor), {
                            selector,
                            instanceKind: 3
                        }), featureSwitches.cardVisualCFSelector),
                        value: {
                            value: referenceDetailTitleProperties.detailBackgroundColor
                        }
                    }).build()).addSimpleSlice("detailTransparency", build_control_util.JN.getTransparencySliderBuilder({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailTransparency), {
                            selector
                        }),
                        value: referenceDetailTitleProperties.detailTransparency,
                        localize
                    }).build()), hasCustomDisplayUnits && referenceLabelDetailGroupBuilder.addSimpleSlice("customFormatString", new build_control_util.fq({
                        descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.customFormatString), {
                            selector,
                            instanceKind: 3
                        }), featureSwitches.cardVisualCFSelector),
                        value: referenceDetailTitleProperties.detailCustomFormatString,
                        placeholder: localize("Visual_Auto")
                    }).build()), tileLibraryEnumerationHelper.cg(referenceDetailTitleProperties.detailType) && (referenceLabelDetailGroupBuilder.addSimpleSlice("displayUnits", new build_control_util.uY({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailDisplayUnits), {
                            selector
                        }),
                        value: referenceDetailTitleProperties.detailDisplayUnits
                    }).build()), hasCustomDisplayUnits && referenceLabelDetailGroupBuilder.addSimpleSlice("customFormatString", new build_control_util.fq({
                        descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.customFormatString), {
                            selector,
                            instanceKind: 3
                        }), featureSwitches.cardVisualCFSelector),
                        value: referenceDetailTitleProperties.detailCustomFormatString,
                        placeholder: localize("Visual_Auto")
                    }).build()), referenceLabelDetailGroupBuilder.addSimpleSlice("precision", new build_control_util.mu({
                        descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.detailPrecision), {
                            selector,
                            instanceKind: 3
                        }), featureSwitches.cardVisualCFSelector),
                        value: referenceDetailTitleProperties.detailPrecision,
                        options: {
                            minValue: {
                                type: 0,
                                value: 0
                            },
                            maxValue: {
                                type: 1,
                                value: dataLabelViewModel1Consts.vo
                            }
                        }
                    }).build())), referenceLabelDetailGroupBuilder.addSimpleSlice("showBlankAs", new build_control_util.fq({
                        descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelDetail.showBlankAs), {
                            selector,
                            instanceKind: 3
                        }), featureSwitches.cardVisualCFSelector),
                        value: referenceDetailTitleProperties.detailshowBlankAs,
                        placeholder: ""
                    }).build()));
                });
            }(refLabelSelector, containerItemBuilder, refLabelData, hostService, specificity, featureSwitches), 
            function(selector, containerItemBuilder, dividerProperties, hostService, specificity, featureSwitches) {
                selector && containerItemBuilder.addGroup("divider", function(referenceLabelGroupBuilder) {
                    referenceLabelGroupBuilder.withDisplayName("Visual_Divider");
                    var disabledReason = referenceLabelDisabledReasons(specificity).group;
                    if (disabledReason) referenceLabelGroupBuilder.withDisabled(!0, disabledReason); else {
                        var colorSelector = selector, colorAltConstantValueSelector = void 0;
                        featureSwitches.cardVisualCFSelector && null != selector.metadata && (colorSelector = (0, 
                        tslib_es6.__assign)((0, tslib_es6.__assign)({}, selector), {
                            data: [ dataViewWildcard.Ue() ]
                        }), colorAltConstantValueSelector = selector), referenceLabelGroupBuilder.addSlices((0, 
                        strokeStyle.Iq)({
                            containerItemBuilder: referenceLabelGroupBuilder,
                            descriptors: {
                                strokeShow: cardVisual_capabilities.L$.divider.show,
                                strokeColor: cardVisual_capabilities.L$.divider.dividerColor,
                                strokeTransparency: cardVisual_capabilities.L$.divider.dividerTransparency,
                                strokePattern: cardVisual_capabilities.L$.divider.dividerLineStyle,
                                strokeWidth: cardVisual_capabilities.L$.divider.dividerWidth
                            },
                            strokeData: dividerProperties,
                            selector,
                            colorInstanceKind: 3,
                            colorSelector,
                            colorAltConstantValueSelector,
                            localize: function(key) {
                                return hostService.getLocalizedString(key);
                            }
                        }).map(function(slice) {
                            return slice.build();
                        })).addSimpleSlice("dividerIgnorePadding", new build_control_util.bd({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.divider.dividerIgnorePadding), {
                                selector
                            }),
                            value: dividerProperties.ignorePadding
                        }).build());
                    }
                });
            }(null != selector ? selector : refLabelSelector, containerItemBuilder, refLabelDivider, hostService, modifiesRefArea, featureSwitches), 
            hasDivider && refLabelDivider.ignorePadding && function(selector, containerItemBuilder, referenceBackgroundProperties, hostService, specificity, featureSwitches) {
                var referenceLabel = cardVisual_capabilities.L$.referenceLabel, localize = function(key) {
                    return hostService.getLocalizedString(key);
                }, disabledReasons = referenceLabelDisabledReasons(specificity);
                selector && containerItemBuilder.addGroup("background", function(referenceLabelGroupBuilder) {
                    referenceLabelGroupBuilder.withDisplayName("Visual_Background").addTopLevelToggle("backgroundShow", function() {
                        return new build_control_util.bd({
                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabel.backgroundShow), {
                                selector
                            }),
                            value: referenceBackgroundProperties.referenceLabelBackgroundShow
                        }).build();
                    }), disabledReasons.group ? referenceLabelGroupBuilder.withDisabled(!0, disabledReasons.group) : referenceLabelGroupBuilder.addSimpleSlice("referenceLabelBackgroundColor", new build_control_util.BT({
                        descriptor: updateDescriptorToUseRepetition((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabel.backgroundColor), {
                            selector,
                            instanceKind: 3
                        }), featureSwitches.cardVisualCFSelector),
                        value: {
                            value: referenceBackgroundProperties.referenceLabelBackgroundColor.solid.color
                        }
                    }).build()).addSimpleSlice("referenceLabelBackgroundTransparancy", build_control_util.JN.getTransparencySliderBuilder({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabel.backgroundTransparency), {
                            selector
                        }),
                        value: referenceBackgroundProperties.referenceLabelBackgroundTransparancy,
                        localize
                    }).build());
                });
            }(null != selector ? selector : refLabelSelector, containerItemBuilder, refLabelBackground, hostService, modifiesRefArea, featureSwitches), 
            function(selector, containerItemBuilder, referenceProperties, hostService, specificity, hasDivider) {
                var referenceLabelLayoutProps = cardVisual_capabilities.L$.referenceLabelLayout, localize = function(key) {
                    return hostService.getLocalizedString(key);
                }, disabledReasons = referenceLabelDisabledReasons(specificity);
                containerItemBuilder.addGroup("layout", function(groupBuilder) {
                    groupBuilder.withDisplayName("Layout"), disabledReasons.group ? groupBuilder.withDisabled(!0, disabledReasons.group) : (groupBuilder.addSimpleSlice("layoutArrangement", new build_control_util.uY({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelLayoutProps.arrangement), {
                            selector
                        }),
                        value: referenceProperties.labelArrangement
                    }).build()), referenceProperties.labelArrangement === labelArrangement.g.rows && groupBuilder.addSimpleSlice("layoutStyle", new build_control_util.uY({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelLayoutProps.style), {
                            selector
                        }),
                        value: referenceProperties.labelStyle
                    }).build()), "sentence" === referenceProperties.labelStyle || referenceProperties.labelArrangement === labelArrangement.g.columns ? groupBuilder.addSimpleSlice("horizontalAlignment", new build_control_util.Gp({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelLayoutProps.horizontalAlignment), {
                            selector
                        }),
                        value: referenceProperties.labelHorizontalAlignment,
                        mode: "horizontalAlignment"
                    }).build()) : groupBuilder.addSimpleSlice("valueArea", new build_control_util.JN({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelLayoutProps.valueArea), {
                            selector
                        }),
                        value: referenceProperties.labelValueArea,
                        localize,
                        options: {
                            unitSymbol: visualLocKeys.t2
                        }
                    }).build()), hasDivider && groupBuilder.addSimpleSlice("verticalAlignment", new build_control_util.Gp({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, referenceLabelLayoutProps.verticalAlignment), {
                            selector
                        }),
                        value: referenceProperties.labelVerticalAlignment,
                        mode: "verticalAlignment"
                    }).build()));
                });
            }(null != selector ? selector : refLabelSelector, containerItemBuilder, refLabelData, hostService, 128 | modifiesRefArea, hasDivider), 
            function(selector, containerItemBuilder, referenceProperties, specificity, hasDivider) {
                var labelLayoutProps = cardVisual_capabilities.L$.referenceLabelLayout, disabledReasons = referenceLabelDisabledReasons(specificity), spacingOptions = {
                    minValue: {
                        value: 0,
                        type: 0
                    },
                    maxValue: {
                        value: 20,
                        type: 1
                    },
                    required: {
                        type: 2
                    },
                    unitSymbol: visualLocKeys.e_
                };
                containerItemBuilder.addGroup("spacing", function(groupBuilder) {
                    groupBuilder.withDisplayName("Visual_Spacing"), disabledReasons.group ? groupBuilder.withDisabled(!0, disabledReasons.group) : (groupBuilder.addSimpleSlice("labelSpace", new build_control_util.mu({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelLayoutProps.labelSpace), {
                            selector
                        }),
                        value: referenceProperties.labelSpace,
                        options: spacingOptions
                    }).build()), hasDivider && (groupBuilder.addSimpleSlice("customizeOuterPadding", new build_control_util.bd({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelLayoutProps.customizePadding), {
                            selector
                        }),
                        value: referenceProperties.labelCustomizePadding
                    }).build()), referenceProperties.labelCustomizePadding && groupBuilder.addSimpleSlice("paddingBeforeDivider", new build_control_util.mu({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelLayoutProps.paddingBeforeDivider), {
                            selector
                        }),
                        value: referenceProperties.labelPaddingBeforeDivider,
                        options: spacingOptions
                    }).build()).addSimpleSlice("paddingAfterDivider", new build_control_util.mu({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelLayoutProps.paddingAfterDivider), {
                            selector
                        }),
                        value: referenceProperties.labelPaddingAfterDivider,
                        options: spacingOptions
                    }).build())), hasDivider && referenceProperties.labelCustomizePadding || groupBuilder.addSimpleSlice("outerPadding", new build_control_util.mu({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelLayoutProps.outerPadding), {
                            selector
                        }),
                        value: referenceProperties.labelOuterPadding,
                        options: spacingOptions
                    }).build()));
                });
            }(null != selector ? selector : refLabelSelector, containerItemBuilder, refLabelData, 128 | modifiesRefArea, hasDivider);
        }
        function referenceLabelDisabledReasons(specificity) {
            var reasons = {}, allCards = (0, StandaloneUtility3.yE)(specificity, 2), noLabels = (0, 
            StandaloneUtility3.yE)(specificity, 8), allLabels = (0, StandaloneUtility3.yE)(specificity, 4), modifyLayout = (0, 
            StandaloneUtility3.yE)(specificity, 16), modifyRefArea = (0, StandaloneUtility3.yE)(specificity, 32), noRefLablesInVisual = (0, 
            StandaloneUtility3.yE)(specificity, 64), layoutSpacingSwitch = (0, StandaloneUtility3.yE)(specificity, 128);
            return noRefLablesInVisual ? reasons.group = "Visual_CardVisual_SpecificCardAllLabels_FieldWellDisabledReason" : layoutSpacingSwitch ? allCards || (reasons.group = "Visual_DisabledReason_AllSeriesOnly_Plural") : allCards || (noLabels && !modifyRefArea ? reasons.group = "Visual_CardVisual_SpecificCardAllLabels_FieldWellDisabledReason" : !modifyLayout || allLabels || noLabels && modifyRefArea || (reasons.group = "Visual_DisabledReason_AllLabelsOnly_Plural")), 
            (allCards || allLabels) && (reasons.slice = "Visual_CardVisual_AllLabelsSpecificOption_DisabledReason"), 
            reasons;
        }
        function updateDescriptorToUseRepetition(descriptor, shouldUpdate) {
            var _a;
            return shouldUpdate && null != (null === (_a = descriptor.selector) || void 0 === _a ? void 0 : _a.metadata) ? (debug.fF.assert(function() {
                return 1 !== descriptor.instanceKind;
            }, "expected to only add data-repetition for CF-able properties"), debug.fF.assert(function() {
                return null != descriptor.selector.metadata;
            }, "expected only to update data-repetition if bound to metadata (DV matrix does not support wildcard repetition over all scopes implicitly)"), 
            (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, descriptor), {
                selector: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, descriptor.selector), {
                    data: [ dataViewWildcard.Ue() ]
                }),
                altConstantValueSelector: descriptor.selector
            })) : descriptor;
        }
        function getCardGroupsByInstance(instance, cardUidBuilder, cardVisualData, hostService, featureSwitches) {
            var specificDisabledReason, groups = [], instanceId = (0, tileLibraryConverter.Sg)(instance), selector = (0, 
            tileLibraryConverter.$H)(instance);
            return "default" !== instance && (specificDisabledReason = "Visual_DisabledReason_AllSeriesOnly_Singular"), 
            featureSwitches.cardVisualRefUpdate && groups.push(tileLibraryEnumerationHelper.fy(cardVisualData.tileProps.shape[instanceId], hostService, featureSwitches, selector, cardUidBuilder, getShapeExclusionList(cardVisualData.tileProps.shape.default.tileShape, featureSwitches), specificDisabledReason)), 
            groups.push(tileLibraryEnumerationHelper._6(cardVisualData.tileProps.padding, hostService, instance, cardUidBuilder)), 
            featureSwitches.cardVisualRefUpdate && groups.push(tileLibraryEnumerationHelper.W$(cardVisualData.layout, hostService, instanceId, cardUidBuilder, specificDisabledReason)), 
            groups.push.apply(groups, [ tileLibraryEnumerationHelper.Gx(!0, cardVisualData.tileProps.fill, hostService, instance, cardUidBuilder, "Visual_Background"), tileLibraryEnumerationHelper.vU(cardVisualData.tileProps.outline, hostService, instance, cardUidBuilder), tileLibraryEnumerationHelper.g_(cardVisualData.tileProps.shadow, hostService, instance, cardUidBuilder), tileLibraryEnumerationHelper.$h(cardVisualData.tileProps.glow, hostService, instance, cardUidBuilder), tileLibraryEnumerationHelper.E0(cardVisualData.tileProps.accentBar, hostService, instance, cardUidBuilder) ]), 
            groups;
        }
        function getImageGroupsByInstance(instanceId, cardUidBuilder, cardVisualData, hostService, featureSwitches) {
            return [ getImageGroupByInstance(cardVisualData.imageProps.image, hostService, instanceId, cardUidBuilder, featureSwitches) ];
        }
        function getImageGroupByInstance(imageProperties, hostServices, instance, cardUidBuilder, featureSwitches) {
            var _a, _b, _c, _d, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, imageProps = cardVisual_capabilities.L$.image, instanceId = (0, tileLibraryConverter.Sg)(instance), selector = (0, 
            tileLibraryConverter.$H)(instance), imagePropertiesByInstance = imageProperties[instanceId], validValuesForPadding = {
                unitSymbol: visualLocKeys.e_,
                numberRange: {
                    min: 0,
                    max: 30
                }
            }, imageGroupBuilder = new build_control_util.mQ(new build_control_util.SS(cardUidBuilder, "Image"), localize);
            return imageGroupBuilder.withDisplayName("Image").addTopLevelToggle("show", function() {
                return new build_control_util.bd({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.show), {
                        selector
                    }),
                    value: imagePropertiesByInstance.show
                }).build();
            }), imageGroupBuilder.addSimpleSlice("imageType", new build_control_util.uY({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.imageType), {
                    selector
                }),
                value: imagePropertiesByInstance.imageType
            }).build()), "imageUrl" === imagePropertiesByInstance.imageType ? imageGroupBuilder.addSimpleSlice("imageUrl", new build_control_util.fq({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.imageUrl), {
                    selector,
                    instanceKind: 3
                }),
                placeholder: "",
                value: imagePropertiesByInstance.imageUrl
            }).build()) : imageGroupBuilder.addSimpleSlice("image", new build_control_util.bD({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.image), {
                    selector
                }),
                value: imagePropertiesByInstance.image
            }).withHiddenScale(!0, null !== (_b = null === (_a = null == imagePropertiesByInstance ? void 0 : imagePropertiesByInstance.image) || void 0 === _a ? void 0 : _a.scaling) && void 0 !== _b ? _b : imageScalingType.C.normal).build()), 
            imageGroupBuilder.addSimpleSlice("transparency", build_control_util.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.transparency), {
                    selector
                }),
                value: imagePropertiesByInstance.transparency,
                localize
            }).build()).addSimpleSlice("position", new build_control_util.uY({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.position), {
                    selector
                }),
                value: imagePropertiesByInstance.position
            }).build()), featureSwitches.cardVisualRefUpdate && ("Bottom" === imagePropertiesByInstance.position || "Top" === imagePropertiesByInstance.position ? imageGroupBuilder.addSimpleSlice("horizontalalignment", new build_control_util.Gp({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.horizontalAlignment), {
                    selector
                }),
                value: imagePropertiesByInstance.horizontalAlignment,
                mode: "horizontalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Horizontal");
            }) : "Left" !== imagePropertiesByInstance.position && "Right" !== imagePropertiesByInstance.position || imageGroupBuilder.addSimpleSlice("verticalalignment", new build_control_util.Gp({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.verticalAlignment), {
                    selector
                }),
                value: imagePropertiesByInstance.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            })), imageGroupBuilder.addSimpleSlice("padding", new build_control_util.mu({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.padding), {
                    selector
                }),
                value: imagePropertiesByInstance.padding,
                options: {
                    minValue: {
                        type: 0,
                        value: validValuesForPadding.numberRange.min
                    },
                    maxValue: {
                        type: 1,
                        value: validValuesForPadding.numberRange.max
                    },
                    unitSymbol: validValuesForPadding.unitSymbol
                }
            }).build()), featureSwitches.cardVisualRefUpdate ? (imageGroupBuilder.addSimpleSlice("cardVisualCalloutFixSize", new build_control_util.bd({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.fixedSize), {
                    selector
                }),
                value: imagePropertiesByInstance.fixedSize || (null === (_c = null == imagePropertiesByInstance ? void 0 : imagePropertiesByInstance.image) || void 0 === _c ? void 0 : _c.scaling) !== imageScalingType.C.normal
            }).build(), function(builder) {
                var _a;
                return builder.withDisabled((null === (_a = null == imagePropertiesByInstance ? void 0 : imagePropertiesByInstance.image) || void 0 === _a ? void 0 : _a.scaling) !== imageScalingType.C.normal);
            }), imagePropertiesByInstance.fixedSize || (null === (_d = null == imagePropertiesByInstance ? void 0 : imagePropertiesByInstance.image) || void 0 === _d ? void 0 : _d.scaling) !== imageScalingType.C.normal ? imageGroupBuilder.addSimpleSlice("size", new build_control_util.mu({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.size), {
                    selector
                }),
                placeholderText: localize("Visual_Auto"),
                value: imagePropertiesByInstance.size,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: 999
                    },
                    unitSymbol: visualLocKeys.e_
                }
            }).build()) : imageGroupBuilder.addSimpleSlice("cardVisualimageAreaSize", new build_control_util.JN({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.imageAreaSize), {
                    selector
                }),
                localize,
                value: imagePropertiesByInstance.imageAreaSize,
                options: {
                    minValue: {
                        type: 0,
                        value: 10
                    },
                    maxValue: {
                        type: 1,
                        value: 90
                    },
                    unitSymbol: visualLocKeys.t2
                }
            }).build())) : (imagePropertiesByInstance.fixedSize = !1, imageGroupBuilder.addSimpleSlice("size", new build_control_util.mu({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.size), {
                    selector
                }),
                placeholderText: localize("Visual_Auto"),
                value: imagePropertiesByInstance.size,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: 999
                    },
                    unitSymbol: visualLocKeys.e_
                }
            }).build())), imageGroupBuilder.addSimpleSlice("altText", new build_control_util.Jr({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.altText), {
                    selector,
                    instanceKind: 3
                }),
                value: imagePropertiesByInstance.altText,
                placeholder: "Visual_General_Properties_Description_Placeholder",
                localize: function(key) {
                    return hostServices.getLocalizedString(key);
                }
            }).build()), imageGroupBuilder.build();
        }
        var tileLibraryTile = __webpack_require__(49366), gridLayout = __webpack_require__(32476), gridLayoutSelectors = __webpack_require__(39071), onObjectUtil = __webpack_require__(80065), subSelectionOutlineRenderer = __webpack_require__(86900), converterHelper = __webpack_require__(54522), interactivityService = __webpack_require__(72902), tooltipService = __webpack_require__(40739), loadMoreDataHandler = __webpack_require__(60810), enums = __webpack_require__(46135), dataRoleHelper = __webpack_require__(38958), selectionId = __webpack_require__(26543), bubblingEventManager = __webpack_require__(58778), gridLayoutBehaviors = __webpack_require__(63194), gridLineType = __webpack_require__(49511), CardVisualSelector = (0, 
        CssConstants.CH)("cardVisual"), CardVisual = function() {
            function CardVisual(options) {
                debug.fF.assertValue(options, "options"), options && (this.tooltipsEnabled = options.tooltipsEnabled, 
                this.interactivityEnabled = options.interactivityEnabled);
            }
            return CardVisual.prototype.init = function(options) {
                var _a, _this = this;
                if (this.style = options.style, this.element = options.element, this.hostServices = options.host, 
                this.currentViewport = options.viewport, this.featureSwitches = options.featureSwitches || {}, 
                this.tooltipsEnabled && (this.tooltipService = (0, tooltipService.r)(options.host)), 
                this.interactivityEnabled && (this.interactivityService = (0, interactivityService.ub)(options.host, this.featureSwitches), 
                this.eventManager = new bubblingEventManager.B(d3.select(options.element.get(0))), 
                null === (_a = this.featureSwitches) || void 0 === _a ? void 0 : _a.onObject)) {
                    var subSelectionHostService = options.host.getSubSelectionService(), renderer = null != subSelectionHostService ? subSelectionHostService : subSelectionOutlineRenderer.D.createWithDefaultHost();
                    this.subSelectionHelper = htmlSubSelectionHelper.O5.createHtmlSubselectionHelper({
                        hostElement: this.element.get(0),
                        hostServices: this.hostServices,
                        renderer,
                        targetSource: "format",
                        scale: function() {
                            return _this.currentViewport.scale;
                        }
                    }), this.interactivityService.setSubSelectionHelper(this.subSelectionHelper);
                }
                this.layout = new CardVisualTilesLayout(options.element, this.interactivityService, this.featureSwitches, this.eventManager), 
                this.cardVisualTiles = new CardVisualTiles(function() {
                    return new CardVisualTile(options.host, _this.featureSwitches, _this.interactivityEnabled, _this.formatMode);
                }), this.cardInstanceIds = [], this.cardsMetadata = [];
            }, CardVisual.prototype.destroy = function() {
                var _a;
                null === (_a = this.layout) || void 0 === _a || _a.destroy();
            }, CardVisual.prototype.clear = function(valueOnly) {
                void 0 === valueOnly && (valueOnly = !1), debug.fF.assertValue(valueOnly, "valueOnly");
            }, CardVisual.prototype.update = function(options) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return null != options.resizeMode && (this.currentViewport = options.viewport), 
                            this.interactivityEnabled && (null === (_a = this.featureSwitches) || void 0 === _a ? void 0 : _a.onObject) && (options.formatMode !== this.formatMode && (this.formatMode = options.formatMode, 
                            this.subSelectionHelper.setFormatMode(options.formatMode)), this.addonObjectAccessibility(options)), 
                            [ 4, this.onDataChangedInternal(options) ];

                          case 1:
                            return _b.sent(), [ 2 ];
                        }
                    });
                });
            }, CardVisual.prototype.getSubSelectionStyles = function(subSelections) {
                var visualObject = onObjectUtil.dF(subSelections);
                if (visualObject) {
                    var objectName = visualObject.objectName.substring(0, visualObject.objectName.indexOf("_")), instanceId = visualObject.objectName.substring(visualObject.objectName.indexOf("_") + 1), instance = _.find(this.cardInstanceIds, function(cardVisualInstanceId) {
                        if (tileLibraryConverter.s9(cardVisualInstanceId)) {
                            if (cardVisualInstanceId.id === instanceId) return cardVisualInstanceId;
                        } else if ("default" === instanceId) return "default";
                    });
                    if (instance) {
                        var selector = tileLibraryConverter.$H(instance);
                        switch (objectName) {
                          case "callout-value":
                            var value = cardVisual_capabilities.L$.value;
                            return onObjectUtil.xs(this.hostServices, {
                                fontFamilyReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value.fontFamily), {
                                    selector
                                }),
                                fontSizeReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value.fontSize), {
                                    selector
                                }),
                                boldReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value.bold), {
                                    selector
                                }),
                                italicReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value.italic), {
                                    selector
                                }),
                                underlineReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value.underline), {
                                    selector
                                }),
                                fontColorReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value.fontColor), {
                                    selector
                                }),
                                displayUnitsReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value.labelDisplayUnits), {
                                    selector
                                }),
                                precisionReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value.labelPrecision), {
                                    selector
                                }),
                                wordWrapReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value.textWrap), {
                                    selector
                                }),
                                horizontalAlignmentReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value.horizontalAlignment), {
                                    selector
                                })
                            });

                          case "callout-label":
                            var label = cardVisual_capabilities.L$.label;
                            return onObjectUtil.un(this.hostServices, {
                                fontFamilyReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, label.fontFamily), {
                                    selector
                                }),
                                fontSizeReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, label.fontSize), {
                                    selector
                                }),
                                boldReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, label.bold), {
                                    selector
                                }),
                                italicReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, label.italic), {
                                    selector
                                }),
                                underlineReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, label.underline), {
                                    selector
                                }),
                                fontColorReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, label.fontColor), {
                                    selector
                                }),
                                wordWrapReference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, label.textWrap), {
                                    selector
                                })
                            });

                          case "tile":
                            return {
                                type: 3,
                                fill: {
                                    reference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.fillCustom.fillColor), {
                                        selector
                                    }),
                                    label: this.hostServices.getLocalizedString("Visual_Background")
                                },
                                stroke: {
                                    reference: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.outline.lineColor), {
                                        selector
                                    }),
                                    label: this.hostServices.getLocalizedString("Visual_Border")
                                }
                            };

                          default:
                            return;
                        }
                    }
                }
            }, CardVisual.prototype.getSubSelectionShortcuts = function(subSelections) {
                var visualObject = onObjectUtil.dF(subSelections);
                if (visualObject) {
                    var objectName = visualObject.objectName.substring(0, visualObject.objectName.indexOf("_")), instanceId = visualObject.objectName.substring(visualObject.objectName.indexOf("_") + 1), instance = _.find(this.cardInstanceIds, function(cardVisualInstanceId) {
                        if (tileLibraryConverter.s9(cardVisualInstanceId)) {
                            if (cardVisualInstanceId.id === instanceId) return cardVisualInstanceId;
                        } else if ("default" === instanceId) return "default";
                    });
                    if (instance) {
                        var selector = tileLibraryConverter.$H(instance);
                        switch (objectName) {
                          case "callout-value":
                            return [ {
                                type: 0,
                                relatedResetFormattingIds: [ (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.value.show), {
                                    selector
                                }) ]
                            }, {
                                type: 1,
                                destinationInfo: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.value.fontFamily), {
                                    selector
                                }),
                                label: this.hostServices.getLocalizedString("Format_Callout_Value")
                            } ];

                          case "callout-label":
                            return [ {
                                type: 0,
                                relatedResetFormattingIds: [ (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.label.show), {
                                    selector
                                }) ]
                            }, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                                type: 3
                            }, cardVisual_capabilities.L$.label.position), {
                                label: this.hostServices.getLocalizedString("Visual_LegendPosition"),
                                selector
                            }), {
                                type: 1,
                                destinationInfo: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.label.fontFamily), {
                                    selector
                                }),
                                label: this.hostServices.getLocalizedString("Format_Callout_Label")
                            } ];

                          case "tile":
                            return [ {
                                type: 0,
                                relatedResetFormattingIds: [ (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.fillCustom.image), {
                                    selector
                                }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.fillCustom.transparency), {
                                    selector
                                }), (0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.fillCustom.imageTransparency) ]
                            }, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                                type: 3
                            }, cardVisual_capabilities.L$.layout.orientation), {
                                label: this.hostServices.getLocalizedString("Format_Layout_Style")
                            }), {
                                type: 1,
                                destinationInfo: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardVisual_capabilities.L$.padding.paddingSelection), {
                                    selector
                                }),
                                label: this.hostServices.getLocalizedString("Format_Card_Card")
                            } ];

                          default:
                            return;
                        }
                    }
                }
            }, CardVisual.prototype.getSubSelectables = function(filter) {
                return this.subSelectionHelper.getAllSubSelectables(filter);
            }, CardVisual.prototype.onDataChangedInternal = function(options) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataView, _a, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return debug.fF.assertValue(options, "options"), dataView = options && options.dataViews && options.dataViews[0], 
                            this.cardVisualTiles = new CardVisualTiles(function() {
                                return new CardVisualTile(_this.hostServices, _this.featureSwitches, _this.interactivityEnabled, _this.formatMode);
                            }), dataView ? (_a = CardVisual.convertData(dataView, this.style, this.featureSwitches), 
                            this.cardInstanceIds = _a.cardInstances, this.cardsMetadata = _a.data, this.cardVisualData = CardVisual.convertFormatting(dataView, this.style, this.cardInstanceIds, this.cardsMetadata, this.featureSwitches), 
                            [ 4, this.render() ]) : [ 3, 2 ];

                          case 1:
                            return _b.sent(), [ 3, 2 ];

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, CardVisual.prototype.addTooltip = function(selection) {
                var _a, hostTooltipService = this.hostServices.tooltips();
                this.tooltipsEnabled && hostTooltipService && hostTooltipService.enabled() && !this.formatMode ? this.tooltipService.addTooltip(selection, function(args) {
                    var data = args.data;
                    if (null != data) {
                        var tooltipInfo = [ {
                            displayName: data.displayName,
                            value: data.formattedValue
                        } ];
                        return data.tooltipInfo && (tooltipInfo = tooltipInfo.concat(data.tooltipInfo)), 
                        tooltipInfo;
                    }
                }, function(args) {
                    return [ args.data.identity ];
                }) : null === (_a = this.tooltipService) || void 0 === _a || _a.removeTooltips(selection);
            }, CardVisual.prototype.render = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var options;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return options = {
                                viewport: this.currentViewport,
                                cardVisualTilesFactory: this.cardVisualTiles,
                                cardVisualData: this.cardVisualData,
                                renderCell: this.renderCell.bind(this),
                                cells: this.cardsMetadata,
                                layoutUpdate: !!this.featureSwitches.cardVisualRefUpdate
                            }, [ 4, this.layout.render(options) ];

                          case 1:
                            return _a.sent(), this.element.attr("tabindex", 0).attr("focusable", "true").attr("aria-label", this.hostServices.getLocalizedString("Card_ToolTip")).attr("role", "listbox").attr("aria-setsize", this.cardsMetadata.length).attr("aria-orientation", this.cardVisualData.layout.orientation === navigatorOrientation.Bz.Vertical ? "vertical" : "horizontal").attr("focus-nav-mode", "Hierarchy"), 
                            this.layout.alignBaselines(), [ 2 ];
                        }
                    });
                });
            }, CardVisual.convertData = function(dataView, style, featureSwitches) {
                var _a, _b, _c, _d, _e, _f, _g, _h, dataAndTooltipDataProcessed, cardInstances = [], isSmallMultiples = void 0 !== (null === (_a = dataView.matrix) || void 0 === _a ? void 0 : _a.rows), valueIndexToDisplayName = {}, referenceLabelMetadata = {};
                if (null === (_b = dataView.matrix) || void 0 === _b ? void 0 : _b.valueSources) {
                    var valueSources = dataView.matrix.valueSources, _loop_1 = function(sourceIndex) {
                        var valueSource = valueSources[sourceIndex];
                        if ((0, dataRoleHelper.nu)(valueSource, cardVisual_capabilities.NX.Data)) {
                            if (_.some(cardInstances, function(card) {
                                return card.id === valueSource.queryName;
                            })) return valueIndexToDisplayName[sourceIndex] = null, "continue";
                            cardInstances.push({
                                id: valueSource.queryName,
                                selector: {
                                    metadata: valueSource.queryName
                                },
                                identity: selectionId.dw.builder().withMeasure(valueSource.queryName).createSelectionId(),
                                displayName: valueSource.displayName,
                                valueType: valueSource.type
                            });
                        } else (0, dataRoleHelper.nu)(valueSource, cardVisual_capabilities.NX.Tooltips) ? valueIndexToDisplayName[sourceIndex] = valueSource.displayName : debug.fF.assertFail("cardVisual - unknown role for value source");
                    };
                    for (var sourceIndex in valueSources) _loop_1(sourceIndex);
                    for (var _i = 0, _j = dataView.metadata.columns; _i < _j.length; _i++) {
                        var column = _j[_i], referenceLabelValue = null === (_d = null === (_c = column.relatedObjects) || void 0 === _c ? void 0 : _c.referenceLabel) || void 0 === _d ? void 0 : _d.value, referenceLabelDetailValue = null === (_f = null === (_e = column.relatedObjects) || void 0 === _e ? void 0 : _e.referenceLabelDetail) || void 0 === _f ? void 0 : _f.detailValue;
                        if (referenceLabelValue) for (var _k = 0, referenceLabelValue_1 = referenceLabelValue; _k < referenceLabelValue_1.length; _k++) if (null != (relatedSelector = referenceLabelValue_1[_k]).id && null != relatedSelector.metadata) {
                            var cardRefLabelMetadata = referenceLabelMetadata[relatedSelector.metadata] = referenceLabelMetadata[relatedSelector.metadata] || {}, columnFormatString = null !== (_g = dataViewObject2.NA(column.objects, cardVisual_capabilities.L$.general.formatString, column.format)) && void 0 !== _g ? _g : (0, 
                            valueFormatter.v1)(column.type);
                            cardRefLabelMetadata[relatedSelector.id] = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardRefLabelMetadata[relatedSelector.id] || {}), {
                                displayName: column.displayName,
                                formatString: columnFormatString,
                                type: column.type,
                                referenceLabelAdded: !0
                            });
                        } else debug.fF.assertFail("found referenceLabel.value definition with unexpected selector");
                        if (referenceLabelDetailValue) for (var _l = 0, referenceLabelDetailValue_1 = referenceLabelDetailValue; _l < referenceLabelDetailValue_1.length; _l++) {
                            var relatedSelector;
                            null != (relatedSelector = referenceLabelDetailValue_1[_l]).id && null != relatedSelector.metadata ? (cardRefLabelMetadata = referenceLabelMetadata[relatedSelector.metadata] = referenceLabelMetadata[relatedSelector.metadata] || {}, 
                            columnFormatString = null !== (_h = dataViewObject2.NA(column.objects, cardVisual_capabilities.L$.general.formatString, column.format)) && void 0 !== _h ? _h : (0, 
                            valueFormatter.v1)(column.type), cardRefLabelMetadata[relatedSelector.id] = (0, 
                            tslib_es6.__assign)((0, tslib_es6.__assign)({}, cardRefLabelMetadata[relatedSelector.id] || {}), {
                                detailFormatString: columnFormatString,
                                detailType: column.type
                            })) : debug.fF.assertFail("found referenceLabel.value definition with unexpected selector");
                        }
                    }
                    if ((null == featureSwitches ? void 0 : featureSwitches.cardVisualSmallMultiples) && isSmallMultiples) dataAndTooltipDataProcessed = this.convertCardDataForSmallmultiples(cardInstances, dataView, featureSwitches, isSmallMultiples, referenceLabelMetadata, style, valueIndexToDisplayName, valueSources); else {
                        var valueNode = _.first(dataView.matrix.rows.root.children);
                        dataAndTooltipDataProcessed = this.convertDataForEachCard(cardInstances, dataView, featureSwitches, isSmallMultiples, referenceLabelMetadata, style, valueIndexToDisplayName, valueSources, valueNode), 
                        debug.fF.assert(function() {
                            return cardInstances.length === dataAndTooltipDataProcessed.data.length;
                        }, "cardVisual: instances and data length don't match");
                    }
                    if (null != dataAndTooltipDataProcessed.tooltipInfo) for (var _m = 0, _o = dataAndTooltipDataProcessed.data; _m < _o.length; _m++) _o[_m].tooltipInfo = dataAndTooltipDataProcessed.tooltipInfo;
                }
                var cardInstacesWithDefault = cardInstances;
                return cardInstacesWithDefault.unshift("default"), {
                    cardInstances: cardInstacesWithDefault,
                    data: dataAndTooltipDataProcessed.data
                };
            }, CardVisual.convertDataForEachCard = function(cardInstances, dataView, featureSwitches, isSmallMultiples, referenceLabelMetadata, style, valueIndexToDisplayName, valueSources, valueNode) {
                var _a, _b, data = [], tooltipInfo = [];
                debug.fF.assertValue(valueNode, "cardVisual expected an intersection");
                var _loop_2 = function(valueIndex) {
                    var instanceValue = valueNode.values[valueIndex], instanceIndex = null !== (_a = instanceValue.valueSourceIndex) && void 0 !== _a ? _a : 0, dynamicFormatString = dataViewObject2.NA(instanceValue.objects, cardVisual_capabilities.L$.general.formatString);
                    if (null != valueIndexToDisplayName[instanceIndex]) (tooltipInfo = tooltipInfo || []).push({
                        displayName: valueIndexToDisplayName[instanceIndex],
                        value: converterHelper.xq(instanceValue.value, valueSources[instanceIndex], cardVisual_capabilities.L$.general.formatString, !1, dynamicFormatString)
                    }); else {
                        if (null === valueIndexToDisplayName[instanceIndex]) return "continue";
                        var instance_1 = cardInstances[instanceIndex], cardMetadata = {
                            name: instance_1.id,
                            displayName: instance_1.displayName,
                            identity: isSmallMultiples && featureSwitches.cardVisualSmallMultiples ? selectionId.l0.createWithIdAndMeasure(valueNode.identity, null === (_b = valueSources[instanceIndex]) || void 0 === _b ? void 0 : _b.queryName, !0) : instance_1.identity,
                            value: instanceValue.value,
                            valueType: valueSources[instanceIndex].type,
                            dynamicFormatString,
                            getDataPoint: function() {
                                return {
                                    selected: !1,
                                    identity: instance_1.identity
                                };
                            },
                            getIndex: function() {
                                return +valueIndex;
                            },
                            isSelected: function() {
                                return !1;
                            }
                        }, referenceLabels = CardVisual.convertReferenceLabels(instance_1.id, instanceValue.objects, referenceLabelMetadata, style);
                        referenceLabels && (cardMetadata.referenceLabels = referenceLabels);
                        var repetitionMetadata = CardVisual.convertCardRepetitionMetadata(instanceValue.objects, style);
                        repetitionMetadata && (cardMetadata.repetitionMetadata = repetitionMetadata), data.push(cardMetadata);
                    }
                };
                for (var valueIndex in valueNode.values) _loop_2(valueIndex);
                return {
                    data,
                    tooltipInfo
                };
            }, CardVisual.convertCardDataForSmallmultiples = function(cardInstances, dataView, featureSwitches, isSmallMultiples, referenceLabelMetadata, style, valueIndexToDisplayName, valueSources) {
                for (var dataAndTooltipDataProcessed, dataWithSmallMultiple = [], smallMultiplesTooltipInfo = [], rowMetaData = _.first(_.first(dataView.matrix.rows.levels).sources), _loop_3 = function(valueNode) {
                    var identity = selectionId.l0.createWithId(valueNode.identity), dynamicFormatString = dataViewObject2.NA(valueNode.objects, cardVisual_capabilities.L$.general.formatString), outCardMetaData = {
                        name: rowMetaData.queryName,
                        displayName: rowMetaData.displayName,
                        identity,
                        value: valueNode.value,
                        valueType: rowMetaData.type,
                        dynamicFormatString,
                        getDataPoint: function() {
                            return {
                                selected: !1,
                                identity
                            };
                        },
                        getIndex: function() {
                            return 0;
                        },
                        isSelected: function() {
                            return !1;
                        },
                        innerCardsVisualsMetadata: []
                    };
                    dataAndTooltipDataProcessed = this_1.convertDataForEachCard(cardInstances, dataView, featureSwitches, isSmallMultiples, referenceLabelMetadata, style, valueIndexToDisplayName, valueSources, valueNode), 
                    outCardMetaData.innerCardsVisualsMetadata = _.cloneDeep(dataAndTooltipDataProcessed.data), 
                    outCardMetaData.haveInnerCards = dataAndTooltipDataProcessed.data.length > 0, dataWithSmallMultiple.push(outCardMetaData), 
                    smallMultiplesTooltipInfo.concat(dataAndTooltipDataProcessed.tooltipInfo);
                }, this_1 = this, _i = 0, valueNodes_1 = dataView.matrix.rows.root.children; _i < valueNodes_1.length; _i++) _loop_3(valueNodes_1[_i]);
                return {
                    data: dataWithSmallMultiple,
                    tooltipInfo: smallMultiplesTooltipInfo
                };
            }, CardVisual.convertReferenceLabels = function(queryName, objects, referenceLabelMetdata, style) {
                var _a, _b, cardReferenceLabels = referenceLabelMetdata[queryName];
                if (!_.isEmpty(cardReferenceLabels)) {
                    var colorHelper = common_colorHelper.v.create(style), refLabelProps = cardVisual_capabilities.L$.referenceLabel, refLabelDetailProps = cardVisual_capabilities.L$.referenceLabelDetail, referenceLabels = [];
                    for (var labelId in cardReferenceLabels) {
                        var referenceLabelMetadata = cardReferenceLabels[labelId];
                        referenceLabelMetadata.referenceLabelAdded && referenceLabels.push({
                            id: labelId,
                            displayName: referenceLabelMetadata.displayName,
                            value: dataViewObject2.NA(objects, refLabelProps.value, void 0, labelId),
                            formatString: null !== (_a = dataViewObject2.NA(objects, refLabelProps.formatString, void 0, labelId)) && void 0 !== _a ? _a : referenceLabelMetadata.formatString,
                            type: referenceLabelMetadata.type,
                            detailValue: dataViewObject2.NA(objects, refLabelDetailProps.detailValue, void 0, labelId),
                            detailFormatString: null !== (_b = dataViewObject2.NA(objects, refLabelDetailProps.formatString, void 0, labelId)) && void 0 !== _b ? _b : referenceLabelMetadata.detailFormatString,
                            detailType: referenceLabelMetadata.detailType,
                            repetitionMetadata: tileLibraryConverter.Mu(objects, referenceLabelProps, colorHelper, labelId)
                        });
                    }
                    var labelOrder_1 = dataViewObject2.RR(objects, refLabelProps.value.objectName);
                    return labelOrder_1 ? (debug.fF.assert(function() {
                        return 0 !== Object.keys(labelOrder_1).length;
                    }, "missing order on selector?"), _.sortBy(referenceLabels, function(label) {
                        return labelOrder_1[label.id];
                    })) : referenceLabels;
                }
            }, CardVisual.convertCardRepetitionMetadata = function(objects, style) {
                var colorHelper = common_colorHelper.v.create(style), referenceLabelBackgroundColor = dataViewObject2.NA(objects, referenceBackgroundProps.repetitionProps.colorProps.referenceLabelBackgroundColor), strokeColor = colorHelper.getColorForProperty(objects, dividerProps.repetitionProps.colorProps.strokeColor, void 0), cardReferenceLabelMetadata = tileLibraryConverter.Mu(objects, referenceLabelProps, colorHelper), repetitionMetadata = {};
                if (null != referenceLabelBackgroundColor && (repetitionMetadata.referenceLabelBackground = {
                    referenceLabelBackgroundColor
                }), null != strokeColor && (repetitionMetadata.divider = {
                    strokeColor
                }), _.isEmpty(cardReferenceLabelMetadata) || (repetitionMetadata.referenceLabelMetadata = cardReferenceLabelMetadata), 
                Object.keys(repetitionMetadata).length) return repetitionMetadata;
            }, CardVisual.convertFormatting = function(dataView, style, cardVisualInstanceIds, cardVisualMetadata, featureSwitches) {
                var layout, colorHelper = common_colorHelper.v.create(style), dataViewObject = dataView.metadata.objects, layoutDefaults = function(style) {
                    var defaultStrokeStyle = {
                        strokeShow: !0,
                        strokeColor: style.colorPalette.foregroundNeutralTertiary.value,
                        strokeTransparency: 0,
                        strokeWidth: 1,
                        strokePattern: strokePattern.kY.solid
                    };
                    return {
                        verticalAlignment: verticalPosition.Q4.middle,
                        orientation: navigatorOrientation.Bz.Horizontal,
                        rowCount: 1,
                        columnCount: 5,
                        maxTiles: void 0,
                        cellPadding: 8,
                        customizePadding: !1,
                        rowPadding: 8,
                        columnPadding: 8,
                        calloutSize: 50,
                        style: layoutStyleType.i.Cards,
                        backgroundShow: !1,
                        backgroundTransparency: 0,
                        backgroundImageTransparency: 0,
                        backgroundImage: void 0,
                        backgroundFillColor: style.colorPalette.background.value,
                        rectangleRoundedCurveCustomStyle: !1,
                        rectangleRoundedCurve: 0,
                        rectangleRoundedCurveLeftTop: 0,
                        rectangleRoundedCurveRightTop: 0,
                        rectangleRoundedCurveLeftBottom: 0,
                        rectangleRoundedCurveRightBottom: 0,
                        customizeLines: !1,
                        line: (0, tslib_es6.__assign)({}, defaultStrokeStyle),
                        gridline: (0, tslib_es6.__assign)({}, defaultStrokeStyle),
                        border: (0, tslib_es6.__assign)({}, defaultStrokeStyle)
                    };
                }(style), smallMultiplesDefaults = {
                    smallMultiplesLayout: {
                        orientation: navigatorOrientation.Bz.Horizontal,
                        maxSmallMultiples: 3
                    }
                };
                layout = featureSwitches && featureSwitches.buttonSlicerTableLayout ? tileLibraryConverter.Ao(dataView.metadata.objects, colorHelper, layoutDefaults) : tileLibraryConverter.Ge(dataView.metadata.objects, layoutDefaults);
                var repetitionOverrides = CardVisual.generateRepetitionOverrides(cardVisualMetadata);
                debug.fF.assertValue(colorHelper, "colorHelper");
                var layoutSettings, shapeDefaults = getShapeDefaults(), cardData = {
                    tileProps: {
                        fill: tileLibraryConverter.ur(dataView, colorHelper, cardVisualInstanceIds, getFillDefaults(style)),
                        outline: tileLibraryConverter.Ou(dataView, colorHelper, cardVisualInstanceIds, getOutlineDefaults(style, layout.style)),
                        shape: tileLibraryConverter.ZT(dataView, cardVisualInstanceIds, getShapeDefaults(), void 0),
                        shadow: tileLibraryConverter.hn(dataView, colorHelper, cardVisualInstanceIds, getShadowDefaults(style)),
                        glow: tileLibraryConverter.SB(dataView, colorHelper, cardVisualInstanceIds, getGlowDefaults(style)),
                        accentBar: tileLibraryConverter.wp(dataView, colorHelper, cardVisualInstanceIds, tileLibraryConverter.Ro(style)),
                        padding: tileLibraryConverter.U6(dataView, cardVisualInstanceIds, {
                            default: {
                                paddingSelection: paddingOptions.mJ,
                                rightMargin: 4,
                                leftMargin: 4,
                                topMargin: 4,
                                bottomMargin: 4
                            }
                        }),
                        spacing: tileLibraryConverter.iS(dataView, cardVisualInstanceIds, {
                            default: {
                                verticalSpacing: 8
                            }
                        }),
                        text: convertValue(dataView, colorHelper, cardVisualInstanceIds, cardVisualMetadata, getValueDefaults(style, colorHelper), tileLibraryConverter.xN),
                        label: convertLabel(dataView, colorHelper, cardVisualInstanceIds, cardVisualMetadata, getTextDefaults(style, colorHelper), tileLibraryConverter.RA)
                    },
                    imageProps: {
                        image: convertImage(dataView, cardVisualInstanceIds, {
                            default: {
                                show: !1,
                                altText: "",
                                imageType: imageType._.image,
                                image: void 0,
                                imageUrl: void 0,
                                padding: 4,
                                size: void 0,
                                position: legendPosition.zw.right,
                                transparency: 0,
                                fixedSize: !0,
                                imageAreaSize: 50,
                                verticalAlignment: verticalPosition.Q4.middle,
                                horizontalAlignment: horizontalPosition.D.left
                            }
                        })
                    },
                    referenceLabelProps: {
                        refLabel: convertReferenceLabelsMetadata(dataView, colorHelper, cardVisualInstanceIds, cardVisualMetadata, getReferenceLabelDefaults(style, colorHelper), referenceLabelProps, null == repetitionOverrides ? void 0 : repetitionOverrides.referenceLabelMetadata)
                    },
                    layout,
                    overFlow: tileLibraryConverter.nO(dataViewObject, (layoutSettings = layout, {
                        overFlowDirection: layoutSettings.orientation === navigatorOrientation.Bz.Horizontal ? overFlowDirection.m.Horizontal : overFlowDirection.m.Vertical,
                        overFlowStyle: overFlowStyle.a.Scroll
                    })),
                    divider: convertDivider(dataView, colorHelper, cardVisualInstanceIds, getDividerDefaults(style), dividerProps, null == repetitionOverrides ? void 0 : repetitionOverrides.divider),
                    referenceBackground: convertReferenceLabelsBackground(dataView, cardVisualInstanceIds, getReferenceLabelBackgroundDefaults(style), referenceBackgroundProps, null == repetitionOverrides ? void 0 : repetitionOverrides.referenceLabelBackground),
                    smallMultiplesProps: {
                        smallMultiplesLayout: convertSmallMultiplesLayoutSettings(dataViewObject, smallMultiplesDefaults.smallMultiplesLayout)
                    }
                };
                return featureSwitches.buttonSlicerTableLayout && cardData.layout.style === layoutStyleType.i.Table && (cardData.tileProps.shape.default = shapeDefaults.default), 
                _.some(cardVisualMetadata, function(card) {
                    var _a;
                    return (null === (_a = card.referenceLabels) || void 0 === _a ? void 0 : _a.length) > 0;
                }) && (cardData.forceReferenceLabelDisplay = !0), cardData;
            }, CardVisual.generateRepetitionOverrides = function(cardMetadata) {
                for (var overrides = {}, ensure = function(settingName) {
                    var specificOverride = overrides[settingName];
                    return specificOverride || (specificOverride = overrides[settingName] = {}), specificOverride;
                }, _i = 0, cardMetadata_1 = cardMetadata; _i < cardMetadata_1.length; _i++) {
                    var card = cardMetadata_1[_i];
                    card.repetitionMetadata && (card.repetitionMetadata.divider && (ensure("divider")[card.name] = {
                        strokeColor: card.repetitionMetadata.divider.strokeColor
                    }), card.repetitionMetadata.referenceLabelBackground && (ensure("referenceLabelBackground")[card.name] = {
                        referenceLabelBackgroundColor: card.repetitionMetadata.referenceLabelBackground.referenceLabelBackgroundColor
                    }), card.repetitionMetadata.referenceLabelMetadata && (ensure("referenceLabelMetadata")[card.name] = card.repetitionMetadata.referenceLabelMetadata));
                }
                if (Object.keys(overrides).length) return overrides;
            }, CardVisual.prototype.renderCell = function(data, cardVisualTiles, cardMetadata) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var tile, cardId, labelText, tileOptions;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return tile = cardVisualTiles.get(data.index), cardId = cardMetadata.name, tile.cardMetadata = cardMetadata, 
                            labelText = this.cardVisualData.tileProps.label[cardId].text, tile.cardContents = {
                                dimensionsProps: void 0,
                                imageProps: this.cardVisualData.imageProps.image[cardId],
                                layoutProp: this.cardVisualData.layout,
                                main: [ {
                                    type: "value",
                                    props: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.cardVisualData.tileProps.text[cardId]), {
                                        instanceId: cardId,
                                        type: cardMetadata.valueType
                                    })
                                }, {
                                    type: "label",
                                    props: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.cardVisualData.tileProps.label[cardId]), {
                                        text: _.isEmpty(labelText) ? cardMetadata.displayName : labelText,
                                        instanceId: cardId
                                    })
                                } ],
                                paddingProps: this.cardVisualData.tileProps.padding[cardId],
                                referenceLabels: this.cardVisualData.referenceLabelProps.refLabel[cardId],
                                forceReferenceLabelDisplay: !!this.cardVisualData.forceReferenceLabelDisplay,
                                spacingProp: this.cardVisualData.tileProps.spacing[cardId],
                                dividerProps: this.cardVisualData.divider[cardId],
                                referenceBackground: this.cardVisualData.referenceBackground[cardId]
                            }, gridCellRenderData = data, tileProps = this.cardVisualData.tileProps, tileBehaviors = {
                                accessibleTile: !0
                            }, updateOptions = {
                                element: d3.select(gridCellRenderData.element.get(0)),
                                width: gridCellRenderData.viewport.width,
                                height: gridCellRenderData.viewport.height,
                                properties: tileProps
                            }, (null == tileBehaviors ? void 0 : tileBehaviors.accessibleTile) && (updateOptions.cardIndex = gridCellRenderData.index), 
                            (tileOptions = updateOptions).element.classed(CardVisualSelector.class, !0).classed(gridLayoutBehaviors.rG.class, !0).data([ cardMetadata ]), 
                            this.addTooltip(tileOptions.element), [ 4, tile.update(tileOptions) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                        var gridCellRenderData, tileProps, tileBehaviors, updateOptions;
                    });
                });
            }, CardVisual.prototype.getFormattingModel = function() {
                if (this.cardVisualData) return cardVisualInstanceIds = this.cardInstanceIds, hostServices = this.hostServices, 
                cardsVisualsMetadata = this.cardsMetadata, featureSwitches = this.featureSwitches, 
                shape = (cardVisualData = this.cardVisualData).tileProps.shape.default.tileShape, 
                formattingModelBuilder = new build_control_util.Nq(function() {
                    return !featureSwitches.cardVisualRefUpdate && (!featureSwitches.buttonSlicerTableLayout || cardVisualData.layout.style === layoutStyleType.i.Cards) && tileLibraryEnumerationHelper.Ai(cardVisualData.tileProps.shape, hostServices, featureSwitches, "default", getShapeExclusionList(shape, featureSwitches));
                }, function() {
                    return (null == featureSwitches ? void 0 : featureSwitches.buttonSlicerTableLayout) ? tileLibraryEnumerationHelper.l6(hostServices, cardVisualData.layout, cardVisualData.overFlow) : featureSwitches.cardVisualRefUpdate ? tileLibraryEnumerationHelper.Cv(hostServices, cardVisualData.layout, cardVisual_capabilities.L$, cardVisualData.overFlow) : tileLibraryEnumerationHelper.w(hostServices, cardVisualData.layout, cardVisual_capabilities.L$);
                }, function() {
                    var _a, hostService, smallMultiplesProps, smallMultiplesLayoutSettings, localize, cardUidBuilder, cardBuilder, layoutGroup;
                    if (featureSwitches.cardVisualSmallMultiples) return hostService = hostServices, 
                    smallMultiplesProps = cardVisual_capabilities.L$, smallMultiplesLayoutSettings = null === (_a = cardVisualData.smallMultiplesProps) || void 0 === _a ? void 0 : _a.smallMultiplesLayout, 
                    localize = function(key) {
                        return hostService.getLocalizedString(key);
                    }, cardUidBuilder = new build_control_util.lg(smallMultiples_capabilities.MS.smallMultiplesLayout), 
                    cardBuilder = new build_control_util.CQ(cardUidBuilder, "Small_Multiples_Layout_Section", [ smallMultiplesProps.smallMultiplesLayout.orientation, smallMultiplesProps.smallMultiplesLayout.maxSmallMultiples ], localize), 
                    layoutGroup = new build_control_util.mQ(new build_control_util.SS(cardUidBuilder, "smallMultiplesLayout"), localize).withDisplayName("Layout").addSimpleSlice("smallMultiplesArrangement", new build_control_util.uY({
                        descriptor: smallMultiplesProps.smallMultiplesLayout.orientation,
                        value: smallMultiplesLayoutSettings.orientation
                    }).build()).addSimpleSlice("maxSmallMultiples", new build_control_util.mu({
                        descriptor: smallMultiplesProps.smallMultiplesLayout.maxSmallMultiples,
                        value: smallMultiplesLayoutSettings.maxSmallMultiples,
                        placeholderText: localize("Visual_Auto"),
                        options: {
                            minValue: {
                                type: 0,
                                value: 1
                            },
                            maxValue: {
                                type: 1,
                                value: 99
                            }
                        }
                    }).build()), cardBuilder.withGroups([ layoutGroup.build() ]), cardBuilder.build();
                }, function() {
                    return function(hostService, cardVisualData, instanceids, cardVisualMetadata, featureSwitches) {
                        var valueProps = cardVisual_capabilities.L$.value, labelProps = cardVisual_capabilities.L$.label, spacingProps = cardVisual_capabilities.L$.spacing, layoutProps = cardVisual_capabilities.L$.layout, localize = function(key) {
                            return hostService.getLocalizedString(key);
                        }, cardUidBuilder = new build_control_util.lg("Visual_CallOutValues");
                        return new build_control_util.CQ(cardUidBuilder, "Visual_CallOutValues", [ valueProps.show, valueProps.fontColor, valueProps.fontSize, valueProps.fontFamily, valueProps.italic, valueProps.bold, valueProps.underline, valueProps.text, valueProps.horizontalAlignment, valueProps.textWrap, valueProps.labelDisplayUnits, valueProps.labelPrecision, valueProps.customFormatString, valueProps.showBlankAs, valueProps.transparency, labelProps.show, labelProps.heading, labelProps.fontColor, labelProps.fontSize, labelProps.fontFamily, labelProps.italic, labelProps.bold, labelProps.underline, labelProps.text, labelProps.position, labelProps.transparency, labelProps.textWrap, labelProps.alignBaselines, labelProps.matchValueAlignment, labelProps.horizontalAlignment, layoutProps.alignment, layoutProps.calloutSize, spacingProps.verticalSpacing ], localize).addGroup("applySettingsTo", function(groupBuilder) {
                            groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("series", function(containerBuilder) {
                                containerBuilder.withDisplayName("Series"), instanceids.forEach(function(instanceId) {
                                    (0, tileLibraryConverter.s9)(instanceId) ? containerBuilder.addContainerItem(instanceId.id, instanceId.displayName, function(containerItemBuilder) {
                                        return containerItemBuilder.withGroups(getCallOutGroupsByInstance(instanceId, cardUidBuilder, cardVisualData, hostService, cardVisualMetadata, featureSwitches));
                                    }) : containerBuilder.addContainerItem(instanceId, localize("All"), function(containerItemBuilder) {
                                        return containerItemBuilder.withGroups(getCallOutGroupsByInstance(instanceId, cardUidBuilder, cardVisualData, hostService, cardVisualMetadata, featureSwitches));
                                    });
                                });
                            });
                        }).build();
                    }(hostServices, cardVisualData, cardVisualInstanceIds, cardsVisualsMetadata, featureSwitches);
                }, function() {
                    return function(hostService, cardVisualData, cardsVisualsMetadata, instanceids, featureSwitches) {
                        if (featureSwitches.cardReferenceLabels) {
                            var referenceLabelProps = cardVisual_capabilities.L$.referenceLabel, referenceLabelTitleProps = cardVisual_capabilities.L$.referenceLabelTitle, referenceLabelValueProps = cardVisual_capabilities.L$.referenceLabelValue, referenceLabelDetailProps = cardVisual_capabilities.L$.referenceLabelDetail, referenceLabelLayoutProps = cardVisual_capabilities.L$.referenceLabelLayout, referenceLabelDividerProps = cardVisual_capabilities.L$.divider, localize = function(key) {
                                return hostService.getLocalizedString(key);
                            }, cardUidBuilder = new build_control_util.lg("referenceLabel"), visualHasAnyRefLabels = _.some(cardsVisualsMetadata, function(metaData) {
                                var _a;
                                return (null === (_a = metaData.referenceLabels) || void 0 === _a ? void 0 : _a.length) > 0;
                            });
                            return new build_control_util.CQ(cardUidBuilder, "Visual_Reference_Labels", [ referenceLabelProps.value, referenceLabelTitleProps.titleBold, referenceLabelTitleProps.titleContentType, referenceLabelTitleProps.titleFontColor, referenceLabelTitleProps.titleFontFamily, referenceLabelTitleProps.titleFontSize, referenceLabelTitleProps.titleItalic, referenceLabelTitleProps.show, referenceLabelTitleProps.titleText, referenceLabelTitleProps.titleTransparency, referenceLabelTitleProps.titleUnderline, referenceLabelValueProps.show, referenceLabelValueProps.valueBold, referenceLabelValueProps.valueDisplayUnits, referenceLabelValueProps.valueFontColor, referenceLabelValueProps.valueFontFamily, referenceLabelValueProps.valueFontSize, referenceLabelValueProps.valueItalic, referenceLabelValueProps.valuePrecision, referenceLabelValueProps.showBlankAs, referenceLabelValueProps.valueTransparency, referenceLabelValueProps.valueUnderline, referenceLabelDetailProps.show, referenceLabelDetailProps.detailBold, referenceLabelDetailProps.detailDisplayUnits, referenceLabelDetailProps.detailFontColor, referenceLabelDetailProps.detailFontFamily, referenceLabelDetailProps.detailFontSize, referenceLabelDetailProps.detailFontSize, referenceLabelDetailProps.detailItalic, referenceLabelDetailProps.detailPrecision, referenceLabelDetailProps.detailTransparency, referenceLabelDetailProps.detailUnderline, referenceLabelDetailProps.detailValue, referenceLabelDetailProps.showBlankAs, referenceLabelDetailProps.detailBackgroundColor, referenceLabelProps.backgroundColor, referenceLabelProps.backgroundTransparency, referenceLabelProps.backgroundShow, referenceLabelLayoutProps.position, referenceLabelLayoutProps.arrangement, referenceLabelLayoutProps.style, referenceLabelLayoutProps.horizontalAlignment, referenceLabelLayoutProps.verticalAlignment, referenceLabelLayoutProps.valueArea, referenceLabelLayoutProps.textWrap, referenceLabelLayoutProps.labelSpace, referenceLabelLayoutProps.outerPadding, referenceLabelLayoutProps.customizePadding, referenceLabelLayoutProps.paddingBeforeDivider, referenceLabelLayoutProps.paddingAfterDivider, referenceLabelProps.backgroundShow, referenceLabelDividerProps.dividerColor, referenceLabelDividerProps.dividerIgnorePadding, referenceLabelDividerProps.dividerLineStyle, referenceLabelDividerProps.dividerWidth, referenceLabelDividerProps.show, referenceLabelDividerProps.dividerTransparency, referenceLabelDetailProps.customFormatString, referenceLabelValueProps.customFormatString ], localize).addGroup("applySettingsTo", function(groupBuilder) {
                                groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("series", function(containerBuilder) {
                                    containerBuilder.withDisplayName("Visual_SelectSeries");
                                    for (var defaultRefLabelData = cardVisualData.referenceLabelProps.refLabel.default.default, _loop_1 = function(index) {
                                        var instance = instanceids[index];
                                        if ((0, tileLibraryConverter.s9)(instance)) {
                                            var cardMetadata_1 = _.find(cardsVisualsMetadata, function(card) {
                                                return card.name === instance.id;
                                            });
                                            if (debug.fF.assert(function() {
                                                return !!cardMetadata_1;
                                            }, "couldn't find card metadata for ".concat(instance.displayName)), !cardMetadata_1) return "continue";
                                            var refLabelData_1 = cardVisualData.referenceLabelProps.refLabel[instance.id], refLabelBackground_1 = cardVisualData.referenceBackground[instance.id], refLabelDivider_1 = cardVisualData.divider[instance.id];
                                            containerBuilder.addContainerItem(instance.id, instance.displayName, function(containerItemBuilder) {
                                                return getReferenceLabelFieldOptionSlicesByInstance(instance, containerItemBuilder, defaultRefLabelData, refLabelData_1, cardMetadata_1, hostService, refLabelBackground_1, refLabelDivider_1, visualHasAnyRefLabels, featureSwitches, 1 === index);
                                            });
                                        } else {
                                            var refLabelData_2 = cardVisualData.referenceLabelProps.refLabel[instance], refLabelBackground_2 = cardVisualData.referenceBackground[instance], refLabelDivider_2 = cardVisualData.divider[instance];
                                            containerBuilder.addContainerItem(instance, localize("All"), function(containerItemBuilder) {
                                                return getReferenceLabelFieldOptionSlicesByInstance(instance, containerItemBuilder, defaultRefLabelData, refLabelData_2, void 0, hostService, refLabelBackground_2, refLabelDivider_2, visualHasAnyRefLabels, featureSwitches);
                                            });
                                        }
                                    }, index = 0; index < instanceids.length; index++) _loop_1(index);
                                });
                            }).build();
                        }
                    }(hostServices, cardVisualData, cardsVisualsMetadata, cardVisualInstanceIds, featureSwitches);
                }, function() {
                    return function(hostService, cardVisualData, instanceids, featureSwitches) {
                        var imageProps = cardVisual_capabilities.L$.image, valueProps = cardVisual_capabilities.L$.value, layoutProps = cardVisual_capabilities.L$.layout, localize = function(key) {
                            return hostService.getLocalizedString(key);
                        }, cardUidBuilder = new build_control_util.lg("Image");
                        return new build_control_util.CQ(cardUidBuilder, "Images", [ imageProps.altText, imageProps.image, imageProps.imageType, imageProps.imageUrl, imageProps.padding, imageProps.position, imageProps.show, imageProps.size, imageProps.transparency, imageProps.fixedSize, imageProps.imageAreaSize, imageProps.verticalAlignment, imageProps.horizontalAlignment, valueProps.horizontalAlignment, layoutProps.alignment ], localize).addGroup("applySettingsTo", function(groupBuilder) {
                            groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("series", function(containerBuilder) {
                                containerBuilder.withDisplayName("Series"), instanceids.forEach(function(instanceId) {
                                    (0, tileLibraryConverter.s9)(instanceId) ? containerBuilder.addContainerItem(instanceId.id, instanceId.displayName, function(containerItemBuilder) {
                                        return containerItemBuilder.withGroups(getImageGroupsByInstance(instanceId, cardUidBuilder, cardVisualData, hostService, featureSwitches));
                                    }) : containerBuilder.addContainerItem(instanceId, localize("All"), function(containerItemBuilder) {
                                        return containerItemBuilder.withGroups(getImageGroupsByInstance(instanceId, cardUidBuilder, cardVisualData, hostService, featureSwitches));
                                    });
                                });
                            });
                        }).build();
                    }(hostServices, cardVisualData, cardVisualInstanceIds, featureSwitches);
                }, function() {
                    return function(hostService, cardVisualData, instanceids, featureSwitches) {
                        var fillProps = cardVisual_capabilities.L$.fillCustom, outlineProps = cardVisual_capabilities.L$.outline, shadowProps = cardVisual_capabilities.L$.shadowCustom, glowProps = cardVisual_capabilities.L$.glowCustom, paddingProps = cardVisual_capabilities.L$.padding, accentBarProps = cardVisual_capabilities.L$.accentBar, layoutProps = cardVisual_capabilities.L$.layout, localize = function(key) {
                            return hostService.getLocalizedString(key);
                        }, cardUidBuilder = new build_control_util.lg("Cards"), revertToDefaultDescriptors = [ fillProps.show, fillProps.fillColor, fillProps.transparency, fillProps.image, fillProps.imageTransparency, outlineProps.show, outlineProps.lineColor, outlineProps.weight, outlineProps.transparency, shadowProps.show, shadowProps.color, shadowProps.transparency, shadowProps.shadowBlur, shadowProps.shadowPositionPreset, shadowProps.angle, shadowProps.shadowDistance, shadowProps.position, shadowProps.shadowSpread, glowProps.show, glowProps.color, glowProps.transparency, glowProps.shadowBlur, glowProps.angle, glowProps.glowDistance, glowProps.glowPositionPreset, glowProps.glowSpread, glowProps.position, paddingProps.paddingSelection, paddingProps.bottomMargin, paddingProps.leftMargin, paddingProps.rightMargin, paddingProps.topMargin, accentBarProps.color, accentBarProps.position, accentBarProps.show, accentBarProps.transparency, accentBarProps.width ];
                        if (featureSwitches.cardVisualRefUpdate) {
                            var shapeProps = cardVisual_capabilities.L$.shapeCustomRectangle;
                            revertToDefaultDescriptors = revertToDefaultDescriptors.concat([ shapeProps.tileShape, shapeProps.rectangleRoundedCurve, shapeProps.rectangleRoundedCurveCustomStyle, shapeProps.rectangleRoundedCurveLeftTop, shapeProps.rectangleRoundedCurveRightTop, shapeProps.rectangleRoundedCurveLeftBottom, shapeProps.rectangleRoundedCurveRightBottom, shapeProps.tabCutCornerSnipSizeCustomStyle, shapeProps.tabCutCornerSnipSizeLeftBottom, shapeProps.tabCutCornerSnipSizeTop, shapeProps.tabCutCornerSnipSizeBottom, shapeProps.tabCutCornerSnipSizeLeftTop, shapeProps.tabCutCornerSnipSizeRightBottom, shapeProps.tabCutCornerSnipSizeRightTop, layoutProps.alignment ]);
                        }
                        return new build_control_util.CQ(cardUidBuilder, "Cards", revertToDefaultDescriptors, localize).addGroup("applySettingsTo", function(groupBuilder) {
                            groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("series", function(containerBuilder) {
                                containerBuilder.withDisplayName("Series"), instanceids.forEach(function(instanceId) {
                                    (0, tileLibraryConverter.s9)(instanceId) ? containerBuilder.addContainerItem(instanceId.id, instanceId.displayName, function(containerItemBuilder) {
                                        return containerItemBuilder.withGroups(getCardGroupsByInstance(instanceId, cardUidBuilder, cardVisualData, hostService, featureSwitches));
                                    }) : containerBuilder.addContainerItem(instanceId, localize("All"), function(containerItemBuilder) {
                                        return containerItemBuilder.withGroups(getCardGroupsByInstance(instanceId, cardUidBuilder, cardVisualData, hostService, featureSwitches));
                                    });
                                });
                            });
                        }).build();
                    }(hostServices, cardVisualData, cardVisualInstanceIds, featureSwitches);
                }), formattingModelBuilder.build();
                var cardVisualData, cardVisualInstanceIds, hostServices, cardsVisualsMetadata, featureSwitches, shape, formattingModelBuilder;
            }, CardVisual.prototype.addonObjectAccessibility = function(options) {
                var shouldAlertScreenReader = options.type & enums.EP.FormattingSubSelectionChange;
                if (this.subSelectionHelper && (options.type & enums.EP.Data || options.type & enums.EP.Resize || options.type & enums.EP.FormattingSubSelectionChange) && (this.subSelectionHelper.updateOutlinesFromSubSelections(options.subSelections, !0), 
                this.hostServices.alertScreenReader && shouldAlertScreenReader)) {
                    var labels = this.subSelectionHelper.getLabelsFromSubSelections(options.subSelections, [ "aria-label" ]), message = (null == labels ? void 0 : labels.length) && labels.join(" ");
                    message && this.hostServices.alertScreenReader(message);
                }
            }, CardVisual;
        }(), CardVisualTile = function(_super) {
            function CardVisualTile(hostServices, featureSwitches, interactivityEnabled, formatMode) {
                var _this = _super.call(this, interactivityEnabled) || this;
                return _this.hostServices = hostServices, _this.featureSwitches = featureSwitches, 
                _this.interactivityEnabled = interactivityEnabled, _this.formatMode = formatMode, 
                _this;
            }
            return (0, tslib_es6.__extends)(CardVisualTile, _super), CardVisualTile.prototype.update = function(options) {
                return this.ariaLabel = this.hostServices.getLocalizedString("Visual_Card_Label", this.cardContents.main[1].props.text), 
                _super.prototype.update.call(this, options);
            }, CardVisualTile.prototype.beforeRender = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.state = this.cardMetadata.name, [ 2 ];
                    });
                });
            }, CardVisualTile.prototype.afterRender = function() {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var backwardsShapeCompatible;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        return backwardsShapeCompatible = !(this.properties.shape.default.tileShape === shapeType.m.RectangleRounded || this.properties.shape.default.tileShape === shapeType.m.TabCutTopCorners), 
                        this.state = this.cardMetadata.name, this.cardContents.dimensionsProps = this.getContentInscribedRectangleWithoutBorder(0, (null === (_a = this.featureSwitches) || void 0 === _a ? void 0 : _a.cardVisualRefUpdate) && backwardsShapeCompatible), 
                        (null === (_b = this.featureSwitches) || void 0 === _b ? void 0 : _b.cardVisualRefUpdate) && backwardsShapeCompatible && (this.cardContents.shapePathString = this.getAdjustedShapePath()), 
                        CardVisualContentRenderer.renderCardVisualContent(this.element, this.cardContents, this.selected), 
                        [ 2 ];
                    });
                });
            }, CardVisualTile.prototype.onTileContextMenu = function() {
                var _a;
                if (this.interactivityEnabled) {
                    if ((null === (_a = this.featureSwitches) || void 0 === _a ? void 0 : _a.onObject) && this.formatMode) return;
                    var d3Event = d3.event, args = {
                        data: [ this.cardMetadata.identity.getSelectorsByColumn() ],
                        position: {
                            x: d3Event.clientX,
                            y: d3Event.clientY
                        }
                    };
                    this.hostServices.onContextMenu(args), d3Event.preventDefault(), d3Event.stopPropagation();
                }
            }, CardVisualTile;
        }(tileLibraryTile.n), CardVisualTilesLayout = function() {
            function CardVisualTilesLayout(container, interactivityService, featureSwitches, eventManager) {
                this.container = container, this.interactivityService = interactivityService, this.featureSwitches = featureSwitches, 
                this.gridLayout = new gridLayout.Me(container, function() {
                    return loadMoreDataHandler.G.NoOperation;
                }, !0, interactivityService, eventManager, CardVisualTilesLayout.boundDataKey, this.featureSwitches);
            }
            return CardVisualTilesLayout.prototype.destroy = function() {
                var _a;
                null === (_a = this.gridLayout) || void 0 === _a || _a.destroy();
            }, CardVisualTilesLayout.prototype.render = function(options) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _renderCell, layoutProps, overFlowProps, layoutOptions, customizePadding, cellPadding, settings, emptyMargin, calculatedCellDimensions, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return _renderCell = function(data) {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    var cardMetadata, $cell;
                                    return (0, tslib_es6.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return cardMetadata = options.cells[data.index], this.interactivityService && ($cell = data.element.closest(gridLayoutSelectors.bL.selector), 
                                            data.bindDataToGridCell($cell, cardMetadata, CardVisualTilesLayout.boundDataKey)), 
                                            [ 4, options.renderCell(data, options.cardVisualTilesFactory, cardMetadata) ];

                                          case 1:
                                            return _a.sent(), [ 2 ];
                                        }
                                    });
                                });
                            }, layoutProps = options.cardVisualData.layout, overFlowProps = options.cardVisualData.overFlow, 
                            layoutOptions = this.getCardVisualLayoutOptions(options.cardVisualData.layout, options.cells.length, options.layoutUpdate), 
                            cellPadding = this.createCellPadding((customizePadding = layoutProps.customizePadding) && layoutProps.orientation === navigatorOrientation.Bz.Grid ? layoutProps.columnPadding : layoutProps.cellPadding, customizePadding && layoutProps.orientation === navigatorOrientation.Bz.Grid ? layoutProps.rowPadding : layoutProps.cellPadding), 
                            settings = {
                                rowCount: layoutOptions.rowCount,
                                columnCount: layoutOptions.columnCount,
                                cellCount: options.cells.length,
                                renderCell: function(data) {
                                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                        return (0, tslib_es6.__generator)(this, function(_a) {
                                            switch (_a.label) {
                                              case 0:
                                                return [ 4, _renderCell(data) ];

                                              case 1:
                                                return _a.sent(), [ 2 ];
                                            }
                                        });
                                    });
                                },
                                renderCellSubheader: function() {
                                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                        return (0, tslib_es6.__generator)(this, function(_a) {
                                            return [ 2 ];
                                        });
                                    });
                                },
                                viewport: options.viewport,
                                headerMargins: CardVisualTilesLayout.getEmptyMargins(),
                                renderHeader: function() {},
                                subheaderHeight: 0,
                                subheaderLineHeight: 0,
                                subheaderPosition: 0,
                                shouldResetScrollPosition: !1,
                                cellPadding,
                                outerPadding: CardVisualTilesLayout.getEmptyMargins(),
                                scrollPadding: 5,
                                getCellBackgroundColor: function() {
                                    return null;
                                },
                                backgroundTransparency: 100,
                                subheaderShow: !1,
                                getAllCells: void 0,
                                manageTabIndexOnRowHeaderFooter: void 0,
                                boldedSubheaders: void 0,
                                isHorizontal: overFlowProps.overFlowDirection === overFlowDirection.m.Horizontal,
                                isPaginated: overFlowProps.overFlowStyle === overFlowStyle.a.Paginated
                            }, this.updateSettingsForTableLayout(settings, options.cardVisualData.layout), this.gridLayout.update(settings), 
                            emptyMargin = this.createCellPadding(0, 0), calculatedCellDimensions = this.gridLayout.calculateCellDimensions(emptyMargin, void 0), 
                            [ 4, this.gridLayout.render({
                                calculatedCellDimensions
                            }) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, CardVisualTilesLayout.prototype.updateSettingsForTableLayout = function(settings, layoutOptions) {
                var gridLineSettings, borderSettings, background;
                return layoutOptions.style === layoutStyleType.i.Table ? (gridLineSettings = (0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, layoutOptions.customizeLines ? layoutOptions.gridline : layoutOptions.line), {
                    region: gridLineType.o.inner
                }), borderSettings = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, layoutOptions.customizeLines ? layoutOptions.border : layoutOptions.line), {
                    radius: layoutOptions.rectangleRoundedCurveCustomStyle ? {
                        topLeft: layoutOptions.rectangleRoundedCurveLeftTop,
                        topRight: layoutOptions.rectangleRoundedCurveRightTop,
                        bottomLeft: layoutOptions.rectangleRoundedCurveLeftBottom,
                        bottomRight: layoutOptions.rectangleRoundedCurveRightBottom
                    } : {
                        topLeft: layoutOptions.rectangleRoundedCurve,
                        topRight: layoutOptions.rectangleRoundedCurve,
                        bottomLeft: layoutOptions.rectangleRoundedCurve,
                        bottomRight: layoutOptions.rectangleRoundedCurve
                    }
                }), layoutOptions.backgroundShow && (background = {
                    color: layoutOptions.backgroundFillColor,
                    colorTransparency: layoutOptions.backgroundTransparency,
                    image: layoutOptions.backgroundImage,
                    imageTransparency: layoutOptions.backgroundImageTransparency
                }), settings.cellPadding = this.createCellPadding(0, 0)) : settings.noExtraPadding = !0, 
                settings.borderSettings = borderSettings, settings.background = background, settings.gridLineSettings = gridLineSettings, 
                settings;
            }, CardVisualTilesLayout.prototype.getCardVisualLayoutOptions = function(cardVisualLayoutProperties, cellCount, layoutUpdate) {
                var _a, clampedRows, clampedSingleAxis;
                switch (layoutUpdate ? (clampedSingleAxis = Math.max(1, Math.min(null !== (_a = cardVisualLayoutProperties.maxTiles) && void 0 !== _a ? _a : tileLibraryEnumerationHelper.W9, cellCount)), 
                clampedRows = Math.max(1, Math.min(cardVisualLayoutProperties.rowCount, Math.ceil(cellCount / cardVisualLayoutProperties.columnCount)))) : clampedSingleAxis = Math.max(cellCount, 1), 
                cardVisualLayoutProperties.orientation) {
                  case navigatorOrientation.Bz.Horizontal:
                  default:
                    return {
                        rowCount: 1,
                        columnCount: clampedSingleAxis
                    };

                  case navigatorOrientation.Bz.Vertical:
                    return {
                        rowCount: clampedSingleAxis,
                        columnCount: 1
                    };

                  case navigatorOrientation.Bz.Grid:
                    return {
                        rowCount: layoutUpdate ? clampedRows : cardVisualLayoutProperties.rowCount,
                        columnCount: cardVisualLayoutProperties.columnCount
                    };
                }
            }, CardVisualTilesLayout.prototype.createCellPadding = function(horizontalPadding, verticalPadding) {
                return {
                    top: Math.floor(verticalPadding) / 2,
                    bottom: 0,
                    left: Math.floor(horizontalPadding) / 2,
                    right: 0
                };
            }, CardVisualTilesLayout.getEmptyMargins = function() {
                return {
                    top: 0,
                    bottom: 0,
                    left: 0,
                    right: 0
                };
            }, CardVisualTilesLayout.prototype.alignBaselines = function() {
                return CardVisualContentRenderer.alignBaselines(d3.select(this.container.get(0)));
            }, CardVisualTilesLayout.boundDataKey = "card", CardVisualTilesLayout;
        }(), CardVisualTiles = function() {
            function CardVisualTiles(buildTile) {
                this.buildTile = buildTile, this.tiles = [];
            }
            return CardVisualTiles.prototype.get = function(index) {
                var tile = this.tiles[index];
                return tile || (tile = this.tiles[index] = this.buildTile()), tile;
            }, CardVisualTiles;
        }();
        function createCardVisual(options) {
            return new CardVisual(options);
        }
    },
    78558: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            $H: function() {
                return getInstanceSelector;
            },
            AG: function() {
                return convertIcon;
            },
            Ao: function() {
                return convertTileLayoutExtended;
            },
            BE: function() {
                return convertTileSettingWithInstances;
            },
            Cu: function() {
                return getSettingColorProps;
            },
            E4: function() {
                return convertTileShapeWithoutInstances;
            },
            EI: function() {
                return convertTileGlow;
            },
            Ge: function() {
                return convertTileLayout;
            },
            Mu: function() {
                return getSettingFromRepetitionObject;
            },
            Ou: function() {
                return convertTileOutlineCustom;
            },
            P8: function() {
                return convertTileOutline;
            },
            P_: function() {
                return convertTileFill;
            },
            RA: function() {
                return labelProps;
            },
            Ro: function() {
                return getAccentBarDefaults;
            },
            SB: function() {
                return convertTileGlowCustom;
            },
            Sg: function() {
                return getInstanceId;
            },
            U6: function() {
                return convertTilePadding;
            },
            VG: function() {
                return applyRepetitionPriority;
            },
            Vv: function() {
                return getConversionContext;
            },
            Yb: function() {
                return getSettingProps;
            },
            ZT: function() {
                return convertTileShapeCustomRectangle;
            },
            gS: function() {
                return getContainerName;
            },
            hn: function() {
                return convertTileShadowCustom;
            },
            iS: function() {
                return convertTileSpacing;
            },
            nD: function() {
                return convertTileShape;
            },
            nO: function() {
                return convertTileOverFlow;
            },
            s8: function() {
                return convertText;
            },
            s9: function() {
                return isDetailedInstance;
            },
            t9: function() {
                return convertTileShadow;
            },
            ur: function() {
                return convertTileFillCustom;
            },
            wp: function() {
                return convertAccentBar;
            },
            xN: function() {
                return valueProps;
            },
            zP: function() {
                return getSettingFontProps;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81337), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(52157), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46673), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(93187), _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(18664), _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(26570), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82755), _Visuals_types_legendPosition__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(70700);
        function isDetailedInstance(instance) {
            return void 0 !== instance.id;
        }
        function getInstanceId(instance) {
            return isDetailedInstance(instance) ? instance.id : instance;
        }
        function getInstanceSelector(instance) {
            return isDetailedInstance(instance) ? instance.selector : {
                id: instance
            };
        }
        function convertTileSettingWithInstances(instances, convertTileSetting) {
            return instances.reduce(function(tileSetting, instance) {
                return isDetailedInstance(instance) ? (tileSetting[instance.id] = convertTileSetting(instance, tileSetting.default), 
                tileSetting) : (tileSetting[instance] = "default" !== instance ? convertTileSetting(instance, tileSetting.default) : tileSetting[instance], 
                tileSetting);
            }, {
                default: convertTileSetting("default")
            });
        }
        function getConversionContext(dataView, instanceId, defaults, overrides) {
            if (isDetailedInstance(instanceId)) {
                var column = _.find(dataView.metadata.columns, function(column) {
                    return column.queryName === instanceId.id;
                });
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(column, "expected to find column of requested data"), 
                {
                    column,
                    objects: null == column ? void 0 : column.objects,
                    instanceDefaults: null == defaults ? void 0 : defaults[instanceId.id],
                    instanceOverrides: null == overrides ? void 0 : overrides[instanceId.id]
                };
            }
            return {
                objectInstance: instanceId,
                objects: dataView.metadata.objects,
                instanceDefaults: null == defaults ? void 0 : defaults[instanceId],
                instanceOverrides: null == overrides ? void 0 : overrides[instanceId]
            };
        }
        function convertTileFill(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = fillProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fill.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                });
            });
        }
        var fillProps = {
            props: {
                fillTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fill.transparency,
                fillImage: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fill.image
            },
            colorProps: {
                fillColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fill.fillColor
            }
        };
        function convertTileFillCustom(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = fillCustomProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                });
            });
        }
        var fillCustomProps = {
            props: {
                fillTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.transparency,
                fillImage: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.image,
                fillImageTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.imageTransparency,
                fillImageSplitTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.imageSplitTransparency
            },
            colorProps: {
                fillColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.fillColor
            }
        };
        function convertTileOutline(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = outlineProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    strokeShow: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.strokeShow) && void 0 !== _a ? _a : defaults.default.strokeShow)
                });
            });
        }
        function convertTileOutlineCustom(dataView, colorHelper, instanceIds, defaults, props) {
            void 0 === props && (props = outlinePropsCustom);
            var fallbackDefault = {
                default: {
                    strokeShow: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.show)
                }
            };
            return convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return instanceDefaults = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, instanceDefaults), null == fallbackDefault ? void 0 : fallbackDefault[objectInstance]), 
                (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        var outlineProps = {
            props: {
                strokeWidth: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.weight,
                strokeTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.transparency
            },
            colorProps: {
                strokeColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.lineColor
            }
        }, outlinePropsCustom = {
            props: {
                strokeWidth: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.weight,
                strokeTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.transparency,
                strokeShow: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.show
            },
            colorProps: {
                strokeColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.lineColor
            }
        };
        function convertTileShapeWithoutInstances(dataViewObject, defaults, props, overrides) {
            return void 0 === props && (props = shapeProps), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
            tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults), getSettingProps(dataViewObject, props.props)), overrides);
        }
        function convertTileShape(dataView, instanceIds, defaults, props, overrides) {
            return void 0 === props && (props = shapeProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), overrides);
            });
        }
        function convertTileShapeCustomRectangle(dataView, instanceIds, defaults, props, overrides) {
            return void 0 === props && (props = shapeCustomRectangelProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), overrides);
            });
        }
        var shapeCustomRectangelProps = {
            props: {
                tileShape: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tileShape,
                shapeRounding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.roundEdge,
                arrowheadSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.arrowheadSize,
                arrowStemWidth: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.arrowStemWidth,
                chevronAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.chevronAngle,
                isocelesTriangleTipPosition: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.isocelesTriangleTipPosition,
                parallelogramSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.parallelogramSlant,
                trapezoidSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.trapezoidSlant,
                hexagonSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.hexagonSlant,
                octagonSnipSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.octagonSnipSize,
                speechBubbleHeight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleHeight,
                speechBubbleTailPosition: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleTailPosition,
                speechBubbleTailAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleTailAngle,
                rectangleRoundedCurve: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurve,
                rectangleRoundedCurveCustomStyle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveCustomStyle,
                rectangleRoundedCurveLeftTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveLeftTop,
                rectangleRoundedCurveRightTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveRightTop,
                rectangleRoundedCurveLeftBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveLeftBottom,
                rectangleRoundedCurveRightBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveRightBottom,
                tabCutCornerSnipSizeTopRight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabCutCornerSnipSizeTopRight,
                tabCutCornerSnipSizeTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeTop,
                tabCutCornerSnipSizeCustomStyle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeCustomStyle,
                tabCutCornerSnipSizeLeftBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeLeftBottom,
                tabCutCornerSnipSizeLeftTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeLeftTop,
                tabCutCornerSnipSizeRightBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeRightBottom,
                tabCutCornerSnipSizeRightTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeRightTop,
                tabCutCornerSnipSizeBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeBottom,
                tabRoundCornerTopRight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerTopRight,
                tabRoundCornerTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerTop,
                tabRoundCornerBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerBottom
            }
        }, shapeProps = {
            props: {
                tileShape: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tileShape,
                shapeRounding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.roundEdge,
                arrowheadSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.arrowheadSize,
                arrowStemWidth: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.arrowStemWidth,
                chevronAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.chevronAngle,
                isocelesTriangleTipPosition: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.isocelesTriangleTipPosition,
                parallelogramSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.parallelogramSlant,
                trapezoidSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.trapezoidSlant,
                hexagonSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.hexagonSlant,
                octagonSnipSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.octagonSnipSize,
                speechBubbleHeight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleHeight,
                speechBubbleTailPosition: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleTailPosition,
                speechBubbleTailAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleTailAngle,
                rectangleRoundedCurve: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.rectangleRoundedCurve,
                rectangleRoundedCurveCustomStyle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveCustomStyle,
                rectangleRoundedCurveLeftTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveLeftTop,
                rectangleRoundedCurveRightTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveRightTop,
                rectangleRoundedCurveLeftBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveLeftBottom,
                rectangleRoundedCurveRightBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveRightBottom,
                tabCutCornerSnipSizeTopRight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabCutCornerSnipSizeTopRight,
                tabCutCornerSnipSizeTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabCutCornerSnipSizeTop,
                tabCutCornerSnipSizeCustomStyle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeCustomStyle,
                tabCutCornerSnipSizeLeftBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeLeftBottom,
                tabCutCornerSnipSizeLeftTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeLeftTop,
                tabCutCornerSnipSizeRightBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeRightBottom,
                tabCutCornerSnipSizeRightTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeRightTop,
                tabCutCornerSnipSizeBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabCutCornerSnipSizeBottom,
                tabRoundCornerTopRight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerTopRight,
                tabRoundCornerTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerTop,
                tabRoundCornerBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerBottom
            }
        };
        function convertTileShadow(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = shadowProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                });
            });
        }
        function convertTileShadowCustom(dataView, colorHelper, instanceIds, defaults, props) {
            void 0 === props && (props = shadowCustomProps);
            var fallbackDefault = {
                default: {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.show)
                }
            };
            return convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return instanceDefaults = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, instanceDefaults), null == fallbackDefault ? void 0 : fallbackDefault[objectInstance]), 
                (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        var shadowProps = {
            props: {
                shadowTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.transparency,
                shadowBlur: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.shadowBlur,
                shadowPositionPreset: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.shadowPositionPreset,
                shadowAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.angle,
                shadowDistance: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.shadowDistance
            },
            colorProps: {
                shadowColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.color
            }
        }, shadowCustomProps = {
            props: {
                shadowTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.transparency,
                shadowBlur: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.shadowBlur,
                shadowPositionPreset: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.shadowPositionPreset,
                shadowAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.angle,
                shadowDistance: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.shadowDistance,
                position: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.position,
                shadowSpread: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.shadowSpread,
                show: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.show
            },
            colorProps: {
                shadowColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.color
            }
        };
        function convertTileGlow(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = glowProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glow.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                });
            });
        }
        function convertTileGlowCustom(dataView, colorHelper, instanceIds, defaults, props) {
            void 0 === props && (props = glowCustomProps);
            var fallbackDefault = {
                default: {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.show)
                }
            };
            return convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return instanceDefaults = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, instanceDefaults), null == fallbackDefault ? void 0 : fallbackDefault[objectInstance]), 
                (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        var glowProps = {
            props: {
                glowTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glow.transparency,
                glowBlur: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glow.shadowBlur
            },
            colorProps: {
                glowColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glow.color
            }
        }, glowCustomProps = {
            props: {
                glowTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.transparency,
                glowBlur: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.shadowBlur,
                glowPositionPreset: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.glowPositionPreset,
                glowAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.angle,
                glowDistance: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.glowDistance,
                position: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.position,
                glowSpread: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.glowSpread,
                show: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.show
            },
            colorProps: {
                glowColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.color
            }
        };
        function convertText(dataView, colorHelper, instanceIds, defaults, props, overrides) {
            return void 0 === props && (props = textProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults, overrides), objects = _b.objects, instanceDefaults = _b.instanceDefaults, instanceOverrides = _b.instanceOverrides, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingFontProps(objects, colorHelper, props.fontProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                }), null == overrides ? void 0 : overrides.default), instanceOverrides);
            });
        }
        var textProps = {
            props: {
                text: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.text,
                verticalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.verticalAlignment,
                horizontalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.horizontalAlignment,
                rightMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.rightMargin,
                leftMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.leftMargin,
                topMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.topMargin,
                bottomMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.bottomMargin,
                rotation: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.angle
            },
            fontProps: {
                fontProperties: {
                    objectName: "text",
                    propertyNames: {
                        color: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontColor,
                        family: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontFamily,
                        italic: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.italic,
                        bold: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.bold,
                        underline: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.underline,
                        size: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontSize
                    }
                }
            }
        };
        function convertIcon(dataViewObject, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = iconProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                if (!isDetailedInstance(instanceId)) return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(dataViewObject, props.props, defaults[instanceId], defaultInstanceSettings, instanceId)), getSettingColorProps(dataViewObject, colorHelper, props.colorProps, defaults[instanceId], defaultInstanceSettings, instanceId)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataViewObject, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.show, defaults.default.show)
                });
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertFail("tileLibraryConverter: convertIcon not implemented for complex instance");
            });
        }
        var iconProps = {
            props: {
                shapeType: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.shapeType,
                iconImage: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.image,
                placement: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.placement,
                lineTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.lineTransparency,
                lineWeight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.lineWeight,
                verticalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.verticalAlignment,
                horizontalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.horizontalAlignment,
                rightMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.rightMargin,
                leftMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.leftMargin,
                topMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.topMargin,
                bottomMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.bottomMargin,
                iconSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.iconSize
            },
            colorProps: {
                lineColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.lineColor
            }
        };
        function getContainerName(instance, localize) {
            switch (instance) {
              case _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_5__.LU.default:
                instance = localize("Default");
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_5__.LU.hover:
                instance = localize("Navigator_Hover_State");
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_5__.LU.press:
                instance = localize("Navigator_Press_State");
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_5__.LU.selected:
                instance = localize("FieldListProperty_Selected");
            }
            return instance;
        }
        var valueProps = {
            props: {
                horizontalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.horizontalAlignment,
                labelDisplayUnits: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.labelDisplayUnits,
                labelPrecision: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.labelPrecision,
                customFormatString: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.customFormatString,
                showBlankAs: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.showBlankAs,
                transparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.transparency,
                textWrap: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.textWrap
            },
            fontProps: {
                fontProperties: {
                    objectName: "value",
                    propertyNames: {
                        color: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontColor,
                        family: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontFamily,
                        size: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontSize,
                        italic: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.italic,
                        bold: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.bold,
                        underline: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.underline
                    }
                }
            }
        }, labelProps = {
            props: {
                show: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.show,
                text: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.text,
                heading: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.heading,
                position: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.position,
                transparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.transparency,
                textWrap: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.textWrap,
                alignBaselines: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.alignBaselines,
                matchValueAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.matchValueAlignment,
                horizontalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.horizontalAlignment
            },
            fontProps: {
                fontProperties: {
                    objectName: "label",
                    propertyNames: {
                        color: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontColor,
                        family: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontFamily,
                        size: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontSize,
                        italic: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.italic,
                        bold: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.bold,
                        underline: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.underline
                    }
                }
            }
        }, accentBarProps = {
            props: {
                position: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.position,
                show: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.show,
                transparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.transparency,
                width: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.width
            },
            colorProps: {
                color: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.color
            }
        };
        function getAccentBarDefaults(style) {
            return {
                default: {
                    show: !1,
                    position: _Visuals_types_legendPosition__WEBPACK_IMPORTED_MODULE_6__.zw.left,
                    color: style.colorPalette.foreground.value,
                    transparency: 0,
                    width: 2
                }
            };
        }
        function convertAccentBar(dataView, colorHelper, instanceIds, defaults, props) {
            void 0 === props && (props = accentBarProps);
            var fallbackDefault = {
                default: {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.show)
                }
            };
            return convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return instanceDefaults = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, instanceDefaults), null == fallbackDefault ? void 0 : fallbackDefault[objectInstance]), 
                (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                }), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        var paddingProps = {
            props: {
                paddingSelection: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.padding.paddingSelection,
                leftMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.padding.leftMargin,
                rightMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.padding.rightMargin,
                bottomMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.padding.bottomMargin,
                topMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.padding.topMargin
            }
        };
        function convertTilePadding(dataView, instanceIds, defaults, props) {
            return void 0 === props && (props = paddingProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), function(dataViewObject, props, instanceDefaults, defaultInstanceSettings, instanceId) {
                    return _.entries(props).reduce(function(settings, _a) {
                        var _b, key = _a[0], value = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataViewObject, _a[1], null !== (_b = null == instanceDefaults ? void 0 : instanceDefaults[key]) && void 0 !== _b ? _b : null == defaultInstanceSettings ? void 0 : defaultInstanceSettings[key], instanceId);
                        if (null != value && (settings[key] = value), Object.keys(settings).includes("paddingSelection")) {
                            var paddingAdjustment = void 0;
                            if (settings.paddingSelection === _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.PG) return settings;
                            settings.paddingSelection === _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.EY ? paddingAdjustment = _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.YP : settings.paddingSelection === _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.Ln ? paddingAdjustment = _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.uz : settings.paddingSelection === _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.mJ && (paddingAdjustment = _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.cO), 
                            settings.leftMargin = settings.rightMargin = settings.topMargin = settings.bottomMargin = paddingAdjustment;
                        }
                        return settings;
                    }, {});
                }(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        var tileLayoutProps = {
            props: {
                verticalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.alignment,
                orientation: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.orientation,
                rowCount: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rowCount,
                columnCount: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.columnCount,
                maxTiles: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.maxTiles,
                cellPadding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.cellPadding,
                customizePadding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.customizePadding,
                rowPadding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rowPadding,
                columnPadding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.columnPadding,
                calloutSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.calloutSize
            }
        };
        function convertTileLayout(dataViewObject, layoutDefaults) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, layoutDefaults), getSettingProps(dataViewObject, tileLayoutProps.props));
        }
        function convertTileLayoutExtended(objects, colorHelper, defaults) {
            var _a, _b, _c, _d;
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
            tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults), getSettingProps(objects, tileLayoutProps.props)), {
                style: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.style, defaults.style),
                customizeLines: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.customizeLines, defaults.customizeLines),
                line: {
                    strokeShow: !0,
                    strokeColor: null !== (_a = colorHelper.getColorForProperty(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.lineColor, void 0)) && void 0 !== _a ? _a : defaults.line.strokeColor,
                    strokePattern: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.lineStyle, defaults.line.strokePattern),
                    strokeTransparency: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.lineTransparency, defaults.line.strokeTransparency),
                    strokeWidth: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.lineWidth, defaults.line.strokeWidth)
                },
                gridline: {
                    strokeShow: !0,
                    strokeColor: null !== (_b = colorHelper.getColorForProperty(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.gridlineColor, void 0)) && void 0 !== _b ? _b : defaults.gridline.strokeColor,
                    strokePattern: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.gridlineStyle, defaults.gridline.strokePattern),
                    strokeTransparency: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.gridlineTransparency, defaults.gridline.strokeTransparency),
                    strokeWidth: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.gridlineWidth, defaults.gridline.strokeWidth)
                },
                border: {
                    strokeShow: !0,
                    strokeColor: null !== (_c = colorHelper.getColorForProperty(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.borderColor, void 0)) && void 0 !== _c ? _c : defaults.border.strokeColor,
                    strokePattern: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.borderStyle, defaults.border.strokePattern),
                    strokeTransparency: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.borderTransparency, defaults.border.strokeTransparency),
                    strokeWidth: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.borderWidth, defaults.border.strokeWidth)
                },
                backgroundFillColor: null !== (_d = colorHelper.getColorForProperty(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.backgroundFillColor, void 0)) && void 0 !== _d ? _d : defaults.backgroundFillColor,
                backgroundShow: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.backgroundShow, defaults.backgroundShow),
                backgroundTransparency: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.backgroundTransparency, defaults.backgroundTransparency),
                backgroundImage: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.backgroundImage, defaults.backgroundImage),
                backgroundImageTransparency: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.backgroundImageTransparency, defaults.backgroundImageTransparency),
                rectangleRoundedCurveCustomStyle: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurveCustomStyle, defaults.rectangleRoundedCurveCustomStyle),
                rectangleRoundedCurve: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurve, defaults.rectangleRoundedCurve),
                rectangleRoundedCurveLeftTop: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurveLeftTop, defaults.rectangleRoundedCurveLeftTop),
                rectangleRoundedCurveRightTop: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurveRightTop, defaults.rectangleRoundedCurveRightTop),
                rectangleRoundedCurveLeftBottom: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurveLeftBottom, defaults.rectangleRoundedCurveLeftBottom),
                rectangleRoundedCurveRightBottom: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurveRightBottom, defaults.rectangleRoundedCurveRightBottom)
            });
        }
        var overFlowProps = {
            props: {
                overFlowDirection: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.overFlow.overFlowDirection,
                overFlowStyle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.overFlow.overFlowStyle
            }
        };
        function convertTileOverFlow(dataViewObject, overFlowDefaults) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, overFlowDefaults), getSettingProps(dataViewObject, overFlowProps.props));
        }
        var spacingProps = {
            props: {
                verticalSpacing: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.spacing.verticalSpacing
            }
        };
        function convertTileSpacing(dataView, instanceIds, defaults, props) {
            return void 0 === props && (props = spacingProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        function getSettingProps(dataViewObject, props, instanceDefaults, defaultInstanceSettings, instanceId) {
            return _.entries(props).reduce(function(settings, _a) {
                var _b, key = _a[0], value = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataViewObject, _a[1], null !== (_b = null == instanceDefaults ? void 0 : instanceDefaults[key]) && void 0 !== _b ? _b : null == defaultInstanceSettings ? void 0 : defaultInstanceSettings[key], instanceId);
                return null != value && (settings[key] = value), settings;
            }, {});
        }
        function getSettingColorProps(dataViewObject, colorHelper, props, instanceDefaults, defaultInstanceSettings, instanceId) {
            return _.entries(props).reduce(function(settings, _a) {
                var _b, key = _a[0], colorForProperty = colorHelper.getColorForProperty(dataViewObject, _a[1], void 0, instanceId), color = null !== (_b = null != colorForProperty ? colorForProperty : null == instanceDefaults ? void 0 : instanceDefaults[key]) && void 0 !== _b ? _b : null == defaultInstanceSettings ? void 0 : defaultInstanceSettings[key];
                return null != color && (settings[key] = color), settings;
            }, {});
        }
        function getSettingFontProps(dataViewObject, colorHelper, fontProps, instanceDefaults, defaultInstanceSettings, instanceId) {
            return _.entries(fontProps).reduce(function(fontSettings, _a) {
                var _b, dataViewObjectProperties, key = _a[0], fontProp = _a[1];
                if (null == instanceId) dataViewObjectProperties = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.RK)(dataViewObject, fontProp.objectName); else {
                    var userDefinedObjects = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.AO)(dataViewObject, fontProp.objectName);
                    dataViewObjectProperties = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.RK)(userDefinedObjects, instanceId);
                }
                var defaultFontProperties = (0, _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_8__.ED)(null !== (_b = null == defaultInstanceSettings ? void 0 : defaultInstanceSettings[key]) && void 0 !== _b ? _b : {}, null == instanceDefaults ? void 0 : instanceDefaults[key]), fontProperties = (0, 
                _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_8__.XH)(dataViewObjectProperties, fontProp.propertyNames, colorHelper, void 0, defaultFontProperties);
                return null != fontSettings && (fontSettings[key] = fontProperties), fontSettings;
            }, {});
        }
        function getSettingFromRepetitionObject(dataViewObject, props, colorHelper, instanceId) {
            if (props.repetitionProps) return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
            tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, getSettingProps(dataViewObject, props.repetitionProps.props, void 0, void 0, instanceId)), getSettingColorProps(dataViewObject, colorHelper, props.repetitionProps.colorProps, void 0, void 0, instanceId)), _.pickBy(getSettingFontProps(dataViewObject, colorHelper, props.repetitionProps.fontProps, void 0, void 0, instanceId), function(fontSetting) {
                return Object.keys(fontSetting).length;
            }));
        }
        function applyRepetitionPriority(metadataSettings, repetitionSettings) {
            for (var prop in repetitionSettings) {
                var value = repetitionSettings[prop];
                null != value && (metadataSettings[prop] = null != value.color ? (0, _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_8__.ED)(metadataSettings[prop], value) : value);
            }
        }
    },
    89088: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            $h: function() {
                return getCustomizableGlowGroupByInstance;
            },
            Ai: function() {
                return getCustomizableRectangleShapeCard;
            },
            Cv: function() {
                return getNewLayoutCardWithOverflow;
            },
            D9: function() {
                return getShadowGroupByInstance;
            },
            DD: function() {
                return enumerateTextProperties;
            },
            E0: function() {
                return getAccentBarGroupByInstance;
            },
            Gx: function() {
                return getFillCustomGroupByInstance;
            },
            JO: function() {
                return enumerateFillProperties;
            },
            LY: function() {
                return enumerateShapeProperties;
            },
            Oj: function() {
                return getIconGroupByInstance;
            },
            UW: function() {
                return enumerateShadowProperties;
            },
            W$: function() {
                return getAlignmentGroup;
            },
            W9: function() {
                return MaxTilesCount;
            },
            YC: function() {
                return getShapeGroup;
            },
            _6: function() {
                return getPaddingGroupByInstance;
            },
            _u: function() {
                return enumerateIconProperties;
            },
            br: function() {
                return enumerateShapePropertiesInstance;
            },
            cg: function() {
                return isNumericCompatible;
            },
            fy: function() {
                return getCustomizableRectangleShapeGroup;
            },
            gQ: function() {
                return enumerateGlowProperties;
            },
            g_: function() {
                return getCustomizableShadowGroupByInstance;
            },
            i7: function() {
                return getGlowGroupByInstance;
            },
            jf: function() {
                return getShapeGroupByInstance;
            },
            l5: function() {
                return isDateTimeCompatible;
            },
            l6: function() {
                return getNewLayoutCard;
            },
            mT: function() {
                return getLayoutCardWithOverflow;
            },
            nT: function() {
                return enumerateOutlineProperties;
            },
            oy: function() {
                return getTextGroupByInstance;
            },
            sZ: function() {
                return getOutlineGroupByInstance;
            },
            sc: function() {
                return getValueGroupByInstance;
            },
            uT: function() {
                return getShapeCard;
            },
            v6: function() {
                return getCalloutLayoutByInstance;
            },
            v9: function() {
                return getLabelGroupByInstance;
            },
            vU: function() {
                return getCustomizableOutlineGroupByInstance;
            },
            w: function() {
                return getLayoutCard;
            },
            wH: function() {
                return getFillGroupByInstance;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81337), _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(78558), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_cardVisual_capabilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(44364), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(52157), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(86998), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(46673), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(93187), _powerbi_legacy_PowerBIVisuals_Visuals_common_consts_dataLabelViewModel1Consts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(56707), _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33024), _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(2764), _powerbi_legacy_PowerBIVisuals_Visuals_types_iconPlacementType__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(67922), _powerbi_legacy_PowerBIVisuals_Visuals_types_navigatorOrientation__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(51322), _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(26570), _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(67741), _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(79154), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(56578), _Visuals_types_layoutStyleType__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(8054), MaxRoundEdgeValue = 100, MaxLineStrokeWidth = 12, MaxBlurValue = 100, MaxShadowDistancevalue = 100, MaxShadowAngle = 360, MaxMarginValue = 999, MaxLineWeightValue = 50, MaxIconSizeValue = 999, MaxArrowheadSize = 100, MaxArrowStemWidth = 50, MaxChevronAngle = 180, MaxTriangleTipPosition = 100, MaxSlantSize = 100, MaxSnipSize = 50, MaxBubbleHeight = 50, MaxBubbleTailAngle = 180, MaxRoundCornerSize = 50, marginOptions = {
            minValue: {
                type: 0,
                value: 0
            },
            maxValue: {
                type: 1,
                value: MaxMarginValue
            },
            unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
        }, MaxTilesCount = 99, selectAllSeries = "default", spacingOptions = {
            minValue: {
                type: 0,
                value: 0
            },
            maxValue: {
                type: 1,
                value: 40
            },
            required: {
                type: 2
            },
            unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
        };
        function enumerateFillProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b;
            if (0 !== displayedInstanceIds.length) {
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.fill,
                    selector: null,
                    properties: {
                        show: properties.default.show
                    }
                });
                for (var _i = 0, displayedInstanceIds_1 = displayedInstanceIds; _i < displayedInstanceIds_1.length; _i++) {
                    var instance = displayedInstanceIds_1[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var fillPropertiesInstance = properties[instanceId], enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.fillColor] = fillPropertiesInstance.fillColor, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.fillTransparency] = fillPropertiesInstance.fillTransparency, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.fillImage] = fillPropertiesInstance.fillImage, 
                    _a);
                    enumeration.pushInstance({
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.fill,
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        propertyInstanceKind: (_b = {}, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.fillColor] = 3, 
                        _b)
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getFillGroupByInstance(showImageUpload, fillProperties, hostServices, instance, cardUidBuilder) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, fillProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.fill, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), fillPropertiesByInstance = fillProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), fillGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "fill"), localize);
            return fillGroupBuilder.withDisplayName("Visual_Fill").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.show), {
                        selector: null
                    }),
                    value: fillProperties.default.show
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.fillColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: fillPropertiesByInstance.fillColor
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }), showImageUpload && fillGroupBuilder.addSimpleSlice("image", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bD({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.image), {
                    selector
                }),
                value: fillPropertiesByInstance.fillImage
            }).build()), fillGroupBuilder.addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.transparency), {
                    selector
                }),
                value: fillPropertiesByInstance.fillTransparency,
                localize
            }).build()), fillGroupBuilder.build();
        }
        function getFillCustomGroupByInstance(showImageUpload, fillProperties, hostServices, instance, cardUidBuilder, groupDisplayName, colorSelector) {
            var _a, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, fillProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.fillCustom, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), fillPropertiesByInstance = null !== (_a = fillProperties[instanceId]) && void 0 !== _a ? _a : fillProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), fillGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "fill"), localize);
            return fillGroupBuilder.withDisplayName(groupDisplayName || "Visual_Fill").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.show), {
                        selector: null
                    }),
                    value: fillProperties.default.show
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.fillColor), {
                    selector: colorSelector || selector,
                    instanceKind: 3
                }),
                value: {
                    value: fillPropertiesByInstance.fillColor
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.transparency), {
                    selector
                }),
                value: fillPropertiesByInstance.fillTransparency,
                localize
            }).build()), showImageUpload && (fillGroupBuilder.addSimpleSlice("image", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bD({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.image), {
                    selector
                }),
                value: fillPropertiesByInstance.fillImage
            }).build(), function(builder) {
                return builder.withCustomDisplayName("Dashboard_Theme_Background_Image");
            }), fillGroupBuilder.addSimpleSlice("imageTransparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.imageTransparency), {
                    selector
                }),
                value: fillPropertiesByInstance.fillImageTransparency,
                localize
            }).build(), function(builder) {
                return builder.withDisabled(void 0 === fillPropertiesByInstance.fillImage || _.isEmpty(fillPropertiesByInstance.fillImage.name) && _.isEmpty(fillPropertiesByInstance.fillImage.url));
            })), fillGroupBuilder.build();
        }
        function enumerateOutlineProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b;
            if (0 !== displayedInstanceIds.length) {
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.outline,
                    selector: null,
                    properties: {
                        show: properties.default.strokeShow
                    }
                });
                for (var _i = 0, displayedInstanceIds_2 = displayedInstanceIds; _i < displayedInstanceIds_2.length; _i++) {
                    var instance = displayedInstanceIds_2[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var outlinePropertiesInstance = properties[instanceId], enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.outlineColor] = outlinePropertiesInstance.strokeColor, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.outlineWeight] = outlinePropertiesInstance.strokeWidth, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.outlineTransparency] = outlinePropertiesInstance.strokeTransparency, 
                    _a);
                    enumeration.pushInstance({
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.outline,
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        propertyInstanceKind: (_b = {}, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.outlineColor] = 3, 
                        _b)
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getOutlineGroupByInstance(outlineProperties, hostServices, instance, cardUidBuilder) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, outlineProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.outline, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), outlinePropertiesByInstance = outlineProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), borderGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "outline"), localize);
            return borderGroupBuilder.withDisplayName("Visual_Border").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.show), {
                        selector: null
                    }),
                    value: outlineProperties.default.strokeShow
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.lineColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: outlinePropertiesByInstance.strokeColor
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }).addSimpleSlice("width", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.weight), {
                    selector
                }),
                value: outlinePropertiesByInstance.strokeWidth,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxLineWeightValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_General_Properties_Width");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.transparency), {
                    selector
                }),
                value: outlinePropertiesByInstance.strokeTransparency,
                localize
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Transparency");
            }), borderGroupBuilder.build();
        }
        function getCustomizableOutlineGroupByInstance(outlineProperties, hostServices, instance, cardUidBuilder, colorSelector) {
            var _a, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, outlineProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.outline, outlinePropertiesByInstance = null !== (_a = outlineProperties[(0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)]) && void 0 !== _a ? _a : outlineProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), borderGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "outline"), localize);
            return borderGroupBuilder.withDisplayName("Visual_Border").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.show), {
                        selector
                    }),
                    value: outlinePropertiesByInstance.strokeShow
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.lineColor), {
                    selector: colorSelector || selector,
                    instanceKind: 3
                }),
                value: {
                    value: outlinePropertiesByInstance.strokeColor
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }).addSimpleSlice("width", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.weight), {
                    selector
                }),
                value: outlinePropertiesByInstance.strokeWidth,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxLineWeightValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_General_Properties_Width");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.transparency), {
                    selector
                }),
                value: outlinePropertiesByInstance.strokeTransparency,
                localize
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Transparency");
            }), borderGroupBuilder.build();
        }
        function enumerateShapePropertiesInstance(enumeration, properties, featureSwitches, selector, excludeShape) {
            var _a, _b, enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tileShape] = properties.tileShape, 
            _a);
            switch (-1 === [ _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Heart, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Line, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Oval, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Pill, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRounded ].indexOf(properties.tileShape) && (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shapeRounding] = properties.shapeRounding), 
            properties.tileShape === _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Line && (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.linecapType] = properties.linecapType), 
            properties.tileShape) {
              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Arrow:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.arrowheadSize] = properties.arrowheadSize, 
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.arrowStemWidth] = properties.arrowStemWidth;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.ArrowChevron:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.chevronAngle] = properties.chevronAngle;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.ArrowPentagon:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.arrowheadSize] = properties.arrowheadSize;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TriangleIsoc:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.isocelesTriangleTipPosition] = properties.isocelesTriangleTipPosition;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Parallelogram:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.parallelogramSlant] = properties.parallelogramSlant;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Trapezoid:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.trapezoidSlant] = properties.trapezoidSlant;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Hexagon:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.hexagonSlant] = properties.hexagonSlant;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Octagon:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.octagonSnipSize] = properties.octagonSnipSize;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Speechbubble:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.speechBubbleHeight] = properties.speechBubbleHeight, 
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.speechBubbleTailPosition] = properties.speechBubbleTailPosition, 
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.speechBubbleTailAngle] = properties.speechBubbleTailAngle;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRounded:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.rectangleRoundedCurve] = properties.rectangleRoundedCurve;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutCorner:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabCutCornerSnipSizeTopRight] = properties.tabCutCornerSnipSizeTopRight;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutTopCorners:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabCutCornerSnipSizeTop] = properties.tabCutCornerSnipSizeTop, 
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabCutCornerSnipSizeBottom] = properties.tabCutCornerSnipSizeBottom;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabRoundCorner:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabRoundCornerTopRight] = properties.tabRoundCornerTopRight;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabRoundTopCorners:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabRoundCornerTop] = properties.tabRoundCornerTop, 
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabRoundCornerBottom] = properties.tabRoundCornerBottom;
            }
            var validValues = ((_b = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shapeRounding] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                numberRange: {
                    min: 0,
                    max: MaxRoundEdgeValue
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.arrowheadSize] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 100
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.arrowStemWidth] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.chevronAngle] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g,
                numberRange: {
                    min: 0,
                    max: 180
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.isocelesTriangleTipPosition] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 100
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.parallelogramSlant] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 100
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.trapezoidSlant] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 100
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.hexagonSlant] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 100
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.octagonSnipSize] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.speechBubbleHeight] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.speechBubbleTailAngle] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g,
                numberRange: {
                    min: 0,
                    max: 180
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.rectangleRoundedCurve] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tabCutCornerSnipSizeTopRight] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tabRoundCornerTop] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tabCutCornerSnipSizeBottom] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tabRoundCornerTopRight] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b);
            excludeShape && (validValues[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tileShape] = {
                filterValues: _.filter(_.values(_powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m), function(s) {
                    return !excludeShape[s];
                })
            }), enumeration.pushInstance({
                objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.shape,
                selector,
                properties: enumerationProperties,
                validValues
            });
        }
        function enumerateShapeProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName, featureSwitches, excludeShape) {
            for (var _i = 0, displayedInstanceIds_3 = displayedInstanceIds; _i < displayedInstanceIds_3.length; _i++) {
                var instance = displayedInstanceIds_3[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                1 !== displayedInstanceIds.length && enumeration.pushContainer({
                    displayName: getInstanceDisplayName(instanceId)
                }), enumerateShapePropertiesInstance(enumeration, properties[instanceId], 0, (0, 
                _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), excludeShape), 
                1 !== displayedInstanceIds.length && enumeration.popContainer();
            }
        }
        function getShapeGroupByInstance(shapeProperties, hostServices, featureSwitches, instance, cardUidBuilder, excludeShape) {
            return getShapeGroup(shapeProperties[(0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)], hostServices, featureSwitches, (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), cardUidBuilder, excludeShape);
        }
        function getShapeGroup(shapeProperties, hostServices, featureSwitches, selector, cardUidBuilder, excludeShape) {
            var excludeFromRounding = [ _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Heart, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Line, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Oval, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Pill, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRounded ], localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, shapeProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.shape, shapeGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "shape"), localize);
            if ((null == featureSwitches ? void 0 : featureSwitches.onObject) && shapeGroupBuilder.withDisplayName("Visual_Shape"), 
            excludeShape) {
                var filterValues = _.filter(_.values(_powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m), function(s) {
                    return !excludeShape[s];
                });
                shapeGroupBuilder.addSimpleSlice("shape", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tileShape), {
                        selector
                    }),
                    value: shapeProperties.tileShape,
                    filterValues
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape");
                });
            } else shapeGroupBuilder.addSimpleSlice("shape", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tileShape), {
                    selector
                }),
                value: shapeProperties.tileShape
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Shape");
            });
            switch (-1 === excludeFromRounding.indexOf(shapeProperties.tileShape) && shapeGroupBuilder.addSimpleSlice("roundEdge", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.roundEdge), {
                    selector
                }),
                value: shapeProperties.shapeRounding,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxRoundEdgeValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("VisualContainer_Border_RoundedCorners");
            }), shapeProperties.tileShape) {
              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Line:
                shapeGroupBuilder.addSimpleSlice("cap type", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.WO.shape.linecapType), {
                        selector
                    }),
                    value: shapeProperties.linecapType
                }).build());
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Arrow:
                shapeGroupBuilder.addSimpleSlice("arrowheadSize", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.arrowheadSize), {
                        selector
                    }),
                    value: shapeProperties.arrowheadSize,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxArrowheadSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ArrowheadSize");
                }).addSimpleSlice("arrowStemWidth", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.arrowStemWidth), {
                        selector
                    }),
                    value: shapeProperties.arrowStemWidth,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxArrowStemWidth
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ArrowStemWidth");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.ArrowChevron:
                shapeGroupBuilder.addSimpleSlice("chevronAngle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.chevronAngle), {
                        selector
                    }),
                    value: shapeProperties.chevronAngle,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxChevronAngle
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Angle");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.ArrowPentagon:
                shapeGroupBuilder.addSimpleSlice("arrowheadSize", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.arrowheadSize), {
                        selector
                    }),
                    value: shapeProperties.arrowheadSize,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxArrowheadSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ArrowheadSize");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TriangleIsoc:
                shapeGroupBuilder.addSimpleSlice("isocelesTriangleTipPosition", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.isocelesTriangleTipPosition), {
                        selector
                    }),
                    value: shapeProperties.isocelesTriangleTipPosition,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxTriangleTipPosition
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TriangleTipPosition");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Parallelogram:
                shapeGroupBuilder.addSimpleSlice("parallelogramSlant", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.parallelogramSlant), {
                        selector
                    }),
                    value: shapeProperties.parallelogramSlant,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxSlantSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_Slant");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Trapezoid:
                shapeGroupBuilder.addSimpleSlice("trapezoidSlant", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.trapezoidSlant), {
                        selector
                    }),
                    value: shapeProperties.trapezoidSlant,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxSlantSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_Slant");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Hexagon:
                shapeGroupBuilder.addSimpleSlice("hexagonSlant", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.hexagonSlant), {
                        selector
                    }),
                    value: shapeProperties.hexagonSlant,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxSlantSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_Slant");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Octagon:
                shapeGroupBuilder.addSimpleSlice("octagonSnipSize", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.octagonSnipSize), {
                        selector
                    }),
                    value: shapeProperties.octagonSnipSize,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxSnipSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_OctagonSnipSize");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Speechbubble:
                shapeGroupBuilder.addSimpleSlice("speechBubbleHeight", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.speechBubbleHeight), {
                        selector
                    }),
                    value: shapeProperties.speechBubbleHeight,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxBubbleHeight
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ChatBubbleHeight");
                }).addSimpleSlice("speechBubbleTailPosition", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.speechBubbleTailPosition), {
                        selector
                    }),
                    value: shapeProperties.speechBubbleTailPosition
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ChatTailPosition");
                }).addSimpleSlice("speechBubbleTailAngle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.speechBubbleTailAngle), {
                        selector
                    }),
                    value: shapeProperties.speechBubbleTailAngle,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxBubbleTailAngle
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ChatTailAngle");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRounded:
                shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurve", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurve), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurve,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_RectangleRoundedCurve");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutCorner:
                shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeTopRight", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeTopRight), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeTopRight,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeTopRight");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutTopCorners:
                shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeTop");
                }).addSimpleSlice("tabCutCornerSnipSizeBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeBottom");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabRoundCorner:
                shapeGroupBuilder.addSimpleSlice("tabRoundCornerTopRight", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabRoundCornerTopRight), {
                        selector
                    }),
                    value: shapeProperties.tabRoundCornerTopRight,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabRoundingTopRight");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabRoundTopCorners:
                shapeGroupBuilder.addSimpleSlice("tabRoundCornerTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabRoundCornerTop), {
                        selector
                    }),
                    value: shapeProperties.tabRoundCornerTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabRoundingTop");
                }).addSimpleSlice("tabRoundCornerBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabRoundCornerBottom), {
                        selector
                    }),
                    value: shapeProperties.tabRoundCornerBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabRoundingBottom");
                });
            }
            return shapeGroupBuilder.build();
        }
        function getCustomizableRectangleShapeGroup(shapeProperties, hostServices, featureSwitches, selector, cardUidBuilder, excludeShape, disabledReason) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, shapeProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.shapeCustomRectangle, shapeGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "shape"), localize);
            if ((null == featureSwitches ? void 0 : featureSwitches.onObject) && shapeGroupBuilder.withDisplayName("Visual_Shape"), 
            excludeShape) {
                var filterValues = _.filter(_.values(_powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m), function(s) {
                    return !excludeShape[s];
                });
                shapeGroupBuilder.addSimpleSlice("shape", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tileShape), {
                        selector
                    }),
                    value: shapeProperties.tileShape,
                    filterValues
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape");
                });
            } else shapeGroupBuilder.addSimpleSlice("shape", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tileShape), {
                    selector
                }),
                value: shapeProperties.tileShape
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Shape");
            });
            switch (shapeProperties.tileShape) {
              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRounded:
                shapeProperties.rectangleRoundedCurveCustomStyle || shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurve", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurve), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurve,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_RectangleRoundedCurve");
                }), shapeProperties.rectangleRoundedCurveCustomStyle && shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurveLeftTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveLeftTop), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveLeftTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveRightTop), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveRightTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveLeftBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveLeftBottom), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveLeftBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveRightBottom), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveRightBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()), shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurveCustomStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveCustomStyle), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveCustomStyle
                }).build());
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRoundedByPixel:
                shapeProperties.rectangleRoundedCurveCustomStyle || shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurve", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurve), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurve,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_RectangleRoundedCurve");
                }), shapeProperties.rectangleRoundedCurveCustomStyle && shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurveLeftTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveLeftTop), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveLeftTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveRightTop), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveRightTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveLeftBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveLeftBottom), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveLeftBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveRightBottom), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveRightBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()), shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurveCustomStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveCustomStyle), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveCustomStyle
                }).build());
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutTopCorners:
                shapeProperties.tabCutCornerSnipSizeCustomStyle || shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeTop");
                }).addSimpleSlice("tabCutCornerSnipSizeBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeBottom");
                }), shapeProperties.tabCutCornerSnipSizeCustomStyle && shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeLeftTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeLeftTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeLeftTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("tabCutCornerSnipSizeRightTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeRightTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeRightTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("tabCutCornerSnipSizeLeftBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeLeftBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeLeftBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeRightBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeRightBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()), shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeCustomStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeCustomStyle), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeCustomStyle
                }).build());
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutTopCornersByPixel:
                shapeProperties.tabCutCornerSnipSizeCustomStyle || shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeTop");
                }).addSimpleSlice("tabCutCornerSnipSizeBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeBottom");
                }), shapeProperties.tabCutCornerSnipSizeCustomStyle && shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeLeftTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeLeftTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeLeftTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("tabCutCornerSnipSizeRightTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeRightTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeRightTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("tabCutCornerSnipSizeLeftBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeLeftBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeLeftBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeRightBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeRightBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()), shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeCustomStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeCustomStyle), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeCustomStyle
                }).build());
            }
            return disabledReason && shapeGroupBuilder.withDisabled(!0, disabledReason), shapeGroupBuilder.build();
        }
        function getShapeCard(shapeProperties, hostServices, featureSwitches, instanceId, excludeShape) {
            var shapeProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_7__.tp.shape, cardUidBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg("shape"), cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(cardUidBuilder, "Visual_Shape", [ shapeProps.tileShape, shapeProps.roundEdge, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.WO.shape.linecapType, shapeProps.arrowheadSize, shapeProps.arrowStemWidth, shapeProps.chevronAngle, shapeProps.isocelesTriangleTipPosition, shapeProps.parallelogramSlant, shapeProps.trapezoidSlant, shapeProps.hexagonSlant, shapeProps.octagonSnipSize, shapeProps.speechBubbleHeight, shapeProps.speechBubbleTailPosition, shapeProps.speechBubbleTailAngle, shapeProps.rectangleRoundedCurve, shapeProps.tabCutCornerSnipSizeTopRight, shapeProps.tabCutCornerSnipSizeTop, shapeProps.tabCutCornerSnipSizeBottom, shapeProps.tabRoundCornerTopRight, shapeProps.tabRoundCornerTop, shapeProps.tabRoundCornerBottom ], function(key) {
                return hostServices.getLocalizedString(key);
            }), groups = [], shapeGroupByInstance = getShapeGroupByInstance(shapeProperties, hostServices, featureSwitches, instanceId, cardUidBuilder, excludeShape);
            return groups.push(shapeGroupByInstance), cardBuilder.withGroups(groups), cardBuilder.build();
        }
        function getCustomizableRectangleShapeCard(shapeProperties, hostServices, featureSwitches, instanceId, excludeShape) {
            var shapeProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_cardVisual_capabilities__WEBPACK_IMPORTED_MODULE_8__.L$.shapeCustomRectangle, cardUidBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg("shape"), cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(cardUidBuilder, "Visual_Shape", [ shapeProps.tileShape, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.WO.shape.linecapType, shapeProps.rectangleRoundedCurve, shapeProps.rectangleRoundedCurveCustomStyle, shapeProps.rectangleRoundedCurveLeftTop, shapeProps.rectangleRoundedCurveRightTop, shapeProps.rectangleRoundedCurveLeftBottom, shapeProps.rectangleRoundedCurveRightBottom, shapeProps.tabCutCornerSnipSizeCustomStyle, shapeProps.tabCutCornerSnipSizeLeftBottom, shapeProps.tabCutCornerSnipSizeTop, shapeProps.tabCutCornerSnipSizeBottom, shapeProps.tabCutCornerSnipSizeLeftTop, shapeProps.tabCutCornerSnipSizeRightBottom, shapeProps.tabCutCornerSnipSizeRightTop ], function(key) {
                return hostServices.getLocalizedString(key);
            }), groups = [], shapeGroupByInstance = function(shapeProperties, hostServices, featureSwitches, instance, cardUidBuilder, excludeShape) {
                return getCustomizableRectangleShapeGroup(shapeProperties[(0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)], hostServices, featureSwitches, (0, 
                _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), cardUidBuilder, excludeShape);
            }(shapeProperties, hostServices, featureSwitches, instanceId, cardUidBuilder, excludeShape);
            return groups.push(shapeGroupByInstance), cardBuilder.withGroups(groups), cardBuilder.build();
        }
        function enumerateShadowProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b;
            if (0 !== displayedInstanceIds.length) {
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.shadow,
                    selector: null,
                    properties: {
                        show: properties.default.show
                    }
                });
                for (var _i = 0, displayedInstanceIds_4 = displayedInstanceIds; _i < displayedInstanceIds_4.length; _i++) {
                    var instance = displayedInstanceIds_4[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var shadowPropertiesInstance = properties[instanceId], enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowColor] = shadowPropertiesInstance.shadowColor, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowTransparency] = shadowPropertiesInstance.shadowTransparency, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowBlur] = shadowPropertiesInstance.shadowBlur, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowPositionPreset] = shadowPropertiesInstance.shadowPositionPreset, 
                    _a);
                    "custom" === shadowPropertiesInstance.shadowPositionPreset && (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowAngle] = shadowPropertiesInstance.shadowAngle, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowDistance] = shadowPropertiesInstance.shadowDistance), 
                    enumeration.pushInstance({
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.shadow,
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        propertyInstanceKind: (_b = {}, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowColor] = 3, 
                        _b)
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getShadowGroupByInstance(shadowProperties, hostServices, instance, cardUidBuilder) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, shadowProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.shadow, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), shadowPropertiesByInstance = shadowProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), shadowGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "shadow"), localize);
            return shadowGroupBuilder.withDisplayName("Visual_DropShadow").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.show), {
                        selector: null
                    }),
                    value: shadowProperties.default.show
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.color), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: shadowPropertiesByInstance.shadowColor
                }
            }).build()).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.transparency), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowTransparency,
                localize
            }).build()).addSimpleSlice("blur", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowBlur), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowBlur,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxBlurValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build()).addSimpleSlice("position", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowPositionPreset), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowPositionPreset
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Position");
            }), "custom" === shadowPropertiesByInstance.shadowPositionPreset && shadowGroupBuilder.addSimpleSlice("angle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.angle), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowAngle,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowAngle
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Angle");
            }).addSimpleSlice("shadowDistance", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowDistance), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowDistance,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowDistancevalue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Distance");
            }), shadowGroupBuilder.build();
        }
        function getCustomizableShadowGroupByInstance(shadowProperties, hostServices, instance, cardUidBuilder, colorSelector) {
            var _a, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, shadowProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.shadowCustom, shadowPropertiesByInstance = null !== (_a = shadowProperties[(0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)]) && void 0 !== _a ? _a : shadowProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), shadowGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "shadow"), localize);
            return shadowGroupBuilder.withDisplayName("Visual_DropShadow").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.show), {
                        selector
                    }),
                    value: shadowPropertiesByInstance.show
                }).build();
            }), shadowGroupBuilder.addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.color), {
                    selector: colorSelector || selector,
                    instanceKind: 3
                }),
                value: {
                    value: shadowPropertiesByInstance.shadowColor
                }
            }).build()), shadowGroupBuilder.addSimpleSlice("offset", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.position), {
                    selector
                }),
                value: shadowPropertiesByInstance.position
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Offset");
            }), shadowGroupBuilder.addSimpleSlice("position", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowPositionPreset), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowPositionPreset
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Position");
            }), "custom" === shadowPropertiesByInstance.shadowPositionPreset && (shadowGroupBuilder.addSimpleSlice("size", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowSpread), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowSpread,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: 10
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                },
                localize
            }).build()), shadowGroupBuilder.addSimpleSlice("blur", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowBlur), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowBlur,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxBlurValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build()), shadowGroupBuilder.addSimpleSlice("angle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.angle), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowAngle,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowAngle
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Angle");
            }), shadowGroupBuilder.addSimpleSlice("shadowDistance", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowDistance), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowDistance,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowDistancevalue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Distance");
            }), shadowGroupBuilder.addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.transparency), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowTransparency,
                localize
            }).build())), shadowGroupBuilder.build();
        }
        function enumerateGlowProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b;
            if (0 !== displayedInstanceIds.length) {
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.glow,
                    selector: null,
                    properties: {
                        show: properties.default.show
                    }
                });
                for (var _i = 0, displayedInstanceIds_5 = displayedInstanceIds; _i < displayedInstanceIds_5.length; _i++) {
                    var instance = displayedInstanceIds_5[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var glowPropertiesInstance = properties[instanceId], enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.glowColor] = glowPropertiesInstance.glowColor, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.glowTransparency] = glowPropertiesInstance.glowTransparency, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowBlur] = glowPropertiesInstance.glowBlur, 
                    _a);
                    enumeration.pushInstance({
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.glow,
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        propertyInstanceKind: (_b = {}, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.glowColor] = 3, 
                        _b)
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getGlowGroupByInstance(glowProperties, hostServices, instance, cardUidBuilder) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, glowProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.glow, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), glowPropertiesByInstance = glowProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), glowGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "glow"), localize);
            return glowGroupBuilder.withDisplayName("Visual_Glow").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.show), {
                        selector: null
                    }),
                    value: glowProperties.default.show
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.color), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: glowPropertiesByInstance.glowColor
                }
            }).build()).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.transparency), {
                    selector
                }),
                value: glowPropertiesByInstance.glowTransparency,
                localize
            }).build()).addSimpleSlice("blur", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.shadowBlur), {
                    selector
                }),
                value: glowPropertiesByInstance.glowBlur,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: 100
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build()), glowGroupBuilder.build();
        }
        function getCustomizableGlowGroupByInstance(glowProperties, hostServices, instance, cardUidBuilder, colorSelector) {
            var _a, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, glowProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.glowCustom, glowPropertiesByInstance = null !== (_a = glowProperties[(0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)]) && void 0 !== _a ? _a : glowProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), glowGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "glow"), localize);
            return glowGroupBuilder.withDisplayName("Visual_Glow").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.show), {
                        selector
                    }),
                    value: glowPropertiesByInstance.show
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.color), {
                    selector: colorSelector || selector,
                    instanceKind: 3
                }),
                value: {
                    value: glowPropertiesByInstance.glowColor
                }
            }).build()).addSimpleSlice("offset", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.position), {
                    selector
                }),
                value: glowPropertiesByInstance.position
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Offset");
            }).addSimpleSlice("position", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.glowPositionPreset), {
                    selector
                }),
                value: glowPropertiesByInstance.glowPositionPreset
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Position");
            }), "custom" === glowPropertiesByInstance.glowPositionPreset && glowGroupBuilder.addSimpleSlice("size", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.glowSpread), {
                    selector
                }),
                value: glowPropertiesByInstance.glowSpread,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: 10
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                },
                localize
            }).build()).addSimpleSlice("blur", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.shadowBlur), {
                    selector
                }),
                value: glowPropertiesByInstance.glowBlur,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: 100
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build()).addSimpleSlice("angle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.angle), {
                    selector
                }),
                value: glowPropertiesByInstance.glowAngle,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowAngle
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Angle");
            }).addSimpleSlice("shadowDistance", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.glowDistance), {
                    selector
                }),
                value: glowPropertiesByInstance.glowDistance,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowDistancevalue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Distance");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.transparency), {
                    selector
                }),
                value: glowPropertiesByInstance.glowTransparency,
                localize
            }).build()), glowGroupBuilder.build();
        }
        function enumerateTextProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b, _c;
            if (0 !== displayedInstanceIds.length) {
                var validNumberRangeForMargin = {
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                    numberRange: {
                        min: 0,
                        max: MaxMarginValue
                    }
                };
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.Vz.text,
                    selector: null,
                    properties: {
                        show: properties.default.show
                    }
                });
                for (var _i = 0, displayedInstanceIds_6 = displayedInstanceIds; _i < displayedInstanceIds_6.length; _i++) {
                    var instance = displayedInstanceIds_6[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var textPropertiesInstance = properties[instanceId], enumerationProperties = {}, propertyInstanceKind = {};
                    void 0 !== textPropertiesInstance.text && (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.text] = textPropertiesInstance.text, 
                    propertyInstanceKind[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.text] = 3), 
                    enumerationProperties = (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, enumerationProperties), ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.fontColor] = textPropertiesInstance.fontProperties.color, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.fontSize] = textPropertiesInstance.fontProperties.size.pt, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.fontFamily] = textPropertiesInstance.fontProperties.family, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.italic] = textPropertiesInstance.fontProperties.style, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.bold] = textPropertiesInstance.fontProperties.weight, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.underline] = textPropertiesInstance.fontProperties.textDecoration, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textVerticalAlignment] = textPropertiesInstance.verticalAlignment, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textHorizontalAlignment] = textPropertiesInstance.horizontalAlignment, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textRightMargin] = textPropertiesInstance.rightMargin, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textLeftMargin] = textPropertiesInstance.leftMargin, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textTopMargin] = textPropertiesInstance.topMargin, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textBottomMargin] = textPropertiesInstance.bottomMargin, 
                    _a)), propertyInstanceKind = (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, propertyInstanceKind), ((_b = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.fontColor] = 3, 
                    _b)), enumeration.pushInstance({
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.Vz.text,
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        validValues: (_c = {}, _c[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textRightMargin] = validNumberRangeForMargin, 
                        _c[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textLeftMargin] = validNumberRangeForMargin, 
                        _c[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textTopMargin] = validNumberRangeForMargin, 
                        _c[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textBottomMargin] = validNumberRangeForMargin, 
                        _c),
                        propertyInstanceKind
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getTextGroupByInstance(textProperties, hostServices, instance, cardUidBuilder) {
            var textProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.nm.text, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), textPropertiesByInstance = textProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), textGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "text"), function(key) {
                return hostServices.getLocalizedString(key);
            });
            return textGroupBuilder.withDisplayName("Text").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.show), {
                        selector: null
                    }),
                    value: textProperties.default.show
                }).build();
            }), void 0 !== textPropertiesByInstance.text && textGroupBuilder.addSimpleSlice("text", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.fq({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.text), {
                    selector,
                    instanceKind: 3
                }),
                placeholder: "",
                value: textPropertiesByInstance.text
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Text");
            }), textGroupBuilder.addCompositeSlice("font", "Font", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.UN).withFontFamily({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.fontFamily), {
                    selector
                }),
                value: textPropertiesByInstance.fontProperties.family
            }).withFontSizeProperties({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.fontSize), {
                    selector
                }),
                value: textPropertiesByInstance.fontProperties.size.pt
            }).withBold({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.bold), {
                    selector
                }),
                value: textPropertiesByInstance.fontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.en
            }).withItalic({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.italic), {
                    selector
                }),
                value: textPropertiesByInstance.fontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.BF
            }).withUnderline({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.underline), {
                    selector
                }),
                value: textPropertiesByInstance.fontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.f0
            }).build()).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.fontColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: textPropertiesByInstance.fontProperties.color
                }
            }).build()).addSimpleSlice("horizontalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.horizontalAlignment), {
                    selector
                }),
                value: textPropertiesByInstance.horizontalAlignment,
                mode: "horizontalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Horizontal");
            }).addSimpleSlice("verticalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.verticalAlignment), {
                    selector
                }),
                value: textPropertiesByInstance.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            }).addCompositeSlice("padding", "Visual_Padding", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uM).withLeft({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.leftMargin), {
                    selector
                }),
                value: textPropertiesByInstance.leftMargin,
                options: marginOptions
            }).withRight({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.rightMargin), {
                    selector
                }),
                value: textPropertiesByInstance.rightMargin,
                options: marginOptions
            }).withTop({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.topMargin), {
                    selector
                }),
                value: textPropertiesByInstance.topMargin,
                options: marginOptions
            }).withBottom({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.bottomMargin), {
                    selector
                }),
                value: textPropertiesByInstance.bottomMargin,
                options: marginOptions
            }).build()), textGroupBuilder.build();
        }
        function enumerateIconProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b, _c;
            if (0 !== displayedInstanceIds.length) {
                var validNumberRangeForLineWeight = {
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.tQ,
                    numberRange: {
                        min: 0,
                        max: MaxLineWeightValue
                    }
                }, validNumberRangeForMargin = {
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                    numberRange: {
                        min: 0,
                        max: MaxMarginValue
                    }
                }, validNumberRangeForIconSize = {
                    numberRange: {
                        min: 0,
                        max: MaxIconSizeValue
                    }
                };
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.Vz.icon,
                    selector: null,
                    properties: {
                        show: properties.default.show
                    }
                });
                for (var _i = 0, displayedInstanceIds_7 = displayedInstanceIds; _i < displayedInstanceIds_7.length; _i++) {
                    var instance = displayedInstanceIds_7[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var iconPropertiesInstance = properties[instanceId], enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.shapeType] = iconPropertiesInstance.shapeType, 
                    _a);
                    iconPropertiesInstance.shapeType === _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__.W.custom ? enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconImage] = iconPropertiesInstance.iconImage : (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconColor] = iconPropertiesInstance.lineColor, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconTransparency] = iconPropertiesInstance.lineTransparency, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconWeight] = iconPropertiesInstance.lineWeight), 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconPlacement] = iconPropertiesInstance.placement, 
                    iconPropertiesInstance.placement === _powerbi_legacy_PowerBIVisuals_Visuals_types_iconPlacementType__WEBPACK_IMPORTED_MODULE_12__.PG && (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconVerticalAlignment] = iconPropertiesInstance.verticalAlignment, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconHorizontalAlignment] = iconPropertiesInstance.horizontalAlignment), 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconLeftMargin] = iconPropertiesInstance.leftMargin, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconRightMargin] = iconPropertiesInstance.rightMargin, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconTopMargin] = iconPropertiesInstance.topMargin, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconBottomMargin] = iconPropertiesInstance.bottomMargin, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconSize] = iconPropertiesInstance.iconSize, 
                    enumeration.pushInstance({
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.Vz.icon,
                        validValues: (_b = {}, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconWeight] = validNumberRangeForLineWeight, 
                        _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconLeftMargin] = validNumberRangeForMargin, 
                        _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconRightMargin] = validNumberRangeForMargin, 
                        _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconTopMargin] = validNumberRangeForMargin, 
                        _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconBottomMargin] = validNumberRangeForMargin, 
                        _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconSize] = validNumberRangeForIconSize, 
                        _b),
                        propertyInstanceKind: (_c = {}, _c[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconColor] = 3, 
                        _c)
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getIconGroupByInstance(iconProperties, hostServices, instance, cardUidBuilder, featureSwitches) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, iconProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.nm.icon, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), iconPropertiesByInstance = iconProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), iconGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "icon"), localize);
            iconGroupBuilder.withDisplayName("Icon").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.show), {
                        selector: null
                    }),
                    value: iconProperties.default.show
                }).build();
            });
            var validIconTypes = _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__.i.members().map(function(member) {
                return member.value;
            });
            return featureSwitches.applyAllSlicersButton || (_.remove(validIconTypes, function(type) {
                return type === _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__.W.applyAllSlicers;
            }), _.remove(validIconTypes, function(type) {
                return type === _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__.W.clearAllSlicers;
            })), iconGroupBuilder.addSimpleSlice("icon type", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.shapeType), {
                    selector
                }),
                value: iconPropertiesByInstance.shapeType,
                filterValues: validIconTypes
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Button_Icon_Type");
            }), iconPropertiesByInstance.shapeType === _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__.W.custom ? iconGroupBuilder.addSimpleSlice("image", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bD({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.image), {
                    selector
                }),
                value: iconPropertiesByInstance.iconImage
            }).build()) : iconGroupBuilder.addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.lineColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: iconPropertiesByInstance.lineColor
                }
            }).build()).addSimpleSlice("width", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.lineWeight), {
                    selector
                }),
                value: iconPropertiesByInstance.lineWeight,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxLineWeightValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build()).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.lineTransparency), {
                    selector
                }),
                value: iconPropertiesByInstance.lineTransparency,
                localize
            }).build()), iconGroupBuilder.addSimpleSlice("iconplacement", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.placement), {
                    selector
                }),
                value: iconPropertiesByInstance.placement
            }).build()), iconPropertiesByInstance.placement === _powerbi_legacy_PowerBIVisuals_Visuals_types_iconPlacementType__WEBPACK_IMPORTED_MODULE_12__.PG && (iconGroupBuilder.addSimpleSlice("horizontalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.horizontalAlignment), {
                    selector
                }),
                value: iconPropertiesByInstance.horizontalAlignment,
                mode: "horizontalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Horizontal");
            }), iconGroupBuilder.addSimpleSlice("verticalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.verticalAlignment), {
                    selector
                }),
                value: iconPropertiesByInstance.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            })), iconGroupBuilder.addCompositeSlice("padding", "Visual_Padding", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uM).withLeft({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.leftMargin), {
                    selector
                }),
                value: iconPropertiesByInstance.leftMargin,
                options: marginOptions
            }).withRight({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.rightMargin), {
                    selector
                }),
                value: iconPropertiesByInstance.rightMargin,
                options: marginOptions
            }).withTop({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.topMargin), {
                    selector
                }),
                value: iconPropertiesByInstance.topMargin,
                options: marginOptions
            }).withBottom({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.bottomMargin), {
                    selector
                }),
                value: iconPropertiesByInstance.bottomMargin,
                options: marginOptions
            }).build()).addSimpleSlice("iconsize", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.iconSize), {
                    selector
                }),
                value: iconPropertiesByInstance.iconSize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxIconSizeValue
                    }
                }
            }).build()), iconGroupBuilder.build();
        }
        function getAccentBarGroupByInstance(accentBarProperties, hostServices, instance, cardUidBuilder, colorSelector) {
            var _a, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, accentBarProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.accentBar, accentBarPropertiesByInstance = null !== (_a = accentBarProperties[(0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)]) && void 0 !== _a ? _a : accentBarProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance);
            return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "bar"), localize).withDisplayName("Visual_Outline_AccentBar").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, accentBarProps.show), {
                        selector
                    }),
                    value: accentBarPropertiesByInstance.show
                }).build();
            }).addSimpleSlice("position", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, accentBarProps.position), {
                    selector
                }),
                value: accentBarPropertiesByInstance.position
            }).build()).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, accentBarProps.color), {
                    selector: colorSelector || selector,
                    instanceKind: 3
                }),
                value: {
                    value: accentBarPropertiesByInstance.color
                }
            }).build()).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, accentBarProps.transparency), {
                    selector
                }),
                value: accentBarPropertiesByInstance.transparency,
                localize
            }).build()).addSimpleSlice("accentBarWidth", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, accentBarProps.width), {
                    selector
                }),
                value: accentBarPropertiesByInstance.width,
                options: spacingOptions
            }).build()).build();
        }
        function getPaddingGroupByInstance(paddingProperties, hostServices, instance, cardUidBuilder, disabledReason) {
            var _a, paddingProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.padding, paddingPropertiesByInstance = null !== (_a = paddingProperties[(0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)]) && void 0 !== _a ? _a : paddingProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), paddingGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "padding"), function(key) {
                return hostServices.getLocalizedString(key);
            });
            return paddingGroupBuilder.withDisplayName("Visual_Padding").addSimpleSlice("paddingSelection", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, paddingProps.paddingSelection), {
                    selector
                }),
                value: paddingPropertiesByInstance.paddingSelection
            }).build()), paddingPropertiesByInstance.paddingSelection === _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_13__.PG && paddingGroupBuilder.addCompositeSlice("padding", "Visual_Padding", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uM).withLeft({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, paddingProps.leftMargin), {
                    selector
                }),
                value: paddingPropertiesByInstance.leftMargin,
                options: marginOptions
            }).withRight({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, paddingProps.rightMargin), {
                    selector
                }),
                value: paddingPropertiesByInstance.rightMargin,
                options: marginOptions
            }).withTop({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, paddingProps.topMargin), {
                    selector
                }),
                value: paddingPropertiesByInstance.topMargin,
                options: marginOptions
            }).withBottom({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, paddingProps.bottomMargin), {
                    selector
                }),
                value: paddingPropertiesByInstance.bottomMargin,
                options: marginOptions
            }).build()), disabledReason && paddingGroupBuilder.withDisabled(!0, disabledReason), 
            paddingGroupBuilder.build();
        }
        function getLabelGroupByInstance(labelProperties, spacingProperties, valueProperties, hostServices, instance, cardUidBuilder, featureSwitches) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, labelProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.label, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), labelPropertiesByInstance = labelProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), spacingPropertiesByInstance = spacingProperties[instanceId], spacingProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.spacing, valueGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "Role_DisplayName_Label"), localize);
            return valueGroupBuilder.withDisplayName("Role_DisplayName_Label").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.show), {
                        selector
                    }),
                    value: labelPropertiesByInstance.show
                }).build();
            }).addSimpleSlice("".concat(instanceId, "text"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.fq({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.text), {
                    selector,
                    instanceKind: 3
                }),
                placeholder: localize("Visual_Auto"),
                value: labelPropertiesByInstance.text
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Text").withDisabled("default" === instanceId);
            }).addSimpleSlice("heading", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.heading), {
                    selector
                }),
                value: labelPropertiesByInstance.heading
            }).build()).addCompositeSlice("font", "Font", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.UN).withFontFamily({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.fontFamily), {
                    selector
                }),
                value: labelPropertiesByInstance.fontProperties.family
            }).withFontSizeProperties({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.fontSize), {
                    selector
                }),
                value: labelPropertiesByInstance.fontProperties.size.pt
            }).withBold({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.bold), {
                    selector
                }),
                value: labelPropertiesByInstance.fontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.en
            }).withItalic({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.italic), {
                    selector
                }),
                value: labelPropertiesByInstance.fontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.BF
            }).withUnderline({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.underline), {
                    selector
                }),
                value: labelPropertiesByInstance.fontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.f0
            }).build()).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.fontColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: labelPropertiesByInstance.fontProperties.color
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.transparency), {
                    selector
                }),
                value: labelPropertiesByInstance.transparency,
                localize
            }).build()), valueGroupBuilder.addSimpleSlice("position", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.position), {
                    selector
                }),
                value: labelPropertiesByInstance.position
            }).build()), (null == featureSwitches ? void 0 : featureSwitches.cardVisualRefUpdate) && valueGroupBuilder.addSimpleSlice("verticalSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, spacingProps.verticalSpacing), {
                    selector
                }),
                value: spacingPropertiesByInstance.verticalSpacing,
                options: spacingOptions
            }).build()), valueGroupBuilder.addSimpleSlice("textWrap", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.textWrap), {
                    selector
                }),
                value: labelPropertiesByInstance.textWrap
            }).build()), (null == featureSwitches ? void 0 : featureSwitches.cardVisualRefUpdate) && (valueGroupBuilder.addSimpleSlice("matchValueAlignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.matchValueAlignment), {
                    selector
                }),
                value: labelPropertiesByInstance.matchValueAlignment
            }).build()), labelPropertiesByInstance.matchValueAlignment || valueGroupBuilder.addSimpleSlice("horizontalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.horizontalAlignment), {
                    selector
                }),
                value: labelPropertiesByInstance.horizontalAlignment,
                mode: "horizontalAlignment"
            }).build())), valueGroupBuilder.addSimpleSlice("alignBaselines", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.alignBaselines), {
                    selector
                }),
                value: labelProperties.default.alignBaselines
            }).build(), function(builder) {
                return builder.withDisabled(instanceId !== selectAllSeries);
            }), valueGroupBuilder.build();
        }
        function getValueGroupByInstance(valueProperties, hostServices, instance, cardUidBuilder, featureSwitches) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, valueProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.value, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), valuePropertiesByInstance = valueProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), hasCustomDisplayUnits = -1 === valuePropertiesByInstance.labelDisplayUnits, valueGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "value"), localize);
            if (valueGroupBuilder.withDisplayName("Role_DisplayName_Values").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.show), {
                        selector: null
                    }),
                    value: valueProperties.default.show
                }).build();
            }), valueGroupBuilder.addCompositeSlice("font", "Font", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.UN).withFontFamily({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.fontFamily), {
                    selector
                }),
                value: valuePropertiesByInstance.fontProperties.family
            }).withFontSizeProperties({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.fontSize), {
                    selector
                }),
                value: valuePropertiesByInstance.fontProperties.size.pt
            }).withBold({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.bold), {
                    selector
                }),
                value: valuePropertiesByInstance.fontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.en
            }).withItalic({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.italic), {
                    selector
                }),
                value: valuePropertiesByInstance.fontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.BF
            }).withUnderline({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.underline), {
                    selector
                }),
                value: valuePropertiesByInstance.fontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.f0
            }).build()), valueGroupBuilder.addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.fontColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: valuePropertiesByInstance.fontProperties.color
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.transparency), {
                    selector
                }),
                value: valuePropertiesByInstance.transparency,
                localize
            }).build()), valueGroupBuilder.addSimpleSlice("horizontalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.horizontalAlignment), {
                    selector
                }),
                value: valuePropertiesByInstance.horizontalAlignment,
                mode: "horizontalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Horizontal");
            }), valueGroupBuilder.addSimpleSlice("textWrap", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.textWrap), {
                    selector
                }),
                value: valuePropertiesByInstance.textWrap
            }).build()), null == featureSwitches ? void 0 : featureSwitches.cardVisualRefUpdate) {
                if (isNumericCompatible(valuePropertiesByInstance.valueType)) valueGroupBuilder.addSimpleSlice("displayUnits", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.labelDisplayUnits), {
                        selector
                    }),
                    value: valuePropertiesByInstance.labelDisplayUnits
                }).build()), hasCustomDisplayUnits && valueGroupBuilder.addSimpleSlice("".concat(instanceId, "customFormatString"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.fq({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.customFormatString), {
                        selector,
                        instanceKind: 3
                    }),
                    value: valuePropertiesByInstance.customFormatString,
                    placeholder: "Auto"
                }).build()), valueGroupBuilder.addSimpleSlice("precision", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.labelPrecision), {
                        selector,
                        instanceKind: 3
                    }),
                    value: valuePropertiesByInstance.labelPrecision,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: _powerbi_legacy_PowerBIVisuals_Visuals_common_consts_dataLabelViewModel1Consts__WEBPACK_IMPORTED_MODULE_14__.vo
                        }
                    }
                }).build()); else if (isDateTimeCompatible(valuePropertiesByInstance.valueType)) {
                    var dateTimeItems = hostServices.dateTimeFormatService().getCommonFormats().map(function(dateTimeFormat) {
                        return {
                            displayName: dateTimeFormat.displayLabel,
                            value: dateTimeFormat.formatString
                        };
                    });
                    valueGroupBuilder.addSimpleSlice("".concat(instanceId, "calloutCustomFormatStringDateFormat"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                        descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.customFormatString), {
                            selector
                        }),
                        items: dateTimeItems,
                        value: _.find(dateTimeItems, function(dateTimeItem) {
                            return dateTimeItem.value === valuePropertiesByInstance.customFormatString;
                        })
                    }).build());
                }
            } else valueGroupBuilder.addSimpleSlice("".concat(instanceId, "displayUnits"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.labelDisplayUnits), {
                    selector
                }),
                value: valuePropertiesByInstance.labelDisplayUnits
            }).build(), function(builder) {
                return builder.withDisabled(!!featureSwitches.cardVisualRefUpdate && (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.s9)(instance));
            }), hasCustomDisplayUnits && valueGroupBuilder.addSimpleSlice("".concat(instanceId, "customFormatString"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.fq({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.customFormatString), {
                    selector,
                    instanceKind: 3
                }),
                value: valuePropertiesByInstance.customFormatString,
                placeholder: "Auto"
            }).build(), function(builder) {
                return builder.withDisabled(!!featureSwitches.cardVisualRefUpdate && (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.s9)(instance));
            }), valueGroupBuilder.addSimpleSlice("".concat(instanceId, "precision"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.labelPrecision), {
                    selector,
                    instanceKind: 3
                }),
                value: valuePropertiesByInstance.labelPrecision,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: _powerbi_legacy_PowerBIVisuals_Visuals_common_consts_dataLabelViewModel1Consts__WEBPACK_IMPORTED_MODULE_14__.vo
                    }
                }
            }).build(), function(builder) {
                return builder.withDisabled(!!featureSwitches.cardVisualRefUpdate && (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.s9)(instance));
            });
            return valueGroupBuilder.addSimpleSlice("showBlankAs", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.fq({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.showBlankAs), {
                    selector,
                    instanceKind: 3
                }),
                value: valuePropertiesByInstance.showBlankAs,
                placeholder: ""
            }).build()), valueGroupBuilder.build();
        }
        function getLayoutCard(hostService, properties, tileProps) {
            var cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.layout), "Layout", [ tileProps.layout.alignment, tileProps.layout.orientation, tileProps.layout.rowCount, tileProps.layout.columnCount, tileProps.layout.cellPadding ], function(key) {
                return hostService.getLocalizedString(key);
            });
            return cardBuilder.addGroup(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.layout, function(groupBuilder) {
                addLayoutProperties(properties, tileProps, groupBuilder);
            }).build(), cardBuilder.build();
        }
        function addLayoutProperties(properties, tileProps, groupBuilder) {
            var validValuesForCellPadding = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                numberRange: {
                    min: -50,
                    max: 100
                }
            };
            groupBuilder.addSimpleSlice("verticalAlignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: tileProps.layout.alignment,
                value: properties.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            }), properties.hideOrientation || groupBuilder.addSimpleSlice("orientation", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: tileProps.layout.orientation,
                value: properties.orientation
            }).build()), properties.orientation === _powerbi_legacy_PowerBIVisuals_Visuals_types_navigatorOrientation__WEBPACK_IMPORTED_MODULE_15__.Bz.Grid && groupBuilder.addSimpleSlice("rowCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: tileProps.layout.rowCount,
                value: properties.rowCount,
                options: {
                    minValue: {
                        type: 0,
                        value: 1
                    },
                    maxValue: {
                        type: 1,
                        value: MaxTilesCount
                    },
                    required: {
                        type: 2
                    }
                }
            }).build()).addSimpleSlice("columnCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: tileProps.layout.columnCount,
                value: properties.columnCount,
                options: {
                    minValue: {
                        type: 0,
                        value: 1
                    },
                    maxValue: {
                        type: 1,
                        value: MaxTilesCount
                    },
                    required: {
                        type: 2
                    }
                }
            }).build()), groupBuilder.addSimpleSlice("cellPadding", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: tileProps.layout.cellPadding,
                value: properties.cellPadding,
                options: {
                    minValue: {
                        type: 0,
                        value: validValuesForCellPadding.numberRange.min
                    },
                    maxValue: {
                        type: 1,
                        value: validValuesForCellPadding.numberRange.max
                    },
                    unitSymbol: validValuesForCellPadding.unitSymbol
                }
            }).build());
        }
        function getLayoutCardWithOverflow(hostService, properties, tileProps, overFlowSettings) {
            var localize = function(key) {
                return hostService.getLocalizedString(key);
            }, cardUidBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.layout), cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(cardUidBuilder, "Layout", [ tileProps.layout.alignment, tileProps.layout.orientation, tileProps.layout.rowCount, tileProps.layout.columnCount, tileProps.layout.cellPadding, tileProps.overFlow.overFlowStyle, tileProps.overFlow.overFlowDirection ], localize), layoutGroup = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "layout"), localize);
            layoutGroup.withDisplayName("Layout"), addLayoutProperties(properties, tileProps, layoutGroup);
            var overflowGroup = getOverFlowCard(hostService, overFlowSettings, cardUidBuilder);
            return cardBuilder.withGroups([ layoutGroup.build(), overflowGroup.build() ]), cardBuilder.build();
        }
        function getNewLayoutCardWithOverflow(hostService, properties, tileProps, overFlowSettings) {
            var localize = function(key) {
                return hostService.getLocalizedString(key);
            }, cardUidBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.layout), cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(cardUidBuilder, "Layout", [ tileProps.layout.orientation, tileProps.layout.rowCount, tileProps.layout.columnCount, tileProps.layout.maxTiles, tileProps.layout.cellPadding, tileProps.layout.customizePadding, tileProps.layout.rowPadding, tileProps.layout.columnPadding, tileProps.overFlow.overFlowStyle, tileProps.overFlow.overFlowDirection ], localize), layoutGroup = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "layout"), localize).withDisplayName("Layout").addSimpleSlice("arrangement", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: tileProps.layout.orientation,
                value: properties.orientation
            }).build());
            if (properties.orientation === _powerbi_legacy_PowerBIVisuals_Visuals_types_navigatorOrientation__WEBPACK_IMPORTED_MODULE_15__.Bz.Grid) if (layoutGroup.addSimpleSlice("rowCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: tileProps.layout.rowCount,
                value: properties.rowCount,
                options: {
                    minValue: {
                        type: 0,
                        value: 1
                    },
                    maxValue: {
                        type: 1,
                        value: MaxTilesCount
                    },
                    required: {
                        type: 2
                    }
                }
            }).build(), function(builder) {
                return builder.withCustomDisplayName("Visual_Arrangement_RowsShownMax");
            }).addSimpleSlice("columnCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: tileProps.layout.columnCount,
                value: properties.columnCount,
                options: {
                    minValue: {
                        type: 0,
                        value: 1
                    },
                    maxValue: {
                        type: 1,
                        value: MaxTilesCount
                    },
                    required: {
                        type: 2
                    }
                }
            }).build(), function(builder) {
                return builder.withCustomDisplayName("Visual_Arrangement_ColumnsShown");
            }).addSimpleSlice("customizeSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                descriptor: tileProps.layout.customizePadding,
                value: !!properties.customizePadding
            }).build()), properties.customizePadding) {
                var spacingOptions_1 = {
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                    minValue: {
                        type: 0,
                        value: -50
                    },
                    maxValue: {
                        type: 1,
                        value: 100
                    }
                };
                layoutGroup.addSimpleSlice("rowSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: tileProps.layout.rowPadding,
                    value: properties.rowPadding,
                    options: spacingOptions_1
                }).build()).addSimpleSlice("columnSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: tileProps.layout.columnPadding,
                    value: properties.columnPadding,
                    options: spacingOptions_1
                }).build());
            } else {
                var spaceDisplayName_1 = properties.isButtons ? "Visual_Spacing_Between_Buttons" : "Visual_Spacing_Between_Cards";
                layoutGroup.addSimpleSlice("cellPadding", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: tileProps.layout.cellPadding,
                    value: properties.cellPadding,
                    options: spacingOptions
                }).build(), function(builder) {
                    return builder.withCustomDisplayName(spaceDisplayName_1);
                });
            } else {
                var displayName_1 = properties.isButtons ? "Visual_Arrangement_ButtonsShown" : "Visual_Arrangement_CardsShown";
                layoutGroup.addSimpleSlice("cardCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: tileProps.layout.maxTiles,
                    value: properties.maxTiles,
                    placeholderText: localize("Visual_Auto"),
                    options: {
                        minValue: {
                            type: 0,
                            value: 1
                        },
                        maxValue: {
                            type: 1,
                            value: MaxTilesCount
                        }
                    }
                }).build(), function(builder) {
                    return builder.withCustomDisplayName(displayName_1);
                });
                var spaceDisplayName_2 = properties.isButtons ? "Visual_Spacing_Between_Buttons" : "Visual_Spacing_Between_Cards";
                layoutGroup.addSimpleSlice("cellPadding", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: tileProps.layout.cellPadding,
                    value: properties.cellPadding,
                    options: spacingOptions
                }).build(), function(builder) {
                    return builder.withCustomDisplayName(spaceDisplayName_2);
                });
            }
            var overflowGroup = getOverFlowCard(hostService, overFlowSettings, cardUidBuilder);
            return cardBuilder.withGroups([ layoutGroup.build(), overflowGroup.build() ]), cardBuilder.build();
        }
        function getOverFlowCard(hostService, data, cardUidBuilder, options) {
            var overFlowProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.overFlow, overflowBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "overFlow"), function(key) {
                return hostService.getLocalizedString(key);
            });
            return overflowBuilder.withDisplayName("Visual_OverFlow"), overflowBuilder.addSimpleSlice(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.OverFlowStyle, new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: overFlowProps.overFlowStyle,
                value: data.overFlowStyle
            }).build()), (null == options ? void 0 : options.skipOrientation) || overflowBuilder.addSimpleSlice(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.OverFlowDirection, new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: overFlowProps.overFlowDirection,
                value: data.overFlowDirection
            }).build()), overflowBuilder;
        }
        function getAlignmentGroup(properties, hostServices, instance, cardUidBuilder, disabledReason) {
            var instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), layoutProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout, alignmentGroup = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "alignment".concat(instance)), function(key) {
                return hostServices.getLocalizedString(key);
            });
            return alignmentGroup.withDisplayName("Visual_TextAlignment").addSimpleSlice("".concat(instanceId, "vertAlign"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: layoutProps.alignment,
                value: properties.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            }), disabledReason && alignmentGroup.withDisabled(!0, disabledReason), alignmentGroup.build();
        }
        function getCalloutLayoutByInstance(layoutProperties, hostService, cardUidBuilder, calloutSizeDisabledReason, isDetailedInstance) {
            var localize = function(key) {
                return hostService.getLocalizedString(key);
            }, layoutProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout, calloutLayoutGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.calloutLayout), localize);
            return isDetailedInstance ? calloutLayoutGroupBuilder.withDisplayName("Layout").withDisabled(!0, "Visual_DisabledReason_AllSeriesOnly_Plural") : calloutLayoutGroupBuilder.withDisplayName("Layout").addSimpleSlice("verticalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: layoutProps.alignment,
                value: layoutProperties.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            }).addSimpleSlice("Visual_CallOutSize", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: layoutProps.calloutSize,
                value: layoutProperties.calloutSize,
                localize,
                options: {
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                }
            }).build(), function(builder) {
                return builder.withDisabled(void 0 !== calloutSizeDisabledReason, calloutSizeDisabledReason);
            }), calloutLayoutGroupBuilder.build();
        }
        function getNewLayoutCard(hostService, properties, overFlowSettings, options) {
            var localize = function(key) {
                return hostService.getLocalizedString(key);
            }, cardUidBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.layout), cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(cardUidBuilder, "Layout", [ _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.orientation, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rowCount, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.columnCount, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.maxTiles, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.cellPadding, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rowPadding, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.columnPadding, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.customizePadding, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.backgroundShow, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.backgroundFillColor, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.backgroundTransparency, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.backgroundImage, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.backgroundImageTransparency, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurveCustomStyle, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurve, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurveLeftTop, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurveRightTop, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurveLeftBottom, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurveRightBottom, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.customizeLines, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.lineStyle, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.lineTransparency, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.lineWidth, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.lineColor, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.gridlineStyle, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.gridlineTransparency, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.gridlineWidth, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.gridlineColor, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.borderStyle, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.borderTransparency, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.borderWidth, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.borderColor, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.overFlow.overFlowStyle, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.overFlow.overFlowDirection, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.style ], localize), layoutGroup = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "layout"), localize).withDisplayName("Layout");
            (null == options ? void 0 : options.skipArrangement) || layoutGroup.addSimpleSlice("arrangement", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.orientation,
                value: properties.orientation
            }).build()), layoutGroup.addSimpleSlice("style", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.style,
                value: properties.style
            }).build());
            var layoutFormattingGroups = [ layoutGroup ];
            if (properties.orientation === _powerbi_legacy_PowerBIVisuals_Visuals_types_navigatorOrientation__WEBPACK_IMPORTED_MODULE_15__.Bz.Grid) {
                if (layoutGroup.addSimpleSlice("rowCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rowCount,
                    value: properties.rowCount,
                    options: {
                        minValue: {
                            type: 0,
                            value: 1
                        },
                        maxValue: {
                            type: 1,
                            value: MaxTilesCount
                        },
                        required: {
                            type: 2
                        }
                    }
                }).build(), function(builder) {
                    return builder.withCustomDisplayName("Visual_Arrangement_RowsShownMax");
                }), (null == options ? void 0 : options.skipColumns) || layoutGroup.addSimpleSlice("columnCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.columnCount,
                    value: properties.columnCount,
                    options: {
                        minValue: {
                            type: 0,
                            value: 1
                        },
                        maxValue: {
                            type: 1,
                            value: MaxTilesCount
                        },
                        required: {
                            type: 2
                        }
                    }
                }).build(), function(builder) {
                    return builder.withCustomDisplayName("Visual_Arrangement_ColumnsShown");
                }), properties.style === _Visuals_types_layoutStyleType__WEBPACK_IMPORTED_MODULE_16__.i.Cards) if (layoutGroup.addSimpleSlice("customizeSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.customizePadding,
                    value: !!properties.customizePadding
                }).build()), properties.customizePadding) {
                    var spacingOptions_2 = {
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                        minValue: {
                            type: 0,
                            value: -50
                        },
                        maxValue: {
                            type: 1,
                            value: 100
                        }
                    };
                    layoutGroup.addSimpleSlice("rowSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                        descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rowPadding,
                        value: properties.rowPadding,
                        options: spacingOptions_2
                    }).build()), (null == options ? void 0 : options.skipColumns) || layoutGroup.addSimpleSlice("columnSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                        descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.columnPadding,
                        options: spacingOptions_2,
                        value: properties.columnPadding
                    }).build());
                } else {
                    var spaceDisplayName_3 = properties.isButtons ? "Visual_Spacing_Between_Buttons" : "Visual_Spacing_Between_Cards";
                    layoutGroup.addSimpleSlice("cellPadding", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                        descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.cellPadding,
                        value: properties.cellPadding,
                        options: spacingOptions
                    }).build(), function(builder) {
                        return builder.withCustomDisplayName(spaceDisplayName_3);
                    });
                }
            } else {
                var displayName_2 = properties.isButtons ? "Visual_Arrangement_ButtonsShown" : "Visual_Arrangement_CardsShown";
                layoutGroup.addSimpleSlice("cardCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.maxTiles,
                    value: properties.maxTiles,
                    placeholderText: localize("Visual_Auto"),
                    options: {
                        minValue: {
                            type: 0,
                            value: 1
                        },
                        maxValue: {
                            type: 1,
                            value: MaxTilesCount
                        }
                    }
                }).build(), function(builder) {
                    return builder.withCustomDisplayName(displayName_2);
                });
                var spaceDisplayName_4 = properties.isButtons ? "Visual_Spacing_Between_Buttons" : "Visual_Spacing_Between_Cards";
                layoutGroup.addSimpleSlice("cellPadding", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.cellPadding,
                    value: properties.cellPadding,
                    options: spacingOptions
                }).build(), function(builder) {
                    return builder.withCustomDisplayName(spaceDisplayName_4);
                });
            }
            return properties.style === _Visuals_types_layoutStyleType__WEBPACK_IMPORTED_MODULE_16__.i.Table && layoutFormattingGroups.push(function(properties, cardUidBuilder, localize) {
                var layoutProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout, shapeGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "shape"), localize);
                return shapeGroupBuilder.withDisplayName("Visual_Shape").addSimpleSlice("rectangleRoundedCurveCustomStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: layoutProps.rectangleRoundedCurveCustomStyle,
                    value: properties.rectangleRoundedCurveCustomStyle
                }).build()), properties.rectangleRoundedCurveCustomStyle ? shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurveLeftTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: layoutProps.rectangleRoundedCurveLeftTop,
                    value: properties.rectangleRoundedCurveLeftTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: layoutProps.rectangleRoundedCurveRightTop,
                    value: properties.rectangleRoundedCurveRightTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveLeftBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: layoutProps.rectangleRoundedCurveLeftBottom,
                    value: properties.rectangleRoundedCurveLeftBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: layoutProps.rectangleRoundedCurveRightBottom,
                    value: properties.rectangleRoundedCurveRightBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()) : shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurve", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: layoutProps.rectangleRoundedCurve,
                    value: properties.rectangleRoundedCurve,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()), shapeGroupBuilder;
            }(properties, cardUidBuilder, localize), function(properties, cardUidBuilder, localize) {
                var layoutProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout, backgroundGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "background"), localize);
                return backgroundGroupBuilder.withDisplayName("Visual_Background").addTopLevelToggle("show", function() {
                    return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                        descriptor: layoutProps.backgroundShow,
                        value: properties.backgroundShow
                    }).build();
                }).addSimpleSlice("backgroundColor", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, layoutProps.backgroundFillColor), {
                        instanceKind: 3
                    }),
                    value: {
                        value: properties.backgroundFillColor
                    }
                }).build()).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                    descriptor: layoutProps.backgroundTransparency,
                    value: properties.backgroundTransparency,
                    localize
                }).build()).addSimpleSlice("image", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bD({
                    descriptor: layoutProps.backgroundImage,
                    value: properties.backgroundImage
                }).build(), function(builder) {
                    return builder.withCustomDisplayName("Dashboard_Theme_Background_Image");
                }).addSimpleSlice("imageTransparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                    descriptor: layoutProps.backgroundImageTransparency,
                    value: properties.backgroundImageTransparency,
                    localize
                }).build()), backgroundGroupBuilder;
            }(properties, cardUidBuilder, localize), function(properties, cardUidBuilder, localize) {
                var layoutProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout, borderGridlinesGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "bordersGridlines"), localize);
                return borderGridlinesGroupBuilder.withDisplayName("Small_Multiples_Layout_Grid_Line_Type_All").addSimpleSlice("customizeLines", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: layoutProps.customizeLines,
                    value: properties.customizeLines
                }).build()), properties.customizeLines ? borderGridlinesGroupBuilder.addSimpleSlice("borderStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: layoutProps.borderStyle,
                    value: properties.border.strokePattern
                }).build()).addSimpleSlice("borderColor", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, layoutProps.borderColor), {
                        instanceKind: 3
                    }),
                    value: {
                        value: properties.border.strokeColor
                    }
                }).build()).addSimpleSlice("borderTransparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                    descriptor: layoutProps.borderTransparency,
                    value: properties.border.strokeTransparency,
                    localize
                }).build()).addSimpleSlice("borderWidth", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: layoutProps.borderWidth,
                    value: properties.border.strokeWidth,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxLineStrokeWidth
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("gridlineStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: layoutProps.gridlineStyle,
                    value: properties.gridline.strokePattern
                }).build()).addSimpleSlice("gridlineColor", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, layoutProps.gridlineColor), {
                        instanceKind: 3
                    }),
                    value: {
                        value: properties.gridline.strokeColor
                    }
                }).build()).addSimpleSlice("gridlineTransparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                    descriptor: layoutProps.gridlineTransparency,
                    value: properties.gridline.strokeTransparency,
                    localize
                }).build()).addSimpleSlice("gridlineWidth", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: layoutProps.gridlineWidth,
                    value: properties.gridline.strokeWidth,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxLineStrokeWidth
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()) : borderGridlinesGroupBuilder.addSimpleSlice("lineStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: layoutProps.lineStyle,
                    value: properties.line.strokePattern
                }).build()).addSimpleSlice("lineColor", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, layoutProps.lineColor), {
                        instanceKind: 3
                    }),
                    value: {
                        value: properties.line.strokeColor
                    }
                }).build()).addSimpleSlice("lineTransparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                    descriptor: layoutProps.lineTransparency,
                    value: properties.line.strokeTransparency,
                    localize
                }).build()).addSimpleSlice("lineWidth", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: layoutProps.lineWidth,
                    value: properties.line.strokeWidth,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxLineStrokeWidth
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_General_Properties_Width");
                }), borderGridlinesGroupBuilder;
            }(properties, cardUidBuilder, localize)), layoutFormattingGroups.push(getOverFlowCard(hostService, overFlowSettings, cardUidBuilder, options)), 
            cardBuilder.withGroups(layoutFormattingGroups.map(function(group) {
                return group.build();
            })), cardBuilder.build();
        }
        function isNumericCompatible(descriptor) {
            return !!((null == descriptor ? void 0 : descriptor.variant) || (null == descriptor ? void 0 : descriptor.bool) || (null == descriptor ? void 0 : descriptor.numeric));
        }
        function isDateTimeCompatible(descriptor) {
            return !!(null == descriptor ? void 0 : descriptor.dateTime);
        }
    },
    49366: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            n: function() {
                return Tile;
            }
        });
        var tslib_es6 = __webpack_require__(81337), tileLibraryConverter = __webpack_require__(78558), legendPosition = __webpack_require__(70700), shapeType = __webpack_require__(67741), speechBubbleTailPosition = __webpack_require__(18989), debug = __webpack_require__(62458), sign = function(x) {
            return x > 0 ? 1 : x < 0 ? -1 : 0;
        }, distBetween = function(p1, p2) {
            return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));
        }, angleBetween = function(p1, p2, p3) {
            var ab_x = p2.x - p1.x, ab_y = p2.y - p1.y, cb_x = p2.x - p3.x, cb_y = p2.y - p3.y;
            return Math.atan2(ab_x * cb_y - ab_y * cb_x, ab_x * cb_x + ab_y * cb_y);
        }, Path = function() {
            function Path(pathCommands) {
                this._pathCommands = pathCommands;
            }
            return Object.defineProperty(Path.prototype, "pathCommands", {
                get: function() {
                    return this._pathCommands;
                },
                enumerable: !1,
                configurable: !0
            }), Path.prototype.getCommandEndPosition = function(command) {
                switch (command[0]) {
                  case "M":
                  case "L":
                    return {
                        x: command[1],
                        y: command[2]
                    };

                  case "C":
                    return {
                        x: command[5],
                        y: command[6]
                    };

                  case "A":
                    return {
                        x: command[6],
                        y: command[7]
                    };

                  case "Z":
                    return null;
                }
                debug.fF.assertNever(command[0]);
            }, Path.prototype.toString = function() {
                return this.pathCommands.map(function(e) {
                    return e.join(" ");
                }).join(" ");
            }, Path.prototype.getBoundingBox = function() {
                for (var point, pathCommands = this.pathCommands, startPosition = this.getCommandEndPosition(pathCommands[0]), boundingBox = {
                    minX: startPosition.x,
                    maxX: startPosition.x,
                    minY: startPosition.y,
                    maxY: startPosition.y
                }, _i = 0, pathCommands_1 = pathCommands; _i < pathCommands_1.length; _i++) (point = this.getCommandEndPosition(pathCommands_1[_i])) && (boundingBox.minX = Math.min(boundingBox.minX, point.x), 
                boundingBox.maxX = Math.max(boundingBox.maxX, point.x), boundingBox.minY = Math.min(boundingBox.minY, point.y), 
                boundingBox.maxY = Math.max(boundingBox.maxY, point.y));
                return boundingBox;
            }, Path.prototype.applyOperation = function(applyToPoint, applyToRelative) {
                for (var _i = 0, _a = this.pathCommands; _i < _a.length; _i++) {
                    var command = _a[_i];
                    switch (command[0]) {
                      case "Z":
                        break;

                      case "C":
                        var newControlPoint1 = applyToPoint({
                            x: command[1],
                            y: command[2]
                        });
                        command[1] = newControlPoint1.x, command[2] = newControlPoint1.y;
                        var newControlPoint2 = applyToPoint({
                            x: command[3],
                            y: command[4]
                        });
                        command[3] = newControlPoint2.x, command[4] = newControlPoint2.y;
                        var newPoint = applyToPoint({
                            x: command[5],
                            y: command[6]
                        });
                        command[5] = newPoint.x, command[6] = newPoint.y;
                        break;

                      case "A":
                        if (applyToRelative) {
                            var newRadius = applyToPoint({
                                x: command[1],
                                y: command[2]
                            });
                            command[1] = newRadius.x, command[2] = newRadius.y;
                        }
                        newPoint = applyToPoint({
                            x: command[6],
                            y: command[7]
                        }), command[6] = newPoint.x, command[7] = newPoint.y;
                        break;

                      case "M":
                      case "L":
                        newPoint = applyToPoint({
                            x: command[1],
                            y: command[2]
                        }), command[1] = newPoint.x, command[2] = newPoint.y;
                    }
                }
                return this;
            }, Path.prototype.rotate = function(rads, xCenter, yCenter) {
                void 0 === xCenter && (xCenter = 0), void 0 === yCenter && (yCenter = 0);
                var cosTheta = Math.cos(rads), sinTheta = Math.sin(rads);
                return this.applyOperation(function(point) {
                    return {
                        x: cosTheta * (point.x - xCenter) - sinTheta * (point.y - yCenter) + xCenter,
                        y: sinTheta * (point.x - xCenter) + cosTheta * (point.y - yCenter) + yCenter
                    };
                });
            }, Path.prototype.translate = function(xDist, yDist) {
                return void 0 === yDist && (yDist = 0), this.applyOperation(function(point) {
                    return {
                        x: point.x + xDist,
                        y: point.y + yDist
                    };
                });
            }, Path.prototype.scale = function(xScale, yScale) {
                return this.applyOperation(function(point) {
                    return {
                        x: point.x * xScale,
                        y: point.y * (null != yScale ? yScale : xScale)
                    };
                }, !0);
            }, Path.prototype.transformToFit = function(rads, scaleFactor, boundingBox, scaledWidth, scaledHeight, containerWidth, containerHeight) {
                var centerX = scaledWidth * scaleFactor / 2, centerY = scaledHeight * scaleFactor / 2;
                return this.scale(scaleFactor).rotate(rads, centerX, centerY).translate(containerWidth / 2 - centerX, containerHeight / 2 - centerY).translate(containerWidth / 2 - (boundingBox.minX + boundingBox.maxX) / 2, containerHeight / 2 - (boundingBox.minY + boundingBox.maxY) / 2);
            }, Path.prototype.roundCorners = function(radius) {
                var _a;
                if (radius <= 0) return this;
                var endsWithPathClose = "Z" === this.pathCommands[this.pathCommands.length - 1][0];
                if (endsWithPathClose) {
                    var start = this.getCommandEndPosition(this.pathCommands[0]), end = this.getCommandEndPosition(this.pathCommands[this.pathCommands.length - 2]);
                    start.x === end.x && start.y === end.y || (this.pathCommands[this.pathCommands.length - 1] = [ "L", start.x, start.y ]);
                }
                for (var latestCurveIndex, latestCurvePosition, firstDrawCommand = _.cloneDeep(endsWithPathClose ? this.pathCommands[1] : this.pathCommands[0]), i = 1; i < this.pathCommands.length; i++) {
                    var currCommand = this.pathCommands[i], nextCommand = null !== (_a = this.pathCommands[i + 1]) && void 0 !== _a ? _a : firstDrawCommand;
                    if (("M" === currCommand[0] || "L" === currCommand[0]) && "L" === nextCommand[0]) {
                        var prevPosition = latestCurveIndex + 1 === i ? latestCurvePosition : this.getCommandEndPosition(this.pathCommands[i - 1]), currPosition = this.getCommandEndPosition(currCommand), nextPosition = this.getCommandEndPosition(nextCommand), prevXDist = currPosition.x - prevPosition.x, prevYDist = currPosition.y - prevPosition.y, prevAngle = Math.atan(prevYDist / prevXDist), prevDist = Math.sqrt(Math.pow(prevXDist, 2) + Math.pow(prevYDist, 2)), nextXDist = nextPosition.x - currPosition.x, nextYDist = nextPosition.y - currPosition.y, nextAngle = Math.atan(nextYDist / nextXDist), nextDist = Math.sqrt(Math.pow(nextXDist, 2) + Math.pow(nextYDist, 2)), r = Math.min(radius, prevDist / 2, nextDist / 2), prevDeltaX = Math.abs(Math.cos(prevAngle)) * sign(prevXDist) * r, prevDeltaY = Math.abs(Math.sin(prevAngle)) * sign(prevYDist) * r, nextDeltaX = Math.abs(Math.cos(nextAngle)) * sign(nextXDist) * r, nextDeltaY = Math.abs(Math.sin(nextAngle)) * sign(nextYDist) * r;
                        currCommand[1] -= prevDeltaX, currCommand[2] -= prevDeltaY;
                        var degs = Math.abs(Math.floor(180 * angleBetween(prevPosition, currPosition, nextPosition) / Math.PI + .5));
                        this.pathCommands.splice(i + 1, 0, 90 === degs || 270 === degs ? [ "A", r, r, 0, 0, angleBetween(nextPosition, prevPosition, currPosition) > 0 ? 0 : 1, currPosition.x + nextDeltaX, currPosition.y + nextDeltaY ] : [ "C", currPosition.x - prevDeltaX / 2, currPosition.y - prevDeltaY / 2, currPosition.x + nextDeltaX / 2, currPosition.y + nextDeltaY / 2, currPosition.x + nextDeltaX, currPosition.y + nextDeltaY ]), 
                        latestCurveIndex = ++i, latestCurvePosition = currPosition;
                    }
                }
                return this;
            }, Path;
        }(), ContentBox = function(_super) {
            function ContentBox(x, y, width, height) {
                return _super.call(this, [ [ "M", x, y ], [ "M", x + width, y ], [ "M", x + width, y + height ], [ "M", x, y + height ] ]) || this;
            }
            return (0, tslib_es6.__extends)(ContentBox, _super), Object.defineProperty(ContentBox.prototype, "rectangleDimensions", {
                get: function() {
                    return {
                        width: distBetween(this.points[0], this.points[1]),
                        height: distBetween(this.points[1], this.points[2])
                    };
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(ContentBox.prototype, "points", {
                get: function() {
                    var c = this.pathCommands;
                    return [ {
                        x: c[0][1],
                        y: c[0][2]
                    }, {
                        x: c[1][1],
                        y: c[1][2]
                    }, {
                        x: c[2][1],
                        y: c[2][2]
                    }, {
                        x: c[3][1],
                        y: c[3][2]
                    } ];
                },
                enumerable: !1,
                configurable: !0
            }), ContentBox.prototype.getLargestInscribedRectangle = function(contentRads) {
                void 0 === contentRads && (contentRads = 0);
                var rectangleDimensions = this.rectangleDimensions, originalRectangleHeight = rectangleDimensions.height, originalRectangleWidth = rectangleDimensions.width, diffs = [ this.points[0].x - this.points[3].x, -this.points[0].y + this.points[3].y ], rads = Math.atan(diffs[0] / diffs[1]);
                diffs[1] < 0 ? rads += Math.PI : diffs[0] < 0 && (rads += 2 * Math.PI), rads -= contentRads;
                var boundingBox = this.getBoundingBox(), boundingBoxWidth = boundingBox.maxX - boundingBox.minX, boundingBoxHeight = boundingBox.maxY - boundingBox.minY, w0 = originalRectangleWidth <= originalRectangleHeight ? originalRectangleWidth : originalRectangleHeight, h0 = originalRectangleWidth <= originalRectangleHeight ? originalRectangleHeight : originalRectangleWidth, ang = Math.abs(rads - 2 * Math.floor((rads + Math.PI) / (2 * Math.PI)) * Math.PI);
                ang > Math.PI / 2 && (ang = Math.PI - ang);
                var sina = Math.sin(ang), cosa = Math.cos(ang), sinAcosA = sina * cosa, w1 = w0 * cosa + h0 * sina, h1 = w0 * sina + h0 * cosa, c = h0 * sinAcosA / (2 * h0 * sinAcosA + w0), x = w1 * c, y = h1 * c, w = originalRectangleWidth <= originalRectangleHeight ? w1 - 2 * x : h1 - 2 * y, h = originalRectangleWidth <= originalRectangleHeight ? h1 - 2 * y : w1 - 2 * x;
                return {
                    x: boundingBox.minX + (boundingBoxWidth - w) / 2,
                    y: boundingBox.minY + (boundingBoxHeight - h) / 2,
                    width: w,
                    height: h
                };
            }, ContentBox.prototype.getLargestRectangleSpace = function() {
                var rectangleDimensions = this.rectangleDimensions;
                return {
                    x: 0,
                    y: 0,
                    width: rectangleDimensions.width,
                    height: rectangleDimensions.height
                };
            }, ContentBox;
        }(Path), Shape = function() {
            function Shape(containerWidth, containerHeight, rads, rounding) {
                void 0 === containerWidth && (containerWidth = 0), void 0 === containerHeight && (containerHeight = 0), 
                void 0 === rads && (rads = 0), void 0 === rounding && (rounding = 0), this.containerWidth = containerWidth, 
                this.containerHeight = containerHeight, this.rads = rads, this.rounding = rounding, 
                this.scaledWidth = Math.abs(Math.cos(this.rads) * this.containerWidth) + Math.abs(Math.sin(this.rads) * this.containerHeight), 
                this.scaledHeight = Math.abs(Math.cos(this.rads) * this.containerHeight) + Math.abs(Math.sin(this.rads) * this.containerWidth);
            }
            return Object.defineProperty(Shape.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "scaledShapePath", {
                get: function() {
                    return this.normalizedShapePath.scale(this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "transformedShapePath", {
                get: function() {
                    return this.scaledShapePath.transformToFit(this.rads, this.scaleFactor, this.boundingBox, this.scaledWidth, this.scaledHeight, this.containerWidth, this.containerHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "roundedTransformedShapePath", {
                get: function() {
                    return this.transformedShapePath.roundCorners(this.rounding);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "shapePathString", {
                get: function() {
                    return this._shapePathString || (this._shapePathString = this.roundedTransformedShapePath.toString()), 
                    this._shapePathString;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "accentBarPathString", {
                get: function() {
                    return this._shapePathString || (this._shapePathString = this.scaledShapePath.toString()), 
                    this._shapePathString;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(0, 0, 1, 1);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "scaledContentBox", {
                get: function() {
                    return this.normalizedContentBox.scale(this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "transformedContentBox", {
                get: function() {
                    return this.scaledContentBox.transformToFit(this.rads, this.scaleFactor, this.boundingBox, this.scaledWidth, this.scaledHeight, this.containerWidth, this.containerHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Shape.prototype.getContentBoundingBox = function(contentRads) {
                return this.transformedContentBox.getLargestInscribedRectangle(contentRads);
            }, Shape.prototype.getContentBoundingBoxMaxRectangle = function() {
                return this.transformedContentBox.getLargestRectangleSpace();
            }, Object.defineProperty(Shape.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return null;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "scaledBoundingBoxPath", {
                get: function() {
                    return this.normalizedBoundingBoxPath ? this.normalizedBoundingBoxPath.scale(this.scaledWidth, this.scaledHeight) : this.scaledShapePath;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "scaleFactor", {
                get: function() {
                    return null == this._scaleFactor && this.setBoundingBoxProperties(), this._scaleFactor;
                },
                set: function(scaleFactor) {
                    this._scaleFactor = scaleFactor;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "boundingBox", {
                get: function() {
                    return null == this._boundingBox && this.setBoundingBoxProperties(), this._boundingBox;
                },
                set: function(boundingBox) {
                    this._boundingBox = boundingBox;
                },
                enumerable: !1,
                configurable: !0
            }), Shape.prototype.setBoundingBoxProperties = function() {
                var scaledBoundingBoxPath = this.scaledBoundingBoxPath;
                scaledBoundingBoxPath.rotate(this.rads, this.scaledWidth / 2, this.scaledHeight / 2);
                var boundingBox = scaledBoundingBoxPath.getBoundingBox(), totalWidth = boundingBox.maxX - boundingBox.minX, totalHeight = boundingBox.maxY - boundingBox.minY;
                this.scaleFactor = 0 === totalHeight || 0 === totalWidth ? 1 : Math.min(this.containerHeight / totalHeight, this.containerWidth / totalWidth);
                var centerX = this.scaledWidth * this.scaleFactor / 2, centerY = this.scaledHeight * this.scaleFactor / 2;
                this.boundingBox = scaledBoundingBoxPath.scale(this.scaleFactor).translate(this.containerWidth / 2 - centerX, this.containerHeight / 2 - centerY).getBoundingBox();
            }, Shape.prototype.getScaledSideLength = function(topLeft, topRight, bottomLeft, bottomRight, scaledWidth, scaledHeight) {
                var topSideCutWidth = topLeft + topRight, bottomSideCutWidth = bottomLeft + bottomRight, leftSideCutWidth = topLeft + bottomLeft, rightSideCutWidth = topRight + bottomRight;
                return {
                    topLeftWidth: scaledWidth < topSideCutWidth ? topLeft / topSideCutWidth * scaledWidth : topLeft,
                    topRightWidth: scaledWidth < topSideCutWidth ? topRight / topSideCutWidth * scaledWidth : topRight,
                    bottomLeftWidth: scaledWidth < bottomSideCutWidth ? bottomLeft / bottomSideCutWidth * scaledWidth : bottomLeft,
                    bottomRightWidth: scaledWidth < bottomSideCutWidth ? bottomRight / bottomSideCutWidth * scaledWidth : bottomRight,
                    leftTopWidth: scaledHeight < leftSideCutWidth ? topLeft / leftSideCutWidth * scaledHeight : topLeft,
                    lefBottomWidth: scaledHeight < leftSideCutWidth ? bottomLeft / leftSideCutWidth * scaledHeight : bottomLeft,
                    rightTopWidth: scaledHeight < rightSideCutWidth ? topRight / rightSideCutWidth * scaledHeight : topRight,
                    rightBottomWidth: scaledHeight < rightSideCutWidth ? bottomRight / rightSideCutWidth * scaledHeight : bottomRight
                };
            }, Shape;
        }(), Arrow = function(_super) {
            function Arrow(containerWidth, containerHeight, rads, rounding, arrowheadSize, stemWidth) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                _this.normalBoxHeight = .5;
                var angle = arrowheadSize * Math.PI / 200;
                return _this.triangleWidth = Math.min(Math.min(_this.scaledWidth / 2, _this.scaledHeight / 2) / Math.tan(angle), _this.scaledWidth), 
                _this.normalCutout = .5 - stemWidth / 100, _this.normalBoxHeight = stemWidth / 50, 
                _this;
            }
            return (0, tslib_es6.__extends)(Arrow, _super), Object.defineProperty(Arrow.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", 0, this.normalCutout * this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, this.normalCutout * this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, this.scaledHeight / 2 ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight - this.normalCutout * this.scaledHeight ], [ "L", 0, this.scaledHeight - this.normalCutout * this.scaledHeight ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Arrow.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(0, this.normalCutout * this.scaledHeight, this.scaledWidth - this.triangleWidth * this.normalBoxHeight, this.normalBoxHeight * this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Arrow;
        }(Shape), ArrowChevron = function(_super) {
            function ArrowChevron(containerWidth, containerHeight, rads, rounding, arrowheadAngle) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, angle = arrowheadAngle * Math.PI / 180;
                return _this.triangleWidth = Math.min(Math.min(_this.scaledWidth / 2, _this.scaledHeight / 2) / Math.tan(angle / 2), _this.scaledWidth), 
                _this.scaledWidth === _this.triangleWidth && (_this.scaledWidth = 2 * Math.tan(angle / 2) * _this.scaledWidth), 
                _this;
            }
            return (0, tslib_es6.__extends)(ArrowChevron, _super), Object.defineProperty(ArrowChevron.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, .5 * this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "L", this.triangleWidth, .5 * this.scaledHeight ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(ArrowChevron.prototype, "scaledContentBox", {
                get: function() {
                    return this.scaledWidth > 2 * this.triangleWidth ? new ContentBox(this.triangleWidth, 0, this.scaledWidth - 2 * this.triangleWidth, this.scaledHeight) : new ContentBox(0, 0, this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), ArrowChevron;
        }(Shape), ArrowPentagon = function(_super) {
            function ArrowPentagon(containerWidth, containerHeight, rads, rounding, arrowheadSize) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, angle = arrowheadSize * Math.PI / 100;
                return _this.triangleWidth = Math.min(Math.min(_this.scaledWidth / 2, _this.scaledHeight / 2) / Math.tan(angle / 2), _this.scaledWidth), 
                _this;
            }
            return (0, tslib_es6.__extends)(ArrowPentagon, _super), Object.defineProperty(ArrowPentagon.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, .5 * this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(ArrowPentagon.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(0, 0, this.scaledWidth - this.triangleWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), ArrowPentagon;
        }(Shape), Heart = function(_super) {
            function Heart(containerWidth, containerHeight, rads, rounding) {
                return _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
            }
            return (0, tslib_es6.__extends)(Heart, _super), Object.defineProperty(Heart.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", .501465, 1 ], [ "L", .467285, .9812533333333333 ], [ "C", .319173125, .8687466666666667, .206055, .75972, .12793, .6541666666666667 ], [ "C", .0498046875, .5486113333333333, .0071614375, .44739599999999996, 0, .35052066666666665 ], [ "L", 0, .29010400000000003 ], [ "C", .00358073125, .24427066666666666, .0126953125, .20399333333333333, .02734375, .16927066666666668 ], [ "C", .0419921875, .13420133333333334, .060058625, .10486133333333333, .081543125, .08125 ], [ "C", .102701875, .057291666666666664, .12597625, .03888886666666667, .1513675, .026041666666666668 ], [ "C", .1767575, .0128472, .201823125, .0050347199999999995, .2265625, .0026041666666666665 ], [ "C", .23502625, .00190972, .24316375, .0013888866666666665, .25097625, .0010416666666666667 ], [ "C", .25878875, 347222e-9, .26643875, 0, .273925625, 0 ], [ "C", .300293125, 0, .323893125, .00277778, .34472625, .008333333333333333 ], [ "C", .365234375, .013541666666666667, .3842775, .0215278, .401855625, .03229166666666666 ], [ "C", .419108125, .042708333333333334, .435709375, .0559028, .45166, .07187466666666667 ], [ "C", .467285, .08784733333333333, .48339875, .10625, .5, .12708333333333333 ], [ "C", .51660125, .10625, .5328775, .08784733333333333, .548828125, .07187466666666667 ], [ "C", .564453125, .0559028, .581055, .042708333333333334, .5986325, .03229166666666666 ], [ "C", .615885625, .0215278, .63493125, .013541666666666667, .6557625, .008333333333333333 ], [ "C", .67626875, .00277778, .69970625, 0, .726075, 0 ], [ "C", .7335625, 0, .7412125, 347222e-9, .749025, .0010416666666666667 ], [ "C", .7565125, .0013888866666666665, .7644875, .00190972, .77295, .0026041666666666665 ], [ "C", .7976875, .0050347199999999995, .82291875, .0128472, .84863125, .026041666666666668 ], [ "C", .874025, .03888886666666667, .8974625, .057291666666666664, .91894375, .08125 ], [ "C", .94010625, .105208, .95800625, .13454866666666665, .97265625, .16927066666666668 ], [ "C", .98730625, .20399333333333333, .99641875, .24427066666666666, 1, .29010400000000003 ], [ "L", 1, .35052066666666665 ], [ "C", .9925125, .44843733333333335, .95003125, .5501733333333333, .87255625, .6557293333333334 ], [ "C", .79475625, .76094, .68245625, .8694466666666667, .535644375, .9812533333333333 ], [ "L", .501465, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Heart.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", .1, 0 ], [ "L", .9, 0 ], [ "L", 1, .1 ], [ "L", 1, .6 ], [ "L", .5, 1 ], [ "L", 0, .6 ], [ "L", 0, .1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Heart.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(.2, .12708333333333333, .6, .61875);
                },
                enumerable: !1,
                configurable: !0
            }), Heart;
        }(Shape), Hexagon = function(_super) {
            function Hexagon(containerWidth, containerHeight, rads, rounding, hexagonSlant) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, angle = (180 - .9 * hexagonSlant) * Math.PI / 360;
                return _this.triangleWidth = Math.min(Math.min(_this.scaledWidth / 2, _this.scaledHeight / 2) / Math.tan(angle), _this.scaledWidth / 2), 
                _this;
            }
            return (0, tslib_es6.__extends)(Hexagon, _super), Object.defineProperty(Hexagon.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", this.triangleWidth, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, .5 * this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", this.triangleWidth, this.scaledHeight ], [ "L", 0, .5 * this.scaledHeight ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Hexagon.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(2 * this.triangleWidth / 3, this.scaledHeight / 6, this.scaledWidth - 4 * this.triangleWidth / 3, 2 * this.scaledHeight / 3);
                },
                enumerable: !1,
                configurable: !0
            }), Hexagon;
        }(Shape), Line = function(_super) {
            function Line(containerWidth, containerHeight, rads) {
                return _super.call(this, containerWidth, containerHeight, rads) || this;
            }
            return (0, tslib_es6.__extends)(Line, _super), Object.defineProperty(Line.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, .5 ], [ "L", 1, .5 ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Line.prototype, "transformedContentBox", {
                get: function() {
                    return new ContentBox(0, 0, this.containerWidth, this.containerHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Line;
        }(Shape), Octagon = function(_super) {
            function Octagon(containerWidth, containerHeight, rads, rounding, octagonCutout) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, cutout = octagonCutout / 100;
                return _this.triangleWidth = Math.min(_this.scaledWidth * cutout, _this.scaledHeight * cutout, _this.scaledHeight, _this.scaledWidth), 
                _this;
            }
            return (0, tslib_es6.__extends)(Octagon, _super), Object.defineProperty(Octagon.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", this.triangleWidth, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, this.triangleWidth ], [ "L", this.scaledWidth, this.scaledHeight - this.triangleWidth ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", this.triangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight - this.triangleWidth ], [ "L", 0, this.triangleWidth ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Octagon.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(this.triangleWidth / 2, this.triangleWidth / 2, this.scaledWidth - this.triangleWidth, this.scaledHeight - this.triangleWidth);
                },
                enumerable: !1,
                configurable: !0
            }), Octagon;
        }(Shape), Oval = function(_super) {
            function Oval(containerWidth, containerHeight, rads) {
                return _super.call(this, containerWidth, containerHeight, rads) || this;
            }
            return (0, tslib_es6.__extends)(Oval, _super), Object.defineProperty(Oval.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", .5, 0 ], [ "A", .5, .5, 180 * this.rads / Math.PI, 0, 0, .5, 1 ], [ "A", .5, .5, 180 * this.rads / Math.PI, 0, 0, .5, 0 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Oval.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Oval.prototype, "normalizedContentBox", {
                get: function() {
                    var p = .5 - Math.sqrt(2) / 4, d = Math.sqrt(2) / 2;
                    return new ContentBox(p, p, d, d);
                },
                enumerable: !1,
                configurable: !0
            }), Oval;
        }(Shape), Parallelogram = function(_super) {
            function Parallelogram(containerWidth, containerHeight, rads, rounding, parallelogramSkew) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, angle = Math.PI / 2 - .9 * parallelogramSkew * Math.PI / 180;
                return _this.triangleWidth = Math.min(_this.scaledWidth / 2, _this.scaledHeight / 2) / Math.tan(angle), 
                _this.triangleWidth >= _this.scaledWidth && (_this.triangleWidth = 0), _this;
            }
            return (0, tslib_es6.__extends)(Parallelogram, _super), Object.defineProperty(Parallelogram.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", this.triangleWidth, 0 ], [ "L", this.scaledWidth, 0 ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Parallelogram.prototype, "scaledContentBox", {
                get: function() {
                    return this.scaledWidth > 2 * this.triangleWidth ? new ContentBox(this.triangleWidth, 0, this.scaledWidth - 2 * this.triangleWidth, this.scaledHeight) : new ContentBox(0, 0, this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Parallelogram;
        }(Shape), Pentagon = function(_super) {
            function Pentagon(containerWidth, containerHeight, rads, rounding) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.dy = .5 - .125 * (Math.sqrt(5) - 1), _this.dx = .5 - .125 * Math.sqrt(10 - 2 * Math.sqrt(5)), 
                _this;
            }
            return (0, tslib_es6.__extends)(Pentagon, _super), Object.defineProperty(Pentagon.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", .5, 0 ], [ "L", 1, this.dy ], [ "L", 1 - this.dx, 1 ], [ "L", this.dx, 1 ], [ "L", 0, this.dy ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Pentagon.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(this.dx, 5 * this.dy / 8, 1 - 2 * this.dx, 1 - 5 * this.dy / 8);
                },
                enumerable: !1,
                configurable: !0
            }), Pentagon;
        }(Shape), Pill = function(_super) {
            function Pill(containerWidth, containerHeight, rads, rounding) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.radius = Math.min(_this.scaledHeight, _this.scaledWidth) / 2, _this;
            }
            return (0, tslib_es6.__extends)(Pill, _super), Object.defineProperty(Pill.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, this.radius ], [ "A", this.radius, this.radius, 0, 0, 1, this.radius, 0 ], [ "L", this.scaledWidth - this.radius, 0 ], [ "A", this.radius, this.radius, 0, 0, 1, this.scaledWidth, this.radius ], [ "L", this.scaledWidth, this.scaledHeight - this.radius ], [ "A", this.radius, this.radius, 0, 0, 1, this.scaledWidth - this.radius, this.scaledHeight ], [ "L", this.radius, this.scaledHeight ], [ "A", this.radius, this.radius, 0, 0, 1, 0, this.scaledHeight - this.radius ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Pill.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Pill.prototype, "scaledContentBox", {
                get: function() {
                    var dist = 1 - Math.sqrt(2) / 2;
                    return new ContentBox(this.radius * dist, this.radius * dist, this.scaledWidth - this.radius * dist * 2, this.scaledHeight - this.radius * dist * 2);
                },
                enumerable: !1,
                configurable: !0
            }), Pill;
        }(Shape), Rectangle = function(_super) {
            function Rectangle(containerWidth, containerHeight, rads, rounding) {
                return _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
            }
            return (0, tslib_es6.__extends)(Rectangle, _super), Object.defineProperty(Rectangle.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Rectangle;
        }(Shape), AccentBar = function(_super) {
            function AccentBar(containerWidth, containerHeight, rads, rounding, accentBarPosition, accentBarWidth) {
                var _this = this;
                return accentBarPosition === legendPosition.zw.left ? containerWidth = accentBarWidth : accentBarPosition === legendPosition.zw.top && (containerHeight = accentBarWidth), 
                (_this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this).accentBarPosition = accentBarPosition, 
                _this.accentBarWidth = accentBarWidth, _this;
            }
            return (0, tslib_es6.__extends)(AccentBar, _super), Object.defineProperty(AccentBar.prototype, "normalizedShapePath", {
                get: function() {
                    return this.accentBarPosition === legendPosition.zw.left || this.accentBarPosition === legendPosition.zw.top ? new Path([ [ "M", 0, 0 ], [ "L", 0, 1 ], [ "L", 1, 1 ], [ "L", 1, 0 ], [ "Z" ] ]) : this.accentBarPosition === legendPosition.zw.right ? new Path([ [ "M", 1, 1 ], [ "L", 1 - this.accentBarWidth / this.containerWidth, 1 ], [ "L", 1 - this.accentBarWidth / this.containerWidth, 0 ], [ "L", 1, 0 ], [ "Z" ] ]) : this.accentBarPosition === legendPosition.zw.bottom ? new Path([ [ "M", 1, 1 ], [ "L", 1, 1 - this.accentBarWidth / this.containerHeight ], [ "L", 0, 1 - this.accentBarWidth / this.containerHeight ], [ "L", 0, 1 ], [ "Z" ] ]) : void 0;
                },
                enumerable: !1,
                configurable: !0
            }), AccentBar;
        }(Shape), RectangleRounded = function(_super) {
            function RectangleRounded(containerWidth, containerHeight, rads, rounding, edgeCurve) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.radius = Math.min(_this.scaledHeight, _this.scaledWidth) * edgeCurve / 100, 
                _this;
            }
            return (0, tslib_es6.__extends)(RectangleRounded, _super), Object.defineProperty(RectangleRounded.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, this.radius ], [ "A", this.radius, this.radius, 0, 0, 1, this.radius, 0 ], [ "L", this.scaledWidth - this.radius, 0 ], [ "A", this.radius, this.radius, 0, 0, 1, this.scaledWidth, this.radius ], [ "L", this.scaledWidth, this.scaledHeight - this.radius ], [ "A", this.radius, this.radius, 0, 0, 1, this.scaledWidth - this.radius, this.scaledHeight ], [ "L", this.radius, this.scaledHeight ], [ "A", this.radius, this.radius, 0, 0, 1, 0, this.scaledHeight - this.radius ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleRounded.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleRounded.prototype, "scaledContentBox", {
                get: function() {
                    var dist = 1 - Math.sqrt(2) / 2;
                    return new ContentBox(this.radius * dist, this.radius * dist, this.scaledWidth - this.radius * dist * 2, this.scaledHeight - this.radius * dist * 2);
                },
                enumerable: !1,
                configurable: !0
            }), RectangleRounded;
        }(Shape), RectangleCustomRounded = function(_super) {
            function RectangleCustomRounded(containerWidth, containerHeight, rads, rounding, topLeft, topRight, bottomLeft, bottomRight) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.radiusTopLeft = Math.min(_this.scaledHeight, _this.scaledWidth) * topLeft / 100, 
                _this.radiusTopRight = Math.min(_this.scaledHeight, _this.scaledWidth) * topRight / 100, 
                _this.radiusBottomLeft = Math.min(_this.scaledHeight, _this.scaledWidth) * bottomLeft / 100, 
                _this.radiusBottomRight = Math.min(_this.scaledHeight, _this.scaledWidth) * bottomRight / 100, 
                _this;
            }
            return (0, tslib_es6.__extends)(RectangleCustomRounded, _super), Object.defineProperty(RectangleCustomRounded.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, this.radiusTopLeft ], [ "A", this.radiusTopLeft, this.radiusTopLeft, 0, 0, 1, this.radiusTopLeft, 0 ], [ "L", this.scaledWidth - this.radiusTopRight, 0 ], [ "A", this.radiusTopRight, this.radiusTopRight, 0, 0, 1, this.scaledWidth, this.radiusTopRight ], [ "L", this.scaledWidth, this.scaledHeight - this.radiusBottomRight ], [ "A", this.radiusBottomRight, this.radiusBottomRight, 0, 0, 1, this.scaledWidth - this.radiusBottomRight, this.scaledHeight ], [ "L", this.radiusBottomLeft, this.scaledHeight ], [ "A", this.radiusBottomLeft, this.radiusBottomLeft, 0, 0, 1, 0, this.scaledHeight - this.radiusBottomLeft ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleCustomRounded.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleCustomRounded.prototype, "scaledContentBox", {
                get: function() {
                    var dist = 1 - Math.sqrt(2) / 2;
                    return new ContentBox((this.radiusTopLeft + this.radiusTopRight) * dist, (this.radiusTopLeft + this.radiusBottomLeft) * dist, this.scaledWidth - (this.radiusTopLeft + this.radiusTopRight) * dist * 2, this.scaledHeight - (this.radiusTopLeft + this.radiusBottomLeft) * dist * 2);
                },
                enumerable: !1,
                configurable: !0
            }), RectangleCustomRounded;
        }(Shape), RectangleCustomRoundedByPixel = function(_super) {
            function RectangleCustomRoundedByPixel(containerWidth, containerHeight, rads, rounding, topLeft, topRight, bottomLeft, bottomRight) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.scaleSideWidth = _this.getScaledSideLength(topLeft, topRight, bottomLeft, bottomRight, _this.scaledWidth, _this.scaledHeight), 
                _this;
            }
            return (0, tslib_es6.__extends)(RectangleCustomRoundedByPixel, _super), Object.defineProperty(RectangleCustomRoundedByPixel.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, this.scaleSideWidth.leftTopWidth ], [ "C", 0, this.scaleSideWidth.leftTopWidth / 2, this.scaleSideWidth.topLeftWidth / 2, 0, this.scaleSideWidth.topLeftWidth, 0 ], [ "L", this.scaledWidth - this.scaleSideWidth.topRightWidth, 0 ], [ "C", this.scaledWidth - this.scaleSideWidth.topRightWidth / 2, 0, this.scaledWidth, this.scaleSideWidth.rightTopWidth / 2, this.scaledWidth, this.scaleSideWidth.rightTopWidth ], [ "L", this.scaledWidth, this.scaledHeight - this.scaleSideWidth.rightBottomWidth ], [ "C", this.scaledWidth, this.scaledHeight - this.scaleSideWidth.rightBottomWidth / 2, this.scaledWidth - this.scaleSideWidth.bottomRightWidth / 2, this.scaledHeight, this.scaledWidth - this.scaleSideWidth.bottomRightWidth, this.scaledHeight ], [ "L", this.scaleSideWidth.bottomLeftWidth, this.scaledHeight ], [ "C", this.scaleSideWidth.bottomLeftWidth / 2, this.scaledHeight, 0, this.scaledHeight - this.scaleSideWidth.lefBottomWidth / 2, 0, this.scaledHeight - this.scaleSideWidth.lefBottomWidth ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleCustomRoundedByPixel.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleCustomRoundedByPixel.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(0, 0, this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), RectangleCustomRoundedByPixel;
        }(Shape), Speechbubble = function(_super) {
            function Speechbubble(containerWidth, containerHeight, rads, rounding, speechBubbleHeight, tailPosition, tailAngle) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.cutout = .1, _this.cutout = speechBubbleHeight / 100, _this.tailStartPoint = Math.max(Math.min(.125 - Math.tan((90 - tailAngle) * Math.PI / 180) * _this.cutout, .5), 0), 
                _this.tailPosition = tailPosition, _this;
            }
            return (0, tslib_es6.__extends)(Speechbubble, _super), Object.defineProperty(Speechbubble.prototype, "normalizedShapePath", {
                get: function() {
                    switch (this.tailPosition) {
                      case speechBubbleTailPosition.R5:
                        return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 - this.cutout ], [ "L", .25, 1 - this.cutout ], [ "L", this.tailStartPoint, 1 ], [ "L", .125, 1 - this.cutout ], [ "L", 0, 1 - this.cutout ], [ "Z" ] ]));

                      case speechBubbleTailPosition.TB:
                        return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 - this.cutout ], [ "L", .875, 1 - this.cutout ], [ "L", 1 - this.tailStartPoint, 1 ], [ "L", .75, 1 - this.cutout ], [ "L", 0, 1 - this.cutout ], [ "Z" ] ]));

                      case speechBubbleTailPosition.Ai:
                        return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", 1 - this.cutout, 0 ], [ "L", 1 - this.cutout, .75 ], [ "L", 1, 1 - this.tailStartPoint ], [ "L", 1 - this.cutout, .875 ], [ "L", 1 - this.cutout, 1 ], [ "L", 0, 1 ], [ "Z" ] ]));

                      case speechBubbleTailPosition.UQ:
                        return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", 1 - this.cutout, 0 ], [ "L", 1 - this.cutout, .125 ], [ "L", 1, this.tailStartPoint ], [ "L", 1 - this.cutout, .25 ], [ "L", 1 - this.cutout, 1 ], [ "L", 0, 1 ], [ "Z" ] ]));

                      case speechBubbleTailPosition.K2:
                        return new Path(cleanDuplicates([ [ "M", 0, this.cutout ], [ "L", .75, this.cutout ], [ "L", 1 - this.tailStartPoint, 0 ], [ "L", .875, this.cutout ], [ "L", 1, this.cutout ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]));

                      case speechBubbleTailPosition.tY:
                        return new Path(cleanDuplicates([ [ "M", 0, this.cutout ], [ "L", .125, this.cutout ], [ "L", this.tailStartPoint, 0 ], [ "L", .25, this.cutout ], [ "L", 1, this.cutout ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]));

                      case speechBubbleTailPosition.mH:
                        return new Path(cleanDuplicates([ [ "M", this.cutout, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", this.cutout, 1 ], [ "L", this.cutout, .25 ], [ "L", 0, this.tailStartPoint ], [ "L", this.cutout, .125 ], [ "Z" ] ]));

                      case speechBubbleTailPosition.GA:
                        return new Path(cleanDuplicates([ [ "M", this.cutout, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", this.cutout, 1 ], [ "L", this.cutout, .875 ], [ "L", 0, 1 - this.tailStartPoint ], [ "L", this.cutout, .75 ], [ "Z" ] ]));
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Speechbubble.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(0, 0, 1, 1 - this.cutout);
                },
                enumerable: !1,
                configurable: !0
            }), Speechbubble;
        }(Shape), TabCutCorner = function(_super) {
            function TabCutCorner(containerWidth, containerHeight, rads, rounding, cutoutSize) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, cutout = cutoutSize / 100;
                return _this.triangleWidth = Math.min(_this.scaledWidth * cutout, _this.scaledHeight * cutout), 
                _this;
            }
            return (0, tslib_es6.__extends)(TabCutCorner, _super), Object.defineProperty(TabCutCorner.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, this.triangleWidth ], [ "L", this.scaledWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabCutCorner.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(0, this.triangleWidth / 2, this.scaledWidth - this.triangleWidth / 2, this.scaledHeight - this.triangleWidth / 2);
                },
                enumerable: !1,
                configurable: !0
            }), TabCutCorner;
        }(Shape), TabCutTopCorners = function(_super) {
            function TabCutTopCorners(containerWidth, containerHeight, rads, rounding, cutoutSizeTop, cutoutSizeBottom) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, topCutout = cutoutSizeTop / 100, bottomCutout = cutoutSizeBottom / 100;
                return _this.topTriangleWidth = Math.min(_this.scaledWidth * topCutout, _this.scaledHeight * topCutout), 
                _this.bottomTriangleWidth = Math.min(_this.scaledWidth * bottomCutout, _this.scaledHeight * bottomCutout), 
                _this;
            }
            return (0, tslib_es6.__extends)(TabCutTopCorners, _super), Object.defineProperty(TabCutTopCorners.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", this.topTriangleWidth, 0 ], [ "L", this.scaledWidth - this.topTriangleWidth, 0 ], [ "L", this.scaledWidth, this.topTriangleWidth ], [ "L", this.scaledWidth, this.scaledHeight - this.bottomTriangleWidth ], [ "L", this.scaledWidth - this.bottomTriangleWidth, this.scaledHeight ], [ "L", this.bottomTriangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight - this.bottomTriangleWidth ], [ "L", 0, this.topTriangleWidth ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabCutTopCorners.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(this.topTriangleWidth / 2, this.topTriangleWidth / 2, this.scaledWidth - this.topTriangleWidth, this.scaledHeight - this.topTriangleWidth / 2 - Math.max(0, this.bottomTriangleWidth - this.topTriangleWidth / 2));
                },
                enumerable: !1,
                configurable: !0
            }), TabCutTopCorners;
        }(Shape), TabCutTopCustomCorners = function(_super) {
            function TabCutTopCustomCorners(containerWidth, containerHeight, rads, rounding, topLeft, topRight, bottomLeft, bottomRight) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, topLeftCutout = topLeft / 100, topRightCutout = topRight / 100, bottomLeftCutout = bottomLeft / 100, bottomRightCutout = bottomRight / 100;
                return _this.topLeftTriangleWidth = Math.min(_this.scaledWidth * topLeftCutout, _this.scaledHeight * topLeftCutout), 
                _this.topRighttTriangleWidth = Math.min(_this.scaledWidth * topRightCutout, _this.scaledHeight * topRightCutout), 
                _this.bottomLeftTriangleWidth = Math.min(_this.scaledWidth * bottomLeftCutout, _this.scaledHeight * bottomLeftCutout), 
                _this.bottomRightTriangleWidth = Math.min(_this.scaledWidth * bottomRightCutout, _this.scaledHeight * bottomRightCutout), 
                _this;
            }
            return (0, tslib_es6.__extends)(TabCutTopCustomCorners, _super), Object.defineProperty(TabCutTopCustomCorners.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", this.topLeftTriangleWidth, 0 ], [ "L", this.scaledWidth - this.topLeftTriangleWidth, 0 ], [ "L", this.scaledWidth, this.topRighttTriangleWidth ], [ "L", this.scaledWidth, this.scaledHeight - this.bottomRightTriangleWidth ], [ "L", this.scaledWidth - this.bottomRightTriangleWidth, this.scaledHeight ], [ "L", this.bottomLeftTriangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight - this.bottomLeftTriangleWidth ], [ "L", 0, this.topLeftTriangleWidth ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabCutTopCustomCorners.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox((this.topRighttTriangleWidth + this.topLeftTriangleWidth) / 2, (this.topLeftTriangleWidth + this.topRighttTriangleWidth) / 2, this.scaledWidth - (this.topRighttTriangleWidth + this.topLeftTriangleWidth), this.scaledHeight - (this.topLeftTriangleWidth + this.topRighttTriangleWidth) / 2 - Math.max(0, this.bottomLeftTriangleWidth + this.bottomRightTriangleWidth - (this.topLeftTriangleWidth + this.bottomLeftTriangleWidth) / 2));
                },
                enumerable: !1,
                configurable: !0
            }), TabCutTopCustomCorners;
        }(Shape), TabCutTopCustomCornersByPixel = function(_super) {
            function TabCutTopCustomCornersByPixel(containerWidth, containerHeight, rads, rounding, topLeft, topRight, bottomLeft, bottomRight) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.scaleSideWidth = _this.getScaledSideLength(topLeft, topRight, bottomLeft, bottomRight, _this.scaledWidth, _this.scaledHeight), 
                _this;
            }
            return (0, tslib_es6.__extends)(TabCutTopCustomCornersByPixel, _super), Object.defineProperty(TabCutTopCustomCornersByPixel.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", this.scaleSideWidth.topLeftWidth, 0 ], [ "L", this.scaledWidth - this.scaleSideWidth.topRightWidth, 0 ], [ "L", this.scaledWidth, this.scaleSideWidth.rightTopWidth ], [ "L", this.scaledWidth, this.scaledHeight - this.scaleSideWidth.rightBottomWidth ], [ "L", this.scaledWidth - this.scaleSideWidth.bottomRightWidth, this.scaledHeight ], [ "L", this.scaleSideWidth.bottomLeftWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight - this.scaleSideWidth.lefBottomWidth ], [ "L", 0, this.scaleSideWidth.leftTopWidth ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabCutTopCustomCornersByPixel.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(0, 0, this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), TabCutTopCustomCornersByPixel;
        }(Shape), TabRoundCorner = function(_super) {
            function TabRoundCorner(containerWidth, containerHeight, rads, rounding, cutoutSize) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.radius = Math.min(_this.scaledHeight, _this.scaledWidth) * cutoutSize / 100, 
                _this;
            }
            return (0, tslib_es6.__extends)(TabRoundCorner, _super), Object.defineProperty(TabRoundCorner.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", this.scaledWidth - this.radius, 0 ], [ "A", this.radius, this.radius, 0, 0, 1, this.scaledWidth, this.radius ], [ "L", this.scaledWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabRoundCorner.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabRoundCorner.prototype, "scaledContentBox", {
                get: function() {
                    var dist = 1 - Math.sqrt(2) / 2;
                    return new ContentBox(0, this.radius * dist, this.scaledWidth - this.radius * dist, this.scaledHeight - this.radius * dist);
                },
                enumerable: !1,
                configurable: !0
            }), TabRoundCorner;
        }(Shape), TabRoundTopCorners = function(_super) {
            function TabRoundTopCorners(containerWidth, containerHeight, rads, rounding, cutoutSizeTop, cutoutSizeBottom) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.topRadius = Math.min(_this.scaledHeight, _this.scaledWidth) * cutoutSizeTop / 100, 
                _this.bottomRadius = Math.min(_this.scaledHeight, _this.scaledWidth) * cutoutSizeBottom / 100, 
                _this;
            }
            return (0, tslib_es6.__extends)(TabRoundTopCorners, _super), Object.defineProperty(TabRoundTopCorners.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", 0, this.topRadius ], [ "A", this.topRadius, this.topRadius, 0, 0, 1, this.topRadius, 0 ], [ "L", this.scaledWidth - this.topRadius, 0 ], [ "A", this.topRadius, this.topRadius, 0, 0, 1, this.scaledWidth, this.topRadius ], [ "L", this.scaledWidth, this.scaledHeight - this.bottomRadius ], [ "A", this.bottomRadius, this.bottomRadius, 0, 0, 1, this.scaledWidth - this.bottomRadius, this.scaledHeight ], [ "L", this.bottomRadius, this.scaledHeight ], [ "A", this.bottomRadius, this.bottomRadius, 0, 0, 1, 0, this.scaledHeight - this.bottomRadius ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabRoundTopCorners.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabRoundTopCorners.prototype, "scaledContentBox", {
                get: function() {
                    var dist = 1 - Math.sqrt(2) / 2;
                    return new ContentBox(this.topRadius * dist, this.topRadius * dist, this.scaledWidth - this.topRadius * dist * 2, this.scaledHeight - this.topRadius * dist - Math.max(this.bottomRadius - this.topRadius * dist, 0));
                },
                enumerable: !1,
                configurable: !0
            }), TabRoundTopCorners;
        }(Shape), Trapezoid = function(_super) {
            function Trapezoid(containerWidth, containerHeight, rads, rounding, trapezoidSlant) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, angle = (90 - .45 * trapezoidSlant) * Math.PI / 180;
                return _this.triangleWidth = Math.min(_this.scaledWidth / 4, _this.scaledHeight / Math.tan(angle)), 
                _this;
            }
            return (0, tslib_es6.__extends)(Trapezoid, _super), Object.defineProperty(Trapezoid.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", this.triangleWidth, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Trapezoid.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(this.triangleWidth, 0, this.scaledWidth - 2 * this.triangleWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Trapezoid;
        }(Shape), TriangleIsoc = function(_super) {
            function TriangleIsoc(containerWidth, containerHeight, rads, rounding, triangleTipPosition) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.triangleTipPosition = triangleTipPosition / 100, _this;
            }
            return (0, tslib_es6.__extends)(TriangleIsoc, _super), Object.defineProperty(TriangleIsoc.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", this.triangleTipPosition, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriangleIsoc.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(this.triangleTipPosition / 2, .5, .5, .5);
                },
                enumerable: !1,
                configurable: !0
            }), TriangleIsoc;
        }(Shape), TriangleRight = function(_super) {
            function TriangleRight(containerWidth, containerHeight, rads, rounding) {
                return _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
            }
            return (0, tslib_es6.__extends)(TriangleRight, _super), Object.defineProperty(TriangleRight.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriangleRight.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(0, .5, .5, .5);
                },
                enumerable: !1,
                configurable: !0
            }), TriangleRight;
        }(Shape);
        function cleanDuplicates(pathCommands) {
            for (var i = 0; i < pathCommands.length - 1; i++) {
                var currCommand = pathCommands[i], nextCommand = pathCommands[i + 1];
                if ("M" !== currCommand[0] && "L" !== currCommand[0] || "L" !== nextCommand[0]) {
                    if ("Z" === nextCommand[0] && "L" === currCommand[0]) {
                        var firstCommandPosition = {
                            x: pathCommands[0][1],
                            y: pathCommands[0][2]
                        }, lastCommandPosition = {
                            x: pathCommands[i][1],
                            y: pathCommands[i][2]
                        };
                        firstCommandPosition.x === lastCommandPosition.x && firstCommandPosition.y === lastCommandPosition.y && pathCommands.splice(i, 1);
                    }
                } else {
                    var currPosition = {
                        x: currCommand[1],
                        y: currCommand[2]
                    }, nextPosition = {
                        x: nextCommand[1],
                        y: nextCommand[2]
                    };
                    currPosition.x === nextPosition.x && currPosition.y === nextPosition.y && pathCommands.splice(i + 1, 1);
                }
            }
            return pathCommands;
        }
        function createShape(width, height, shapeProperties, accentBarPosition, accentBarWidth) {
            var shapeRounding = shapeProperties.shapeRounding, tileShape = shapeProperties.tileShape, rotationInRads = shapeProperties.rotation * Math.PI / 180;
            switch (tileShape) {
              case shapeType.m.Arrow:
                return new Arrow(width, height, rotationInRads, shapeRounding, shapeProperties.arrowheadSize, shapeProperties.arrowStemWidth);

              case shapeType.m.ArrowChevron:
                return new ArrowChevron(width, height, rotationInRads, shapeRounding, shapeProperties.chevronAngle);

              case shapeType.m.ArrowPentagon:
                return new ArrowPentagon(width, height, rotationInRads, shapeRounding, shapeProperties.arrowheadSize);

              case shapeType.m.Heart:
                return new Heart(width, height, rotationInRads, shapeRounding);

              case shapeType.m.Hexagon:
                return new Hexagon(width, height, rotationInRads, shapeRounding, shapeProperties.hexagonSlant);

              case shapeType.m.Line:
                return new Line(width, height, rotationInRads);

              case shapeType.m.Octagon:
                return new Octagon(width, height, rotationInRads, shapeRounding, shapeProperties.octagonSnipSize);

              case shapeType.m.Oval:
                return new Oval(width, height, rotationInRads);

              case shapeType.m.Parallelogram:
                return new Parallelogram(width, height, rotationInRads, shapeRounding, shapeProperties.parallelogramSlant);

              case shapeType.m.Pentagon:
                return new Pentagon(width, height, rotationInRads, shapeRounding);

              case shapeType.m.Pill:
                return new Pill(width, height, rotationInRads, shapeRounding);

              case shapeType.m.Rectangle:
                return new Rectangle(width, height, rotationInRads, shapeRounding);

              case shapeType.m.RectangleRounded:
                return shapeProperties.rectangleRoundedCurveCustomStyle ? new RectangleCustomRounded(width, height, rotationInRads, shapeRounding, shapeProperties.rectangleRoundedCurveLeftTop, shapeProperties.rectangleRoundedCurveRightTop, shapeProperties.rectangleRoundedCurveLeftBottom, shapeProperties.rectangleRoundedCurveRightBottom) : new RectangleRounded(width, height, rotationInRads, shapeRounding, shapeProperties.rectangleRoundedCurve);

              case shapeType.m.Speechbubble:
                return new Speechbubble(width, height, rotationInRads, shapeRounding, shapeProperties.speechBubbleHeight, shapeProperties.speechBubbleTailPosition, shapeProperties.speechBubbleTailAngle);

              case shapeType.m.TabCutCorner:
                return new TabCutCorner(width, height, rotationInRads, shapeRounding, shapeProperties.tabCutCornerSnipSizeTopRight);

              case shapeType.m.TabCutTopCorners:
                return shapeProperties.tabCutCornerSnipSizeCustomStyle ? new TabCutTopCustomCorners(width, height, rotationInRads, shapeRounding, shapeProperties.tabCutCornerSnipSizeLeftTop, shapeProperties.tabCutCornerSnipSizeRightTop, shapeProperties.tabCutCornerSnipSizeLeftBottom, shapeProperties.tabCutCornerSnipSizeRightBottom) : new TabCutTopCorners(width, height, rotationInRads, shapeRounding, shapeProperties.tabCutCornerSnipSizeTop, shapeProperties.tabCutCornerSnipSizeBottom);

              case shapeType.m.TabRoundCorner:
                return new TabRoundCorner(width, height, rotationInRads, shapeRounding, shapeProperties.tabRoundCornerTopRight);

              case shapeType.m.TabRoundTopCorners:
                return new TabRoundTopCorners(width, height, rotationInRads, shapeRounding, shapeProperties.tabRoundCornerTop, shapeProperties.tabRoundCornerBottom);

              case shapeType.m.Trapezoid:
                return new Trapezoid(width, height, rotationInRads, shapeRounding, shapeProperties.trapezoidSlant);

              case shapeType.m.TriangleIsoc:
                return new TriangleIsoc(width, height, rotationInRads, shapeRounding, shapeProperties.isocelesTriangleTipPosition);

              case shapeType.m.TriangleRight:
                return new TriangleRight(width, height, rotationInRads, shapeRounding);

              case shapeType.m.AccentBar:
                return new AccentBar(width, height, rotationInRads, shapeRounding, accentBarPosition, accentBarWidth);

              case shapeType.m.TabCutTopCornersByPixel:
                return shapeProperties.tabCutCornerSnipSizeCustomStyle ? new TabCutTopCustomCornersByPixel(width, height, rotationInRads, shapeRounding, shapeProperties.tabCutCornerSnipSizeLeftTop, shapeProperties.tabCutCornerSnipSizeRightTop, shapeProperties.tabCutCornerSnipSizeLeftBottom, shapeProperties.tabCutCornerSnipSizeRightBottom) : new TabCutTopCustomCornersByPixel(width, height, rotationInRads, shapeRounding, shapeProperties.tabCutCornerSnipSizeTop, shapeProperties.tabCutCornerSnipSizeTop, shapeProperties.tabCutCornerSnipSizeBottom, shapeProperties.tabCutCornerSnipSizeBottom);

              case shapeType.m.RectangleRoundedByPixel:
                return shapeProperties.rectangleRoundedCurveCustomStyle ? new RectangleCustomRoundedByPixel(width, height, rotationInRads, shapeRounding, shapeProperties.rectangleRoundedCurveLeftTop, shapeProperties.rectangleRoundedCurveRightTop, shapeProperties.rectangleRoundedCurveLeftBottom, shapeProperties.rectangleRoundedCurveRightBottom) : new RectangleCustomRoundedByPixel(width, height, rotationInRads, shapeRounding, shapeProperties.rectangleRoundedCurve, shapeProperties.rectangleRoundedCurve, shapeProperties.rectangleRoundedCurve, shapeProperties.rectangleRoundedCurve);
            }
            debug.fF.assertNever(tileShape);
        }
        var htmlSubSelectionHelper = __webpack_require__(52287), visualBackgroundHelper = __webpack_require__(45545), linecapType = __webpack_require__(39107), browserUtils = __webpack_require__(59107), Utility = __webpack_require__(38078), color = __webpack_require__(64067), Tile = function() {
            function Tile(supportsKeyboard) {
                void 0 === supportsKeyboard && (supportsKeyboard = !1), this.supportsKeyboard = supportsKeyboard, 
                this.state = "default", this.width = 0, this.height = 0, this.selected = !1, this.id = Utility.b$.generateGuid();
            }
            return Tile.prototype.getState = function(propertySet) {
                var instance = this.state;
                if (this.properties[propertySet]) return (0, tileLibraryConverter.s9)(instance) ? this.properties[propertySet][instance.id] : this.properties[propertySet][instance];
            }, Object.defineProperty(Tile.prototype, "shapeWidth", {
                get: function() {
                    return Math.max(this.width - 2 * this.outsidePadding, 0);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapeHeight", {
                get: function() {
                    return Math.max(this.height - 2 * this.outsidePadding, 0);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapeType", {
                get: function() {
                    return this.getState("shape").tileShape;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapePath", {
                get: function() {
                    return this.shape.shapePathString;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapeRounding", {
                get: function() {
                    return this.getState("shape").shapeRounding;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapeLinecap", {
                get: function() {
                    return this.getState("shape").linecapType;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapeProperties", {
                get: function() {
                    return this.getState("shape");
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapePadding", {
                get: function() {
                    return this.shapeType === shapeType.m.Line ? this.shapeLinecap === linecapType.C.Flat ? this.outlineWeight / 2 * Math.abs(Math.sin(this.rotation * Math.PI / 90)) : this.outlineWeight / 2 : 0;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "outsidePadding", {
                get: function() {
                    return this.effectPadding + this.shapePadding;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.getContentInscribedRectangle = function(contentRads) {
                var boundingBox = this.shape.getContentBoundingBox(contentRads * Math.PI / 180);
                return {
                    left: boundingBox.x + this.outsidePadding,
                    top: boundingBox.y + this.outsidePadding,
                    width: boundingBox.width,
                    height: boundingBox.height
                };
            }, Tile.prototype.getContentInscribedRectangleWithoutBorder = function(contentRads, cardVisualRefUpdate) {
                var boundingBox = cardVisualRefUpdate ? this.shape.getContentBoundingBoxMaxRectangle() : this.shape.getContentBoundingBox(contentRads * Math.PI / 180);
                return {
                    left: boundingBox.x + (this.outlineShow ? this.outlineWeight / 2 : 0) + this.outsidePadding,
                    top: boundingBox.y + (this.outlineShow ? this.outlineWeight / 2 : 0) + this.outsidePadding,
                    width: boundingBox.width,
                    height: boundingBox.height
                };
            }, Object.defineProperty(Tile.prototype, "fillShow", {
                get: function() {
                    return this.getState("fill").show;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillColor", {
                get: function() {
                    return this.getState("fill").fillColor;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillOpacity", {
                get: function() {
                    return (0, color.TD)(this.getState("fill").fillTransparency);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillTransparency", {
                get: function() {
                    return this.getState("fill").fillTransparency;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillImage", {
                get: function() {
                    return this.getState("fill").fillImage;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillImageAspectRatio", {
                get: function() {
                    switch (this.fillImage && this.fillImage.scaling) {
                      case "Fill":
                        return "xMidYMid slice";

                      case "Fit":
                        return "none";

                      default:
                        return "xMidYMid";
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillImageTransparency", {
                get: function() {
                    return this.getState("fill").fillImageTransparency;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillImageSplitTransparency", {
                get: function() {
                    return this.getState("fill").fillImageSplitTransparency;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "hasOutline", {
                get: function() {
                    return !(!this.getState("outline").strokeShow || 0 === this.getState("outline").strokeWidth);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "outlineShow", {
                get: function() {
                    return this.getState("outline").strokeShow;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "outlineColor", {
                get: function() {
                    return this.hasOutline ? this.getState("outline").strokeColor : this.fillColor;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "outlineWeight", {
                get: function() {
                    return Math.max(2 * this.getState("outline").strokeWidth, 1e-6);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "outlineOpacity", {
                get: function() {
                    return this.hasOutline ? (0, color.TD)(this.getState("outline").strokeTransparency) : this.fillOpacity;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowShow", {
                get: function() {
                    return this.getState("shadow").show;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowAnglePreset", {
                get: function() {
                    return this.getState("shadow").shadowPositionPreset;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.getAngle = function(options) {
                if ("Outer" === options.position) switch (options.anglePreset) {
                  case "centerRight":
                    return 0;

                  case "bottomRight":
                    return 45;

                  case "bottom":
                    return 90;

                  case "bottomLeft":
                    return 135;

                  case "centerLeft":
                    return 180;

                  case "topLeft":
                    return 225;

                  case "top":
                    return 270;

                  case "topRight":
                    return 315;

                  default:
                    return "glow" === options.state ? this.getState("glow").glowAngle : this.getState("shadow").shadowAngle;
                } else if ("Inner" === options.position) switch (options.anglePreset) {
                  case "centerLeft":
                    return 0;

                  case "topLeft":
                    return 45;

                  case "top":
                    return 90;

                  case "topRight":
                    return 135;

                  case "centerRight":
                    return 180;

                  case "bottomRight":
                    return 225;

                  case "bottom":
                    return 270;

                  case "bottomLeft":
                    return 315;

                  default:
                    return "glow" === options.state ? this.getState("glow").glowAngle : this.getState("shadow").shadowAngle;
                }
            }, Object.defineProperty(Tile.prototype, "shadowDistance", {
                get: function() {
                    switch (this.shadowAnglePreset) {
                      case "center":
                        return 0;

                      case "custom":
                        return this.getState("shadow").shadowDistance / 10;

                      default:
                        return 5;
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.getShadowAngleOptions = function() {
                return {
                    anglePreset: this.shadowAnglePreset,
                    position: this.shadowPosition,
                    state: "shadow"
                };
            }, Object.defineProperty(Tile.prototype, "shadowDx", {
                get: function() {
                    var shadowAngleOptions = this.getShadowAngleOptions();
                    return Math.cos(this.getAngle(shadowAngleOptions) * (Math.PI / 180)) * (this.shadowDistance + ("custom" === this.shadowAnglePreset ? this.shadowSize : 0));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowDy", {
                get: function() {
                    var shadowAngleOptions = this.getShadowAngleOptions();
                    return Math.sin(this.getAngle(shadowAngleOptions) * (Math.PI / 180)) * (this.shadowDistance + ("custom" === this.shadowAnglePreset ? this.shadowSize : 0));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowBlur", {
                get: function() {
                    return this.getState("shadow").shadowBlur / 10;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowOpacity", {
                get: function() {
                    return (0, color.TD)(this.getState("shadow").shadowTransparency);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowColor", {
                get: function() {
                    return this.getState("shadow").shadowColor;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowSize", {
                get: function() {
                    return this.getState("shadow").shadowSpread;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowShow", {
                get: function() {
                    return this.getState("glow").show;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowAnglePreset", {
                get: function() {
                    return this.getState("glow").glowPositionPreset;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowPosition", {
                get: function() {
                    return this.getState("shadow").position;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowDistance", {
                get: function() {
                    switch (this.glowAnglePreset) {
                      case "center":
                        return 0;

                      case "custom":
                        return this.getState("glow").glowDistance / 10;

                      default:
                        return 5;
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowSize", {
                get: function() {
                    return this.getState("glow").glowSpread;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.getGlowAngleOptions = function() {
                return {
                    anglePreset: this.glowAnglePreset,
                    position: this.glowPosition,
                    state: "glow"
                };
            }, Object.defineProperty(Tile.prototype, "glowDx", {
                get: function() {
                    var glowAngleOptions = this.getGlowAngleOptions();
                    return Math.cos(this.getAngle(glowAngleOptions) * (Math.PI / 180)) * (this.glowDistance + ("custom" === this.glowAnglePreset ? this.glowSize : 0));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowDy", {
                get: function() {
                    var glowAngleOptions = this.getGlowAngleOptions();
                    return Math.sin(this.getAngle(glowAngleOptions) * (Math.PI / 180)) * (this.glowDistance + ("custom" === this.glowAnglePreset ? this.glowSize : 0));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowBlur", {
                get: function() {
                    return this.getState("glow").glowBlur / 10;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowOpacity", {
                get: function() {
                    return (0, color.TD)(this.getState("glow").glowTransparency);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowColor", {
                get: function() {
                    return this.getState("glow").glowColor;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowPosition", {
                get: function() {
                    return this.getState("glow").position;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "effectPadding", {
                get: function() {
                    return Math.max(this.shadowShow ? "Inner" === this.shadowPosition ? 0 : 2 * this.shadowBlur + (this.shadowDistance + this.shadowSize) : 0, this.glowShow ? "Inner" === this.glowPosition ? 0 : 2 * this.glowBlur + (this.glowDistance + this.glowSize) : 0);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "rotation", {
                get: function() {
                    return this.getState("shape").rotation;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "cursor", {
                get: function() {
                    return "inherit";
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "accentBarShow", {
                get: function() {
                    var _a;
                    return null === (_a = this.getState("accentBar")) || void 0 === _a ? void 0 : _a.show;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "accentBarPosition", {
                get: function() {
                    var _a;
                    return null === (_a = this.getState("accentBar")) || void 0 === _a ? void 0 : _a.position;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "accentBarColor", {
                get: function() {
                    var _a;
                    return null === (_a = this.getState("accentBar")) || void 0 === _a ? void 0 : _a.color;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "accentBarOpacity", {
                get: function() {
                    var _a;
                    return (0, color.TD)(null === (_a = this.getState("accentBar")) || void 0 === _a ? void 0 : _a.transparency);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "accentBarWidth", {
                get: function() {
                    var _a;
                    return null === (_a = this.getState("accentBar")) || void 0 === _a ? void 0 : _a.width;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.update = function(options) {
                var _a, _b, _c, _d, _e, _f;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_g) {
                        switch (_g.label) {
                          case 0:
                            return options && (this.element = null !== (_a = options.element) && void 0 !== _a ? _a : this.element, 
                            this.width = null !== (_b = options.width) && void 0 !== _b ? _b : this.width, this.height = null !== (_c = options.height) && void 0 !== _c ? _c : this.height, 
                            this.properties = null !== (_d = options.properties) && void 0 !== _d ? _d : this.properties, 
                            this.index = null !== (_e = options.cardIndex) && void 0 !== _e ? _e : this.index, 
                            this.ariaLabel = null !== (_f = options.ariaLabel) && void 0 !== _f ? _f : this.ariaLabel), 
                            debug.fF.assertValue(this.element, "tile element"), debug.fF.assertValue(this.width, "tile width"), 
                            debug.fF.assertValue(this.height, "tile height"), debug.fF.assertValue(this.properties, "tile properties"), 
                            this.updateShape(), 0 !== this.element.select("svg.tileSVG").size() ? [ 3, 2 ] : (this.init(), 
                            [ 4, this.afterInit() ]);

                          case 1:
                            _g.sent(), _g.label = 2;

                          case 2:
                            return void 0 === this.selection && this.updateIds(), [ 4, this.beforeRender() ];

                          case 3:
                            return _g.sent(), this.render(), [ 4, this.afterRender() ];

                          case 4:
                            return _g.sent(), [ 2 ];
                        }
                    });
                });
            }, Tile.prototype.init = function() {
                this.selection = this.element.append("svg").attr("class", "tileSVG"), this.accentBarLayer = new AccentBarLayer("front", this.element, this.id);
                var container = this.selection.append("g").attr("id", "container".concat(this.id)), tile = container.append("g").attrs({
                    class: "tile"
                });
                tile.append("path").attr("class", "fill ui-role-button-fill"), tile.append("clipPath").attr("id", "clipPath".concat(this.id)).append("path").attr("class", "clipPathpath"), 
                this.contentSelection = container.append("g").attr("class", "tileContentContainer");
                var defs = container.append("defs");
                defs.append("filter").attrs({
                    class: "invertedShadowFilters",
                    id: "invertedShadowFilters".concat(this.id),
                    filterUnits: "userSpaceOnUse"
                }), defs.append("filter").attrs({
                    class: "invertedGlowFilters",
                    id: "invertedGlowFilters".concat(this.id),
                    filterUnits: "userSpaceOnUse"
                }), defs.append("filter").attrs({
                    class: "shadowFilters",
                    id: "shadowFilters".concat(this.id),
                    filterUnits: "userSpaceOnUse"
                });
            }, Tile.prototype.updateIds = function() {
                this.selection = this.element.select("svg.tileSVG"), this.selection.selectAll("g[id^=container]").attr("id", "container".concat(this.id)), 
                this.selection.select(".invertedShadowFilters").attr("id", "invertedShadowFilters".concat(this.id)), 
                this.selection.select(".invertedGlowFilters").attr("id", "invertedGlowFilters".concat(this.id)), 
                this.selection.select(".shadowFilters").attr("id", "shadowFilters".concat(this.id)), 
                this.selection.select("clipPath").attr("id", "clipPath".concat(this.id)), this.accentBarLayer = new AccentBarLayer("front", this.element, this.id), 
                this.accentBarLayer.restore();
            }, Tile.prototype.render = function() {
                var _this = this;
                this.selection.attrs({
                    width: this.width,
                    height: this.height
                });
                var transform = "translate(".concat(this.outsidePadding, ", ").concat(this.outsidePadding, ")"), filterUrl = this.getFilterUrl(), tile = this.selection.select(".tile").attrs({
                    transform,
                    cursor: this.cursor,
                    filter: filterUrl
                }), fill = tile.select(".fill").classed("selected", this.selected).classed(htmlSubSelectionHelper.cy, !0).attrs({
                    d: this.shapePath,
                    fill: this.fillColor,
                    "fill-opacity": this.fillShow ? this.fillOpacity : 0,
                    stroke: this.outlineShow ? this.outlineColor : "transparent",
                    "stroke-width": this.outlineShow ? this.outlineWeight : 1e-6,
                    "stroke-opacity": this.outlineOpacity,
                    "stroke-linecap": this.shapeLinecap,
                    "clip-path": this.shapeType !== shapeType.m.Line ? "url(#clipPath".concat(this.id, ")") : null
                });
                if (fill.attr(htmlSubSelectionHelper.Ez, "".concat("tile", "_default")), fill.attr(htmlSubSelectionHelper.CK, "Card_Background_Color"), 
                fill.attr(htmlSubSelectionHelper.QZ, 3), this.accentBarShow) {
                    var shapePathString, accentBarProperties = _.clone(this.shapeProperties);
                    accentBarProperties.tileShape = shapeType.m.AccentBar, shapePathString = createShape(this.shapeWidth, this.shapeHeight, accentBarProperties, this.accentBarPosition, this.accentBarWidth).accentBarPathString.toString(), 
                    this.accentBarLayer.render({
                        width: this.width,
                        height: this.height,
                        cursor: this.cursor,
                        transform,
                        filterUrl: "",
                        shapePath: this.shapePath,
                        accentBar: {
                            shape: shapePathString,
                            opacity: this.accentBarOpacity,
                            clipPath: this.shapeType !== shapeType.m.Line ? "url(#clipPath".concat(this.id, ")") : null,
                            color: this.accentBarColor
                        }
                    });
                } else this.accentBarLayer.hide();
                tile.select(".clipPathpath").attr("d", this.shapePath);
                var invertedShadowFilters = this.selection.select(".invertedShadowFilters"), invertedGlowFilters = this.selection.select(".invertedGlowFilters"), shadowFilters = this.selection.select(".shadowFilters");
                invertedShadowFilters.selectAll("*").remove(), invertedGlowFilters.selectAll("*").remove(), 
                shadowFilters.selectAll("*").remove(), "Inner" === this.shadowPosition ? (this.getInvertedFilter(invertedShadowFilters), 
                this.setFilters({
                    dx: this.shadowDx,
                    dy: this.shadowDy,
                    blur: this.shadowBlur,
                    color: this.shadowColor,
                    opacity: this.shadowOpacity,
                    show: this.shadowShow
                }, invertedShadowFilters)) : shadowFilters.append("feDropShadow").attrs({
                    class: "dropshadow",
                    dx: this.shadowDx,
                    dy: this.shadowDy,
                    stdDeviation: this.shadowBlur,
                    "flood-color": this.shadowColor,
                    "flood-opacity": this.shadowShow ? this.shadowOpacity : 0,
                    result: "dropshadow"
                }), "Inner" === this.glowPosition ? (this.getInvertedFilter(invertedGlowFilters), 
                this.setFilters({
                    dx: this.glowDx,
                    dy: this.glowDy,
                    blur: this.glowBlur,
                    color: this.glowColor,
                    opacity: this.glowOpacity,
                    show: this.glowShow
                }, invertedGlowFilters)) : shadowFilters.append("feDropShadow").attrs({
                    class: "glow",
                    dx: this.glowDx,
                    dy: this.glowDy,
                    stdDeviation: this.glowBlur,
                    "flood-color": this.glowColor,
                    "flood-opacity": this.glowShow ? this.glowOpacity : 0,
                    result: "glow"
                });
                var outlineWidth = this.outlineShow ? this.outlineWeight : 0;
                (0, visualBackgroundHelper.Re)({
                    image: this.fillShow ? this.fillImage : void 0,
                    transparency: this.fillImageSplitTransparency ? this.fillImageTransparency : this.fillTransparency
                }, $(this.element.node()), {
                    left: 0 + outlineWidth / 2,
                    top: 0 + outlineWidth / 2,
                    width: this.width - outlineWidth,
                    height: this.height - outlineWidth
                });
                var imageRectangle = this.getContentInscribedRectangle(this.rotation);
                this.element.select(".background-image").style("top", "".concat(imageRectangle.top, "px")).style("left", "".concat(imageRectangle.left, "px")).style("width", "".concat(imageRectangle.width - outlineWidth, "px")).style("height", "".concat(imageRectangle.height - outlineWidth, "px")).style("transform", "rotate(".concat(this.rotation, "deg)")).style("pointer-events", "none"), 
                fill.on("click", function() {
                    return _this.onTileClick();
                }).on("contextmenu", function() {
                    return _this.onTileContextMenu();
                }).on("pointerover", function() {
                    return _this.onPointerOver();
                }).on("pointerleave", function() {
                    return _this.onTilePointerleave();
                }).on("pointerdown", function() {
                    return _this.onTilePointerdown();
                }).on("pointerup", function() {
                    return _this.onTilePointerup();
                }), this.supportsKeyboard && (this.element.attr("tabindex", 0).attr("focusable", !0).attr("aria-pressed", this.selected).on("keydown", function() {
                    return _this.onTileKeydown();
                }), null != this.index && (this.element.attr("aria-posinset", this.index + 1).attr("role", "listitem"), 
                null != this.ariaLabel && this.element.attr("aria-label", this.ariaLabel)));
            }, Tile.prototype.getFilterUrl = function() {
                if (browserUtils.M.isInternetExplorer11() || browserUtils.M.isEdgeLegacy() || !this.shadowShow && !this.glowShow) return null;
                var innerShadow = "Inner" === this.shadowPosition, innerGlow = "Inner" === this.glowPosition, innerShadowUrl = innerShadow ? "url(#invertedShadowFilters".concat(this.id, ")") : "", innerGlowUrl = innerGlow ? "url(#invertedGlowFilters".concat(this.id, ")") : "", shadowUrl = innerShadow && innerGlow ? "" : "url(#shadowFilters".concat(this.id, ")");
                return "".concat(innerShadowUrl, " ").concat(innerGlowUrl, " ").concat(shadowUrl);
            }, Tile.prototype.getInvertedFilter = function(filter) {
                filter.append("feOffset").attr("class", "feOffset"), filter.append("feGaussianBlur").attr("class", "feGaussianBlur"), 
                filter.append("feComposite").attr("class", "feCompositeInvertShadow"), filter.append("feFlood").attr("class", "feFlood"), 
                filter.append("feComposite").attr("class", "feCompositeCutColor"), filter.append("feComposite").attr("class", "feCompositeOverElement");
            }, Tile.prototype.setFilters = function(options, filter) {
                filter.select(".feOffset").attrs({
                    in: "SourceGraphic",
                    dx: options.dx,
                    dy: options.dy,
                    result: "feOffset"
                }), filter.select(".feGaussianBlur").attrs({
                    in: "feOffset",
                    stdDeviation: options.blur,
                    result: "offset-blur"
                }), filter.select(".feCompositeInvertShadow").attrs({
                    operator: "out",
                    in: "SourceGraphic",
                    in2: "offset-blur",
                    result: "inverse"
                }), filter.select(".feFlood").attrs({
                    in: "SourceGraphic",
                    "flood-color": options.color,
                    "flood-opacity": options.show ? options.opacity : 0,
                    result: "color"
                }), filter.select(".feCompositeCutColor").attrs({
                    operator: "in",
                    in: "color",
                    in2: "inverse",
                    result: "shadow"
                }), filter.select(".feCompositeOverElement").attrs({
                    operator: "over",
                    in: "shadow",
                    in2: "SourceGraphic"
                });
            }, Tile.prototype.renderWithoutLifecycleEvents = function() {
                var _this = this;
                browserUtils.M.isPointerTypeTouch(d3.event) ? window.requestAnimationFrame(function() {
                    return _this.render();
                }) : this.render();
            }, Tile.prototype.onPointerOver = function() {
                browserUtils.M.isPointerTypeTouch(d3.event) || this.onTilePointerover();
            }, Tile.prototype.createNewShape = function() {
                return createShape(this.shapeWidth, this.shapeHeight, this.shapeProperties);
            }, Tile.prototype.getAdjustedShapePath = function() {
                var adjustedShapeProperties = _.clone(this.shapeProperties);
                if (this.outlineShow && this.outlineWeight > 0) {
                    var adjustedOutlineWeight = this.outlineWeight / 2;
                    adjustedShapeProperties.rectangleRoundedCurve = adjustedShapeProperties.rectangleRoundedCurve > adjustedOutlineWeight ? adjustedShapeProperties.rectangleRoundedCurve - adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.rectangleRoundedCurveLeftTop = adjustedShapeProperties.rectangleRoundedCurveLeftTop > adjustedOutlineWeight ? adjustedShapeProperties.rectangleRoundedCurveLeftTop - adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.rectangleRoundedCurveRightTop = adjustedShapeProperties.rectangleRoundedCurveRightTop > adjustedOutlineWeight ? adjustedShapeProperties.rectangleRoundedCurveRightTop - adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.rectangleRoundedCurveLeftBottom = adjustedShapeProperties.rectangleRoundedCurveLeftBottom > adjustedOutlineWeight ? adjustedShapeProperties.rectangleRoundedCurveLeftBottom - adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.rectangleRoundedCurveRightBottom = adjustedShapeProperties.rectangleRoundedCurveRightBottom > adjustedOutlineWeight ? adjustedShapeProperties.rectangleRoundedCurveRightBottom - adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeBottom = adjustedShapeProperties.tabCutCornerSnipSizeBottom > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeBottom - .6 * adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeTop = adjustedShapeProperties.tabCutCornerSnipSizeTop > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeTop - .6 * adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeLeftTop = adjustedShapeProperties.tabCutCornerSnipSizeLeftTop > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeLeftTop - .6 * adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeRightTop = adjustedShapeProperties.tabCutCornerSnipSizeRightTop > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeRightTop - .6 * adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeLeftBottom = adjustedShapeProperties.tabCutCornerSnipSizeLeftBottom > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeLeftBottom - .6 * adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeRightBottom = adjustedShapeProperties.tabCutCornerSnipSizeRightBottom > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeRightBottom - .6 * adjustedOutlineWeight : 0;
                }
                return createShape(this.shapeWidth - (this.outlineShow ? this.outlineWeight : 0), this.shapeHeight - (this.outlineShow ? this.outlineWeight : 0), adjustedShapeProperties).shapePathString.toString();
            }, Tile.prototype.updateShape = function() {
                this.shape = this.createNewShape();
            }, Tile.prototype.onTileClick = function() {}, Tile.prototype.onTileContextMenu = function() {}, 
            Tile.prototype.onTileKeydown = function() {}, Tile.prototype.onTilePointerover = function() {}, 
            Tile.prototype.onTilePointerleave = function() {}, Tile.prototype.onTilePointerdown = function() {}, 
            Tile.prototype.onTilePointerup = function() {}, Tile.prototype.afterInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2 ];
                    });
                });
            }, Tile.prototype.beforeRender = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2 ];
                    });
                });
            }, Tile.prototype.afterRender = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2 ];
                    });
                });
            }, Tile;
        }(), AccentBarLayer = function() {
            function AccentBarLayer(classPrefix, element, id) {
                this.classPrefix = classPrefix, this.element = element, this.id = id;
            }
            return AccentBarLayer.prototype.init = function() {
                this.svgContaienr = this.element.append("svg").style("position", "absolute").style("z-index", 2).style("pointer-events", "none").attr("class", "".concat(this.classPrefix, "-tile-svg")), 
                this.container = this.svgContaienr.append("g").attr("id", "".concat(this.classPrefix, "Container").concat(this.id)), 
                this.tile = this.container.append("g").attrs({
                    class: "tile"
                }), this.tile.append("clipPath").attr("id", "clipPath".concat(this.id)).append("path").attr("class", "clipPathpath"), 
                this.tile.append("path").attr("class", "accentBar");
            }, AccentBarLayer.prototype.restore = function() {
                this.svgContaienr = this.element.select("svg.".concat(this.classPrefix, "-tile-svg")), 
                this.svgContaienr.empty() || (this.container = this.svgContaienr.select("g[id^=".concat(this.classPrefix, "Container]")).attr("id", "".concat(this.classPrefix, "Container").concat(this.id)), 
                this.tile = this.container.select("g.tile"), this.tile.select("clipPath").attr("id", "clipPathFront".concat(this.id)));
            }, AccentBarLayer.prototype.render = function(parameters) {
                void 0 === this.container && this.init(), this.svgContaienr.style("display", "block"), 
                parameters.accentBar ? (this.svgContaienr.attrs({
                    width: parameters.width,
                    height: parameters.height
                }), this.tile.attrs({
                    transform: parameters.transform,
                    cursor: parameters.cursor,
                    filter: parameters.filterUrl
                }), this.tile.select(".clipPathpath").attr("d", parameters.shapePath), this.tile.select(".accentBar").attrs({
                    d: parameters.accentBar.shape,
                    "fill-opacity": parameters.accentBar.opacity,
                    "clip-path": parameters.accentBar.clipPath,
                    fill: parameters.accentBar.color
                })) : this.svgContaienr.style("display", "none");
            }, AccentBarLayer.prototype.hide = function() {
                this.svgContaienr && this.svgContaienr.style("display", "none");
            }, AccentBarLayer;
        }();
    },
    58778: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            B: function() {
                return BubblingEventManager;
            }
        });
        var _debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62458), _Utility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38078), listenersKey = "BubblingEventListeners", managerKey = "BubblingEventManager", BubblingEventManager = function() {
            function BubblingEventManager(root) {
                this.root = root, this.registeredBubblingEvents = {}, this.registeredCapturedEvents = {}, 
                this.rootNode = root.node(), (0, _Utility__WEBPACK_IMPORTED_MODULE_0__.aT)(this.rootNode, managerKey, this);
            }
            return BubblingEventManager.prototype.ensureEventRegistered = function(eventType, capture) {
                var _this = this, registeredEvents = capture ? this.registeredCapturedEvents : this.registeredBubblingEvents;
                if (!registeredEvents[eventType]) {
                    registeredEvents[eventType] = !0;
                    var handler = capture ? handleCapturedEvent : handleBubblingEvent, eventName = "".concat(eventType, ".").concat(managerKey);
                    capture && (eventName += "Capture"), this.root.on(eventName, function() {
                        handler(_this.root);
                    }, capture);
                }
            }, BubblingEventManager.prototype.on = function(element, eventName, listener, capture) {
                var eventType = function(eventName) {
                    var dot = eventName.indexOf(".");
                    return -1 === dot ? eventName : eventName.substr(0, dot);
                }(eventName);
                this.ensureEventRegistered(eventType, !!capture);
                var listeners = getListeners(element, !0);
                if (listeners) {
                    var typeListeners = listeners[eventType];
                    typeListeners || (listeners[eventType] = typeListeners = {
                        bubbling: {},
                        captured: {}
                    }), (capture ? typeListeners.captured : typeListeners.bubbling)[eventName] = listener;
                }
            }, BubblingEventManager;
        }();
        function getListeners(element, create) {
            var listeners = (0, _Utility__WEBPACK_IMPORTED_MODULE_0__.aT)(element, listenersKey);
            if (!listeners) {
                if (!create) return;
                (0, _Utility__WEBPACK_IMPORTED_MODULE_0__.aT)(element, listenersKey, listeners = {});
            }
            return listeners;
        }
        function dispatch(eventListeners) {
            for (var eventName in eventListeners) {
                var eventListener = eventListeners[eventName];
                eventListener && eventListener();
            }
        }
        function visitListeners(root, visit) {
            for (var rootNode = root.node(), event = d3.event, target = event.target; target; ) {
                var listeners = getListeners(target, !1);
                if (listeners) {
                    var typeListeners = listeners[event.type];
                    typeListeners && visit(typeListeners);
                }
                if (target === rootNode) break;
                _debug__WEBPACK_IMPORTED_MODULE_1__.fF.assert(function() {
                    return !(0, _Utility__WEBPACK_IMPORTED_MODULE_0__.aT)(target, managerKey);
                }, "BubblingEventManagers cannot overlap"), target = target.parentElement;
            }
        }
        function handleCapturedEvent(root) {
            var captureListeners = [];
            visitListeners(root, function(listeners) {
                var captured = listeners.captured;
                captured && captureListeners.push(captured);
            });
            for (var i = captureListeners.length; i-- > 0; ) dispatch(captureListeners[i]);
        }
        function handleBubblingEvent(root) {
            visitListeners(root, function(listeners) {
                var bubbling = listeners.bubbling;
                bubbling && dispatch(bubbling);
            });
        }
    },
    60810: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            G: function() {
                return LoadMoreDataStatus;
            },
            J: function() {
                return SimpleLoadMoreDataHandler;
            }
        });
        var LoadMoreDataStatus = function(LoadMoreDataStatus) {
            return LoadMoreDataStatus[LoadMoreDataStatus.NoOperation = 0] = "NoOperation", LoadMoreDataStatus[LoadMoreDataStatus.WaitingForData = 1] = "WaitingForData", 
            LoadMoreDataStatus[LoadMoreDataStatus.TriggeredLoadMore = 2] = "TriggeredLoadMore", 
            LoadMoreDataStatus;
        }({}), SimpleLoadMoreDataHandler = function() {
            function SimpleLoadMoreDataHandler(hostServices) {
                this.hostServices = hostServices, this.waitingForData = !1;
            }
            return SimpleLoadMoreDataHandler.prototype.shouldLoadMoreData = function() {
                return this.shouldLoadMoreDataInternal() === LoadMoreDataStatus.TriggeredLoadMore;
            }, SimpleLoadMoreDataHandler.prototype.isLoadingMoreData = function() {
                return this.waitingForData;
            }, SimpleLoadMoreDataHandler.prototype.updateDataView = function(dataView) {
                this.dataView = dataView;
            }, SimpleLoadMoreDataHandler.prototype.loadMoreData = function() {
                var status = this.shouldLoadMoreDataInternal();
                return status === LoadMoreDataStatus.TriggeredLoadMore && (this.hostServices.loadMoreData(), 
                this.waitingForData = !0), status;
            }, SimpleLoadMoreDataHandler.prototype.onLoadMoreDataCompleted = function() {
                this.waitingForData = !1;
            }, SimpleLoadMoreDataHandler.prototype.shouldLoadMoreDataInternal = function() {
                if (!this.dataView) return LoadMoreDataStatus.NoOperation;
                var dataViewMetadata = this.dataView.metadata;
                return this.waitingForData ? LoadMoreDataStatus.WaitingForData : dataViewMetadata && dataViewMetadata.segment ? LoadMoreDataStatus.TriggeredLoadMore : LoadMoreDataStatus.NoOperation;
            }, SimpleLoadMoreDataHandler;
        }();
    }
} ]);