<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BinaryOperatorQueryNode_InvalidOperandType" xml:space="preserve">
    <value>Only operands with primitive types are allowed in binary operators. Found operand types '{0}' and '{1}'.</value>
  </data>
  <data name="BinaryOperatorQueryNode_OperandsMustHaveSameTypes" xml:space="preserve">
    <value>Both operands of a binary operators must have the same type. Found different operand types '{0}' and '{1}'.</value>
  </data>
  <data name="ExceptionUtils_ArgumentStringNullOrEmpty" xml:space="preserve">
    <value>Value cannot be null or empty.</value>
  </data>
  <data name="ExceptionUtils_CheckIntegerNotNegative" xml:space="preserve">
    <value>A non-negative integer value was expected, but the value '{0}' is not a valid non-negative integer.</value>
  </data>
  <data name="ExceptionUtils_CheckIntegerPositive" xml:space="preserve">
    <value>A positive integer value was expected, but the value '{0}' is not a valid positive integer.</value>
  </data>
  <data name="ExceptionUtils_CheckLongPositive" xml:space="preserve">
    <value>A positive long value was expected; however, the value '{0}' is not a valid positive long value.</value>
  </data>
  <data name="ExpressionLexer_DigitExpected" xml:space="preserve">
    <value>A digit was expected at position {0} in '{1}'.</value>
  </data>
  <data name="ExpressionLexer_InvalidCharacter" xml:space="preserve">
    <value>Syntax error: character '{0}' is not valid at position {1} in '{2}'.</value>
  </data>
  <data name="ExpressionLexer_SyntaxError" xml:space="preserve">
    <value>Syntax error at position {0} in '{1}'.</value>
  </data>
  <data name="ExpressionLexer_UnbalancedBracketExpression" xml:space="preserve">
    <value>Found an unbalanced bracket expression.</value>
  </data>
  <data name="ExpressionLexer_UnterminatedLiteral" xml:space="preserve">
    <value>There is an unterminated literal at position {0} in '{1}'.</value>
  </data>
  <data name="ExpressionLexer_UnterminatedStringLiteral" xml:space="preserve">
    <value>There is an unterminated string literal at position {0} in '{1}'.</value>
  </data>
  <data name="ExpressionToken_IdentifierExpected" xml:space="preserve">
    <value>An identifier was expected at position {0}.</value>
  </data>
  <data name="General_InternalError" xml:space="preserve">
    <value>An internal error '{0}' occurred.</value>
  </data>
  <data name="MetadataBinder_BinaryOperatorOperandNotSingleValue" xml:space="preserve">
    <value>The operand for a binary operator '{0}' is not a single value. Binary operators require both operands to be single values.</value>
  </data>
  <data name="MetadataBinder_BoundNodeCannotBeNull" xml:space="preserve">
    <value>A token of kind '{0}' was bound to the value null; this is invalid. A query token must always be bound to a non-null query node.</value>
  </data>
  <data name="MetadataBinder_CannotConvertToType" xml:space="preserve">
    <value>Expression of type '{0}' cannot be converted to type '{1}'.</value>
  </data>
  <data name="MetadataBinder_DuplicitKeyPropertyInKeyValues" xml:space="preserve">
    <value>A key property '{0}' was found twice in a key lookup. Each key property can be specified just once in a key lookup.</value>
  </data>
  <data name="MetadataBinder_FilterExpressionNotSingleValue" xml:space="preserve">
    <value>The $filter expression must evaluate to a single boolean value.</value>
  </data>
  <data name="MetadataBinder_FilterNotApplicable" xml:space="preserve">
    <value>The $filter query option cannot be applied to the query path. Filter can only be applied to a collection of entities.</value>
  </data>
  <data name="MetadataBinder_FunctionArgumentNotSingleValue" xml:space="preserve">
    <value>The argument for an invocation of a function with name '{0}' is not a single value. All arguments for this function must be single values.</value>
  </data>
  <data name="MetadataBinder_IncompatibleOperandError" xml:space="preserve">
    <value>A unary operator with an incompatible type was detected. Found operand type '{0}' for operator kind '{1}'.</value>
  </data>
  <data name="MetadataBinder_IncompatibleOperandsError" xml:space="preserve">
    <value>A binary operator with incompatible types was detected. Found operand types '{0}' and '{1}' for operator kind '{2}'.</value>
  </data>
  <data name="MetadataBinder_KeyValueApplicableOnlyToEntityType" xml:space="preserve">
    <value>Type '{0}' is not an entity type. Key value can only be applied to an entity type.</value>
  </data>
  <data name="MetadataBinder_MultiValuePropertyNotSupportedInExpression" xml:space="preserve">
    <value>The MultiValue property '{0}' cannot be used in $filter or $orderby query expression. MultiValue properties are not supported with these query options.</value>
  </data>
  <data name="MetadataBinder_NoApplicableFunctionFound" xml:space="preserve">
    <value>No function signature for the function with name '{0}' matches the specified arguments. The function signatures considered are: {1}.</value>
  </data>
  <data name="MetadataBinder_NonQueryableServiceOperationWithKeyLookup" xml:space="preserve">
    <value>Segment '{0}' which is a service operation returning non-queryable result has a key lookup. Only service operations returning queryable results can have a key lookup applied to them.</value>
  </data>
  <data name="MetadataBinder_NotAllKeyPropertiesSpecifiedInKeyValues" xml:space="preserve">
    <value>A key lookup on type '{0}' didn't specify values for all key properties. All key properties must be specified in a key lookup.</value>
  </data>
  <data name="MetadataBinder_OrderByExpressionNotSingleValue" xml:space="preserve">
    <value>The $orderby expression must evaluate to a single value of primitive type.</value>
  </data>
  <data name="MetadataBinder_OrderByNotApplicable" xml:space="preserve">
    <value>The $orderby query option cannot be applied to the query path. Ordering can only be applied to a collection of entities.</value>
  </data>
  <data name="MetadataBinder_PropertyAccessSourceNotSingleValue" xml:space="preserve">
    <value>The parent value for a property access of a property '{0}' is not a single value. Property access can only be applied to a single value.</value>
  </data>
  <data name="MetadataBinder_PropertyAccessWithoutParentParameter" xml:space="preserve">
    <value>A PropertyAccessQueryToken without a parent was encountered outside of $filter or $orderby expression. The PropertyAccessQueryToken without a parent token is only allowed inside $filter or $orderby expressions.</value>
  </data>
  <data name="MetadataBinder_PropertyNotDeclared" xml:space="preserve">
    <value>Type '{0}' does not have a property '{1}'.</value>
  </data>
  <data name="MetadataBinder_PropertyNotDeclaredOrNotKeyInKeyValue" xml:space="preserve">
    <value>Property '{0}' is not declared on type '{1}' or is not a key property. Only key properties can be used in key lookups.</value>
  </data>
  <data name="MetadataBinder_QueryServiceOperationOfNonEntityType" xml:space="preserve">
    <value>Service operation '{0}' of kind '{1}' returns type '{2}' which is not an entity type. Service operations of kind QueryWithMultipleResults or QueryWithSingleResult can only return entity types.</value>
  </data>
  <data name="MetadataBinder_RootSegmentResourceNotFound" xml:space="preserve">
    <value>Could not find an entity set for root segment '{0}'.</value>
  </data>
  <data name="MetadataBinder_ServiceOperationParameterInvalidType" xml:space="preserve">
    <value>The parameter '{0}' with value '{1}' for the service operation '{2}' is not a valid literal of type '{3}'.</value>
  </data>
  <data name="MetadataBinder_ServiceOperationParameterMissing" xml:space="preserve">
    <value>Service operation '{0}' is missing the required parameter '{1}'.</value>
  </data>
  <data name="MetadataBinder_ServiceOperationWithoutResultKind" xml:space="preserve">
    <value>The service operation '{0}' does not have an associated result kind. Without a result kind, a service operation cannot be bound.</value>
  </data>
  <data name="MetadataBinder_SkipNotApplicable" xml:space="preserve">
    <value>The $skip query option cannot be applied to the query path. Skip can only be applied to a collection of entities.</value>
  </data>
  <data name="MetadataBinder_SkipRequiresNonNegativeInteger" xml:space="preserve">
    <value>The value '{0}' is not a non-negative integer value. In OData, the $skip query option must specify a non-negative integer value.</value>
  </data>
  <data name="MetadataBinder_TopNotApplicable" xml:space="preserve">
    <value>The $top query option cannot be applied to the query path. Top can only be applied to a collection of entities.</value>
  </data>
  <data name="MetadataBinder_TopRequiresNonNegativeInteger" xml:space="preserve">
    <value>The value '{0}' is not a non-negative integer value. In OData, the $top query option must specify a non-negative integer value.</value>
  </data>
  <data name="MetadataBinder_UnaryOperatorOperandNotSingleValue" xml:space="preserve">
    <value>The operand for a unary operator '{0}' is not a single value. Unary operators require the operand to be a single value.</value>
  </data>
  <data name="MetadataBinder_UnknownFunction" xml:space="preserve">
    <value>An unknown function with name '{0}' was found.</value>
  </data>
  <data name="MetadataBinder_UnnamedKeyValueOnTypeWithMultipleKeyProperties" xml:space="preserve">
    <value>An unnamed key value was used in a key lookup on a type '{0}' which has more than one key property. Unnamed key value can only be used on a type with one key property.</value>
  </data>
  <data name="MetadataBinder_UnsupportedExtensionToken" xml:space="preserve">
    <value>An unsupported extension query token was found.</value>
  </data>
  <data name="MetadataBinder_UnsupportedQueryTokenKind" xml:space="preserve">
    <value>An unsupported query token kind '{0}' was found.</value>
  </data>
  <data name="MetadataBinder_UnsupportedSystemQueryOption" xml:space="preserve">
    <value>The system query option '{0}' is not supported.</value>
  </data>
  <data name="ODataQueryUtils_CannotSetMetadataAnnotationOnPrimitiveType" xml:space="preserve">
    <value>Setting a metadata annotation on a primitive type is not supported.</value>
  </data>
  <data name="ODataQueryUtils_DidNotFindEntitySet" xml:space="preserve">
    <value>An entity set with name '{0}' could not be found in the provided model.</value>
  </data>
  <data name="ODataQueryUtils_DidNotFindServiceOperation" xml:space="preserve">
    <value>A service operation with name '{0}' could not be found in the provided model.</value>
  </data>
  <data name="ODataQueryUtils_FoundMultipleServiceOperations" xml:space="preserve">
    <value>Found multiple service operations with name '{0}' in a single entity container. Service operation overloads are not supported.</value>
  </data>
  <data name="PropertyInfoTypeAnnotation_CannotFindProperty" xml:space="preserve">
    <value>Unable to find property '{2}' on the instance type '{1}' of the structured type '{0}'.</value>
  </data>
  <data name="QueryDescriptorQueryToken_InvalidInlineCountQueryOptionValue" xml:space="preserve">
    <value>Invalid value '{0}' for $inlinecount query option found. Valid values are '{1}'.</value>
  </data>
  <data name="QueryDescriptorQueryToken_InvalidSkipQueryOptionValue" xml:space="preserve">
    <value>Invalid value '{0}' for $skip query option found. The $skip query option requires a non-negative integer value.</value>
  </data>
  <data name="QueryDescriptorQueryToken_InvalidTopQueryOptionValue" xml:space="preserve">
    <value>Invalid value '{0}' for $top query option found. The $top query option requires a non-negative integer value.</value>
  </data>
  <data name="QueryDescriptorQueryToken_MaxDepthInvalid" xml:space="preserve">
    <value>The maximum depth setting must be a number greater than zero.</value>
  </data>
  <data name="QueryDescriptorQueryToken_UriMustBeAbsolute" xml:space="preserve">
    <value>The specified URI '{0}' must be absolute.</value>
  </data>
  <data name="QueryExpressionTranslator_CollectionQueryNodeWithoutItemType" xml:space="preserve">
    <value>A CollectionQueryNode of kind '{0}' with null ItemType was found. Only a CollectionQueryNode with non-null ItemType can be translated into an expression.</value>
  </data>
  <data name="QueryExpressionTranslator_ConstantNonPrimitive" xml:space="preserve">
    <value>A ConstantQueryNode of type '{0}' was found. Only a ConstantQueryNode of a primitive type can be translated to an expression.</value>
  </data>
  <data name="QueryExpressionTranslator_FilterCollectionOfWrongType" xml:space="preserve">
    <value>A FilterQueryNode input collection was translated to an expression of type '{0}', but type '{1}' is expected.</value>
  </data>
  <data name="QueryExpressionTranslator_FilterExpressionOfWrongType" xml:space="preserve">
    <value>A FilterQueryNode.Expression was translated to an expression of type '{0}', but the expression must evaluate to a boolean value.</value>
  </data>
  <data name="QueryExpressionTranslator_FunctionArgumentNotSingleValue" xml:space="preserve">
    <value>The argument for an invocation of a function with name '{0}' is not a single value. All arguments for this function must be single values.</value>
  </data>
  <data name="QueryExpressionTranslator_KeyLookupOnlyOnEntities" xml:space="preserve">
    <value>A KeyLookupQueryNode is being applied to a collection of type '{0}' which is of kind '{1}'. KeyLookupQueryNode can only be applied to a collection of entity types.</value>
  </data>
  <data name="QueryExpressionTranslator_KeyLookupOnlyOnQueryable" xml:space="preserve">
    <value>A KeyLookupQueryNode is being applied to an expression of incompatible type '{0}'. This KeyLookupQueryNode can only be applied to a collection which translates to an expression of type '{1}'.</value>
  </data>
  <data name="QueryExpressionTranslator_KeyLookupWithNoKeyValues" xml:space="preserve">
    <value>A KeyLookupQueryNode with no key property values was found. Only a KeyLookupQueryNode with at least one key property value can be translated into an expression.</value>
  </data>
  <data name="QueryExpressionTranslator_KeyLookupWithoutKeyProperty" xml:space="preserve">
    <value>A KeyLookupQueryNode is either missing or has more than one value for a key property '{0}' on type '{1}'. There must be exactly one value for the key property.</value>
  </data>
  <data name="QueryExpressionTranslator_KeyPropertyValueWithWrongValue" xml:space="preserve">
    <value>A KeyPropertyValue instance for key property '{0}' has a value of a wrong type. The KeyPropertyValue.KeyValue must be of the same type as the key property.</value>
  </data>
  <data name="QueryExpressionTranslator_KeyPropertyValueWithoutProperty" xml:space="preserve">
    <value>A KeyPropertyValue instance without a valid key property was found. The KeyPropertyValue.KeyProperty must specify a key property.</value>
  </data>
  <data name="QueryExpressionTranslator_NoApplicableFunctionFound" xml:space="preserve">
    <value>No function signature for the function with name '{0}' matches the specified arguments. The function signatures considered are: {1}.</value>
  </data>
  <data name="QueryExpressionTranslator_NodeTranslatedToNull" xml:space="preserve">
    <value>A query node of kind '{0}' was translated to a null expression. Translation of any query node must return a non-null expression.</value>
  </data>
  <data name="QueryExpressionTranslator_NodeTranslatedToWrongType" xml:space="preserve">
    <value>A query node of kind '{0}' was translated to an expression of type '{1}' but an expression of type '{2}' was expected.</value>
  </data>
  <data name="QueryExpressionTranslator_OrderByCollectionOfWrongType" xml:space="preserve">
    <value>An OrderByQueryNode input collection was translated to an expression of type '{0}', but type '{1}' is expected.</value>
  </data>
  <data name="QueryExpressionTranslator_ParameterNotDefinedInScope" xml:space="preserve">
    <value>A ParameterQueryNode which is not defined in the current scope was found.</value>
  </data>
  <data name="QueryExpressionTranslator_PropertyAccessSourceNotStructured" xml:space="preserve">
    <value>The source of a PropertyAccessQueryNode is of kind '{0}'. Properties are only supported for type kinds 'Complex' and 'Entity'.</value>
  </data>
  <data name="QueryExpressionTranslator_PropertyAccessSourceWrongType" xml:space="preserve">
    <value>The source of a PropertyAccessQueryNode was translated to an expression of type '{0}', but type '{1}' is required in order to translate the property access.</value>
  </data>
  <data name="QueryExpressionTranslator_SingleValueQueryNodeWithoutTypeReference" xml:space="preserve">
    <value>A SingleValueQueryNode of kind '{0}' with null TypeReference was found. A SingleValueQueryNode can only be translated into an expression if it has a non-null type or statically represents the null value.</value>
  </data>
  <data name="QueryExpressionTranslator_UnaryNotOperandNotBoolean" xml:space="preserve">
    <value>The operand for the unary not operator is being applied to an expression of type '{0}'. A unary not operator can only be applied to an operand of type bool or bool?.</value>
  </data>
  <data name="QueryExpressionTranslator_UnknownFunction" xml:space="preserve">
    <value>An unknown function with name '{0}' was found.</value>
  </data>
  <data name="QueryExpressionTranslator_UnsupportedExtensionNode" xml:space="preserve">
    <value>An unsupported extension query node was found.</value>
  </data>
  <data name="QueryExpressionTranslator_UnsupportedQueryNodeKind" xml:space="preserve">
    <value>An unsupported query node kind '{0}' was found.</value>
  </data>
  <data name="QueryOptionUtils_QueryParameterMustBeSpecifiedOnce" xml:space="preserve">
    <value>Query option '{0}' was specified more than once, but it must be specified at most once.</value>
  </data>
  <data name="UriBuilder_NotSupportedClrLiteral" xml:space="preserve">
    <value>The CLR literal of type '{0}' is not supported to be written as a Uri part.</value>
  </data>
  <data name="UriBuilder_NotSupportedQueryToken" xml:space="preserve">
    <value>QueryToken '{0}' is not supported to be written as a Uri part.</value>
  </data>
  <data name="UriQueryExpressionParser_CloseParenOrCommaExpected" xml:space="preserve">
    <value>')' or ',' expected at position {0} in '{1}'.</value>
  </data>
  <data name="UriQueryExpressionParser_CloseParenOrOperatorExpected" xml:space="preserve">
    <value>')' or operator expected at position {0} in '{1}'.</value>
  </data>
  <data name="UriQueryExpressionParser_ExpressionExpected" xml:space="preserve">
    <value>Expression expected at position {0} in '{1}'.</value>
  </data>
  <data name="UriQueryExpressionParser_OpenParenExpected" xml:space="preserve">
    <value>'(' expected at position {0} in '{1}'.</value>
  </data>
  <data name="UriQueryExpressionParser_TooDeep" xml:space="preserve">
    <value>Recursion depth exceeded allowed limit.</value>
  </data>
  <data name="UriQueryExpressionParser_UnrecognizedLiteral" xml:space="preserve">
    <value>Unrecognized '{0}' literal '{1}' at '{2}' in '{3}'.</value>
  </data>
  <data name="UriQueryPathParser_InvalidKeyValueLiteral" xml:space="preserve">
    <value>The key value '{0}' was not recognized as a valid literal.</value>
  </data>
  <data name="UriQueryPathParser_RequestUriDoesNotHaveTheCorrectBaseUri" xml:space="preserve">
    <value>The URI '{0}' is not valid because it is not based on '{1}'.</value>
  </data>
  <data name="UriQueryPathParser_SyntaxError" xml:space="preserve">
    <value>Bad Request: there was an error in the query syntax.</value>
  </data>
  <data name="UriQueryPathParser_TooManySegments" xml:space="preserve">
    <value>Too many segments in URI.</value>
  </data>
</root>