using System;
using System.Collections.Generic;
using System.Threading;
using Microsoft.ReportingServices.Diagnostics;
using Microsoft.ReportingServices.ReportIntermediateFormat.Persistence;
using Microsoft.ReportingServices.ReportProcessing.Persistence;

namespace Microsoft.ReportingServices.ReportProcessing
{
	// Token: 0x02000615 RID: 1557
	[Serializable]
	public sealed class ValidValue : Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.IPersistable
	{
		// Token: 0x06005565 RID: 21861 RVA: 0x001685B2 File Offset: 0x001667B2
		public ValidValue()
		{
		}

		// Token: 0x06005566 RID: 21862 RVA: 0x001685BA File Offset: 0x001667BA
		public ValidValue(string validValue, string label)
		{
			this.m_stringValue = validValue;
			this.m_label = label;
		}

		// Token: 0x06005567 RID: 21863 RVA: 0x001685D0 File Offset: 0x001667D0
		public ValidValue(object validValue, string label)
		{
			this.m_value = validValue;
			this.m_label = label;
		}

		// Token: 0x17001F3F RID: 7999
		// (get) Token: 0x06005568 RID: 21864 RVA: 0x001685E6 File Offset: 0x001667E6
		// (set) Token: 0x06005569 RID: 21865 RVA: 0x001685EE File Offset: 0x001667EE
		public object Value
		{
			get
			{
				return this.m_value;
			}
			set
			{
				this.m_value = value;
				this.m_cachedAutogenLabel = null;
			}
		}

		// Token: 0x17001F40 RID: 8000
		// (get) Token: 0x0600556A RID: 21866 RVA: 0x00168600 File Offset: 0x00166800
		// (set) Token: 0x0600556B RID: 21867 RVA: 0x0016864F File Offset: 0x0016684F
		public string Label
		{
			get
			{
				if (this.m_label == null)
				{
					if (!this.m_labelAutoGenerated)
					{
						this.m_labelAutoGenerated = true;
						if (this.m_value != null)
						{
							this.m_cachedAutogenLabel = ParameterInfo.CastValueToLabelString(this.m_value, Localization.ClientPrimaryCulture);
						}
					}
					return this.m_cachedAutogenLabel;
				}
				return this.m_label;
			}
			set
			{
				this.m_label = value;
				this.m_cachedAutogenLabel = null;
				this.m_labelAutoGenerated = false;
			}
		}

		// Token: 0x0600556C RID: 21868 RVA: 0x00168666 File Offset: 0x00166866
		internal void EnsureLabelIsGenerated()
		{
			if (this.m_label == null && this.m_cachedAutogenLabel == null && this.m_value != null)
			{
				this.m_cachedAutogenLabel = ParameterInfo.CastValueToLabelString(this.m_value, Thread.CurrentThread.CurrentCulture);
			}
			this.m_labelAutoGenerated = true;
		}

		// Token: 0x17001F41 RID: 8001
		// (get) Token: 0x0600556D RID: 21869 RVA: 0x001686A2 File Offset: 0x001668A2
		// (set) Token: 0x0600556E RID: 21870 RVA: 0x001686AA File Offset: 0x001668AA
		public string LabelRaw
		{
			get
			{
				return this.m_label;
			}
			set
			{
				this.Label = value;
			}
		}

		// Token: 0x17001F42 RID: 8002
		// (get) Token: 0x0600556F RID: 21871 RVA: 0x001686B3 File Offset: 0x001668B3
		public string StringValue
		{
			get
			{
				return this.m_stringValue;
			}
		}

		// Token: 0x06005570 RID: 21872 RVA: 0x001686BC File Offset: 0x001668BC
		internal static Microsoft.ReportingServices.ReportProcessing.Persistence.Declaration GetDeclaration()
		{
			return new Microsoft.ReportingServices.ReportProcessing.Persistence.Declaration(Microsoft.ReportingServices.ReportProcessing.Persistence.ObjectType.None, new MemberInfoList
			{
				new Microsoft.ReportingServices.ReportProcessing.Persistence.MemberInfo(Microsoft.ReportingServices.ReportProcessing.Persistence.MemberName.Label, Microsoft.ReportingServices.ReportProcessing.Persistence.Token.String),
				new Microsoft.ReportingServices.ReportProcessing.Persistence.MemberInfo(Microsoft.ReportingServices.ReportProcessing.Persistence.MemberName.Value, Microsoft.ReportingServices.ReportProcessing.Persistence.Token.Object)
			});
		}

		// Token: 0x06005571 RID: 21873 RVA: 0x001686F8 File Offset: 0x001668F8
		internal static Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.Declaration GetNewDeclaration()
		{
			return new Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.Declaration(Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.ObjectType.ValidValue, Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.ObjectType.None, new List<Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberInfo>
			{
				new Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberInfo(Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberName.Label, Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.Token.String),
				new Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberInfo(Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberName.Value, Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.Token.Object)
			});
		}

		// Token: 0x06005572 RID: 21874 RVA: 0x0016873C File Offset: 0x0016693C
		void Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.IPersistable.Serialize(Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.IntermediateFormatWriter writer)
		{
			writer.RegisterDeclaration(ValidValue.m_Declaration);
			while (writer.NextMember())
			{
				Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberName memberName = writer.CurrentMember.MemberName;
				if (memberName != Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberName.Value)
				{
					if (memberName == Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberName.Label)
					{
						writer.Write(this.m_label);
					}
					else
					{
						Global.Tracer.Assert(false);
					}
				}
				else
				{
					writer.Write(this.m_value);
				}
			}
		}

		// Token: 0x06005573 RID: 21875 RVA: 0x001687A4 File Offset: 0x001669A4
		void Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.IPersistable.Deserialize(Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.IntermediateFormatReader reader)
		{
			reader.RegisterDeclaration(ValidValue.m_Declaration);
			while (reader.NextMember())
			{
				Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberName memberName = reader.CurrentMember.MemberName;
				if (memberName != Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberName.Value)
				{
					if (memberName == Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberName.Label)
					{
						this.m_label = reader.ReadString();
					}
					else
					{
						Global.Tracer.Assert(false);
					}
				}
				else
				{
					this.m_value = reader.ReadVariant();
				}
			}
		}

		// Token: 0x06005574 RID: 21876 RVA: 0x0016880B File Offset: 0x00166A0B
		void Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.IPersistable.ResolveReferences(Dictionary<Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.ObjectType, List<Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.MemberReference>> memberReferencesCollection, Dictionary<int, Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.IReferenceable> referenceableItems)
		{
			Global.Tracer.Assert(false);
		}

		// Token: 0x06005575 RID: 21877 RVA: 0x00168818 File Offset: 0x00166A18
		Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.ObjectType Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.IPersistable.GetObjectType()
		{
			return Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.ObjectType.ValidValue;
		}

		// Token: 0x04002D5F RID: 11615
		private object m_value;

		// Token: 0x04002D60 RID: 11616
		private string m_label;

		// Token: 0x04002D61 RID: 11617
		[NonSerialized]
		private string m_stringValue;

		// Token: 0x04002D62 RID: 11618
		[NonSerialized]
		private string m_cachedAutogenLabel;

		// Token: 0x04002D63 RID: 11619
		[NonSerialized]
		private bool m_labelAutoGenerated;

		// Token: 0x04002D64 RID: 11620
		[NonSerialized]
		private static readonly Microsoft.ReportingServices.ReportIntermediateFormat.Persistence.Declaration m_Declaration = ValidValue.GetNewDeclaration();
	}
}
