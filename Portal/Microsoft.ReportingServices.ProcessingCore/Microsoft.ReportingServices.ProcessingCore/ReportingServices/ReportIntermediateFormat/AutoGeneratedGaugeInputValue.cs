using System;
using Microsoft.ReportingServices.ReportProcessing;

namespace Microsoft.ReportingServices.ReportIntermediateFormat
{
	// Token: 0x020003EC RID: 1004
	internal sealed class AutoGeneratedGaugeInputValue : GaugeInputValue
	{
		// Token: 0x06002974 RID: 10612 RVA: 0x000C1C98 File Offset: 0x000BFE98
		internal AutoGeneratedGaugeInputValue(GaugePanel gaugePanel, string stateIndicatorName)
			: base(gaugePanel)
		{
			this.m_stateIndicatorName = stateIndicatorName;
		}

		// Token: 0x06002975 RID: 10613 RVA: 0x000C1CA8 File Offset: 0x000BFEA8
		protected override void InitializeValue(InitializationContext context)
		{
			int messageCount = context.ErrorContext.MessageCount;
			base.InitializeValue(context);
			ProcessingMessageList messages = context.ErrorContext.Messages;
			int messageCount2 = context.ErrorContext.MessageCount;
			if (messageCount2 > messageCount)
			{
				for (int i = messageCount; i < messageCount2 - messageCount; i++)
				{
					messages.RemoveAt(i);
				}
				context.ErrorContext.Register(ProcessingErrorCode.rsStateIndicatorInvalidAutoGenerateMinMaxExpression, Severity.Error, context.ObjectType, context.ObjectName, null, new string[] { this.m_stateIndicatorName });
			}
		}

		// Token: 0x04001706 RID: 5894
		[NonSerialized]
		private string m_stateIndicatorName;
	}
}
